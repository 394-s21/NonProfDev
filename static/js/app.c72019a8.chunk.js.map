{"version":3,"sources":["components/Developer.js","components/DeveloperList.js","firebase.js","utils/search.js","screens/NonProfScreens/SearchScreen.js","screens/NonProfScreens/DeveloperProfileScreen.js","screens/ChooseAppViewScreen.js","components/PreferenceButton.js","components/PreferenceGroup.js","screens/DeveloperScreens/DeveloperPreferenceSelectionScreen.js","components/Job.js","components/JobList.js","contexts/JobListContext.js","screens/DeveloperScreens/JobListScreen.js","screens/DeveloperScreens/JobDetailScreen.js","components/Forms/colors.js","components/Forms/FormErrorMessage.js","components/Forms/FormTextInput.js","components/Forms/FormButton.js","components/Forms/FormSwitch.js","components/Form.js","components/Forms/Form.js","components/Forms/FormField.js","screens/DeveloperScreens/NonprofContactInfoScreen.js","screens/RegisterScreen.js","contexts/UserContext.js","screens/NonProfScreens/NonProfHomeScreen.js","screens/NonProfScreens/ViewMessagesScreen.js","screens/NonProfScreens/NonProfCreateJobScreen.js","App.js"],"names":["styles","StyleSheet","create","developerButton","borderRadius","borderStyle","borderWidth","borderColor","flexDirection","alignItems","margin","padding","backgroundColor","developerImage","width","height","marginRight","developerInfo","flexShrink","developerName","fontWeight","fontSize","developerLocation","developerRole","fontStyle","developerSkills","marginTop","Developer","developer","view","TouchableOpacity","style","onPress","Image","source","uri","pic","View","Text","name","location","role","skills","join","DeveloperList","developers","ScrollView","map","key","id","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","options","keys","container","flex","justifyContent","paddingTop","bannerStyle","color","SearchScreen","navigation","useState","search","updateSearch","setDevelopers","developersShown","setDevelopersShown","useEffect","db","database","ref","handleData","snap","val","developersList","Object","values","console","log","on","error","off","obj","fuse","Fuse","SafeAreaView","placeholder","onChangeText","v","item","value","lightTheme","navigate","StatusBar","hidden","barStyle","Field","label","fieldContainer","field","weeklyTimes","mapWeeklyTime","devTime","returnArr","i","length","push","projectLengths","mapProjectLength","projTime","teamSizes","mapTeamSize","teamSize","marginLeft","marginBottom","headerText","textAlign","developerBio","connectButton","connectText","DeveloperProfileScreen","route","params","Bio","toLowerCase","weeklyTime","projectLength","userContainer","h1_text","h3_text","h4_text","roleButton","buttonText","ChooseAppViewScreen","h1","h3","roles","preferenceButtonBase","minWidth","maxWidth","preferenceButton","preferenceTextSelected","preferenceText","preferenceButtonSelected","PreferenceButton","select","isSelected","title","buttonGroup","PreferenceGroup","toggleSelect","selection","preferenceData","submitButtonText","DeveloperPreferenceSelectionScreen","a","Array","initSelections","selections","setSelections","tmp","handleSelect","preferences","prefObj","mask","filter","_","getPreferences","jobButton","jobMatched","shadowColor","shadowOpacity","shadowRadius","shadowOffset","jobInfo","jobName","jobCompany","jobTime","Job","job","matched","nonProfit","company","companyId","JobList","jobs","nMatched","nonProfits","slice","JobListContext","createContext","JobDisplayScreen","setJobs","setNonProfits","jobsList","nonprofits","getOrderedJobs","nGoodMatches","rank","nonprofit","includes","industry","match","isMatchBasic","sort","b","Provider","orderedJobs","renderJobList","jobProps","descrip","languages","companyProps","logo","JobDetailScreen","isArray","Fragment","Linking","openURL","url","nonprof","primary","secondary","black","white","ghostWhite","lightGrey","mediumGrey","red","FormErrorMessage","visible","errorText","Colors","FormTextInput","leftIcon","rightIcon","handlePasswordVisibility","otherProps","MaterialCommunityIcons","size","icon","TextInput","input","placeholderTextColor","rightIconStyles","marginVertical","alignSelf","button","textTransform","Form","props","children","initialValues","onSubmit","validationSchema","Base","useFormikContext","setFieldTouched","setFieldValue","errors","touched","text","onBlur","Button","handleSubmit","ErrorMessage","Switch","onChange","x","onValueChange","NonprofContactInfoScreen","messageSent","setMessageSent","nonprofName","message","async","child","Date","now","set","catch","setSubmitError","autoCapitalize","autoFocus","multiline","numberOfLines","Yup","shape","email","required","password","min","confirm","oneOf","elevation","RegisterScreen","signInError","setSignInError","handleOnLogin","auth","signInWithEmailAndPassword","handleOnSignUp","createUserWithEmailAndPassword","authCredential","user","updateProfile","displayName","confirmPassword","keyboardType","textContentType","autoCorrect","secureTextEntry","UserContext","NonProfHomeScreen","MessageField","fieldText","RenderMessages","messages","ViewMessageScreen","setMessages","messageList","NonProfCreateJobScreen","submitted","setSubmitted","description","Stack","createStackNavigator","App","setUser","setAuth","uid","alert","onAuthStateChanged","JobButton","NavigationContainer","Navigator","Screen","component","headerRight","JobListScreen"],"mappings":"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","file":"static/js/app.c72019a8.chunk.js","sourcesContent":["import React from 'react'\nimport {\n  StyleSheet,\n  Image,\n  Text,\n  TouchableOpacity,\n  View,\n  Dimensions,\n} from 'react-native'\nimport { BorderlessButton } from 'react-native-gesture-handler'\n\n// TODO: avatar/profile picture is currently hardcoded\nconst Developer = ({ developer, view }) => {\n  // TODO: maybe scale the font size based on the screen width/height?\n  const scaleFont = () => {\n    const width = Dimensions.get('window').width\n    return width > 500 ? 16 : 12\n  }\n\n  return (\n    <TouchableOpacity\n      style={styles.developerButton}\n      onPress={() => {\n        view(developer)\n      }}\n    >\n      <Image style={styles.developerImage} source={{ uri: developer.pic }} />\n      <View style={styles.developerInfo}>\n        <Text style={styles.developerName}>{developer.name}</Text>\n        <Text style={styles.developerLocation}>{developer.location}</Text>\n        <Text style={styles.developerRole}>{developer.role}</Text>\n        <Text style={styles.developerSkills}>\n          Skills: {developer.skills.join(', ')}\n        </Text>\n      </View>\n    </TouchableOpacity>\n  )\n}\n\nconst styles = StyleSheet.create({\n  developerButton: {\n    borderRadius: 5,\n    borderStyle: 'solid',\n    borderWidth: 1,\n    borderColor: '#DFDFDF',\n    // justifyContent: 'center',\n    flexDirection: 'row',\n    alignItems: 'center',\n    margin: 10,\n    padding: 10,\n    backgroundColor: 'white',\n  },\n  developerImage: {\n    width: 75,\n    height: 100,\n    marginRight: 10,\n  },\n  developerInfo: {\n    flexDirection: 'column',\n    flexShrink: 1,\n  },\n  developerName: {\n    fontWeight: 'bold',\n    fontSize: 18,\n  },\n  developerLocation: {\n    fontWeight: '300',\n    fontSize: 16,\n  },\n  developerRole: {\n    fontStyle: 'italic',\n    fontSize: 14,\n  },\n  developerSkills: {\n    marginTop: 10,\n    fontSize: 16,\n  },\n})\n\nexport default Developer\n","import React from 'react'\nimport { ScrollView } from 'react-native'\nimport Developer from './Developer'\n\nconst DeveloperList = ({ developers, view }) => {\n  return (\n    <ScrollView>\n      {developers.map((developer) => (\n        <Developer key={developer.id} view={view} developer={developer} />\n      ))}\n    </ScrollView>\n  )\n}\n\nexport default DeveloperList\n","import firebase from 'firebase/app'\nimport 'firebase/database'\nimport 'firebase/auth'\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n  apiKey: 'AIzaSyCQtBaMx1kJUc3cUhV2OlB_xBTeBG0CIdE',\n  authDomain: 'nonprofdev.firebaseapp.com',\n  databaseURL: 'https://nonprofdev-default-rtdb.firebaseio.com',\n  projectId: 'nonprofdev',\n  storageBucket: 'nonprofdev.appspot.com',\n  messagingSenderId: '135728428832',\n  appId: '1:135728428832:web:868a5bf1ecaab0db0ec945',\n}\n\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig)\n\nexport { firebase }\n","import Fuse from 'fuse.js'\n\nconst options = {\n  // isCaseSensitive: false,\n  // includeScore: false,\n  // shouldSort: true,\n  // includeMatches: false,\n  // findAllMatches: false,\n  // minMatchCharLength: 1,\n  // location: 0,\n  // threshold: 0.6,\n  // distance: 100,\n  // useExtendedSearch: false,\n  // ignoreLocation: false,\n  // ignoreFieldNorm: false,\n  keys: ['location', 'skills'],\n}\n\nexport const getFuse = (obj) => new Fuse(obj, options)\n","import React, { useState, useEffect } from 'react'\nimport { SafeAreaView, StatusBar, StyleSheet } from 'react-native'\nimport { SearchBar } from 'react-native-elements'\nimport DeveloperList from '../../components/DeveloperList'\nimport { firebase } from '../../firebase'\nimport { getFuse } from '../../utils/search'\n\nconst SearchScreen = ({ navigation }) => {\n  const [search, updateSearch] = useState('')\n  const [developers, setDevelopers] = useState([])\n  // Filtered list of developers\n  const [developersShown, setDevelopersShown] = useState(developers)\n\n  useEffect(() => {\n    const db = firebase.database().ref('developers')\n    const handleData = (snap) => {\n      if (snap.val()) {\n        const val = snap.val()\n        const developersList = Object.values(val)\n        console.log(developersList)\n        setDevelopers(developersList)\n        setDevelopersShown(developersList)\n      }\n    }\n    db.on('value', handleData, (error) => console.log(error))\n    return () => db.off('value', handleData)\n  }, [])\n\n  // Hacky search with fuse.js\n  const fuse = getFuse(developers)\n  const handleSearch = (search) => {\n    updateSearch(search)\n    search === ''\n      ? setDevelopersShown(developers)\n      : setDevelopersShown(fuse.search(search).map((v) => v.item))\n  }\n\n  // View developer detail\n  const view = (developer) => {\n    navigation.navigate('DeveloperProfileScreen', { developer })\n  }\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <SearchBar\n        placeholder=\"Search for skills/location...\"\n        onChangeText={handleSearch}\n        value={search}\n        lightTheme={true}\n      />\n      <DeveloperList developers={developersShown} view={view} />\n      <StatusBar style=\"auto\" hidden=\"false\" barStyle=\"dark-content\" />\n    </SafeAreaView>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    //alignItems: 'center',\n    justifyContent: 'center',\n    paddingTop: 20,\n    backgroundColor: '#D7EAF9',\n  },\n  bannerStyle: {\n    alignItems: 'center',\n    color: 'white',\n    backgroundColor: '#cc0000ff',\n    fontSize: 28,\n  },\n})\n\nexport default SearchScreen\n","import React from 'react'\nimport {\n  SafeAreaView,\n  StyleSheet,\n  Text,\n  View,\n  TouchableOpacity,\n  Image,\n} from 'react-native'\nimport { ScrollView } from 'react-native-gesture-handler'\n\nconst Field = ({ label, value }) => {\n  return (\n    <View style={styles.fieldContainer}>\n      <Text style={styles.label}>{label}</Text>\n      <Text style={styles.field}>{value}</Text>\n    </View>\n  )\n}\n\nconst DeveloperProfileScreen = ({ route, navigation }) => {\n  const developer = route.params.developer\n  return (\n    <SafeAreaView style={styles.container}>\n      <Image style={styles.developerImage} source={{ uri: developer.pic }} />\n      <Text label=\"Name\" style={styles.developerName}>\n        {' '}\n        {developer.name}{' '}\n      </Text>\n      <ScrollView>\n        <Text style={styles.developerLocation}>{developer.location}</Text>\n        <Text style={styles.developerRole}>{developer.role}</Text>\n        {/* <Text style={styles.developerBio}>\n          {developer.Bio}\n        </Text> */}\n        <Field label=\"Bio\" value={developer.Bio} style={styles.developerBio} />\n        <Field\n          label=\"Skills\"\n          value={developer.skills.join(', ')}\n          style={styles.developerSkills}\n        />\n        <Field\n          label=\"Email\"\n          value={developer.name.toLowerCase() + \"@gmail.com\"}\n          style={styles.developerSkills}\n        />\n        <Text style={styles.headerText}> - Looking For - </Text>\n        <Field\n          label=\"Weekly Time Commitment\"\n          value={mapWeeklyTime(developer.weeklyTime).join('\\n')}\n          style={styles.developerSkills}\n        />\n        <Field\n          label=\"Project Length Commitment\"\n          value={mapProjectLength(developer.projectLength).join('\\n')}\n          style={styles.developerSkills}\n        />\n        <Field\n          label=\"Desired Team Size\"\n          value={mapTeamSize(developer.teamSize).join('\\n')}\n          style={styles.developerSkills}\n        />\n      </ScrollView>\n    </SafeAreaView>\n  )\n}\n\nconst weeklyTimes = [\n  'Less Than 5 Hours Per Week',\n  '5-10 Hours Per Week',\n  '10+ Hours Per Week',\n]\n\nconst mapWeeklyTime = (devTime) => {\n  var returnArr = []\n  for (var i = 0; i < devTime.length; i++) {\n    returnArr.push(weeklyTimes[devTime[i]])\n  }\n\n  return returnArr\n}\n\nconst projectLengths = ['Less Than 1 Month', '1-3 Months', '3+ Months']\n\nconst mapProjectLength = (projTime) => {\n  var returnArr = []\n  for (var i = 0; i < projTime.length; i++) {\n    returnArr.push(projectLengths[projTime[i]])\n  }\n\n  return returnArr\n}\n\nconst teamSizes = ['Solo', '2-3 Member Team', '3+ Member Team']\n\nconst mapTeamSize = (teamSize) => {\n  var returnArr = []\n  for (var i = 0; i < teamSize.length; i++) {\n    returnArr.push(teamSizes[teamSize[i]])\n  }\n\n  return returnArr\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    marginTop: 10,\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    width: '90%',\n  },\n  field: {\n    padding: 5,\n    backgroundColor: 'white',\n    borderRadius: 5,\n    fontSize: 18,\n  },\n  fieldContainer: {\n    marginTop: 10,\n    marginBottom: 20,\n  },\n  label: {\n    fontWeight: 'bold',\n  },\n  headerText: {\n    // fontWeight: 'bold',\n    textAlign: 'center',\n    // textDecorationLine: 'underline',\n    fontSize: 22,\n    marginBottom: 10,\n  },\n  developerName: {\n    fontSize: 26,\n    fontWeight: 'bold',\n    marginBottom: 5,\n    marginLeft: 'auto',\n    marginRight: 'auto',\n  },\n  developerLocation: {\n    textAlign: 'center',\n    fontSize: 18,\n  },\n  developerRole: {\n    textAlign: 'center',\n    fontStyle: 'italic',\n    marginBottom: 10,\n    fontSize: 16,\n  },\n  developerBio: {\n    textAlign: 'center',\n  },\n  developerImage: {\n    width: 200,\n    height: 300,\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    marginBottom: 10,\n  },\n  connectButton: {\n    margin: 30,\n    padding: 10,\n    textAlign: 'center',\n    backgroundColor: 'lightblue',\n  },\n  connectText: {\n    fontSize: 22,\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    // fontWeight: 500,\n  },\n})\n\nexport default DeveloperProfileScreen\n","import React, { useState, useEffect } from 'react'\nimport {\n  StatusBar,\n  StyleSheet,\n  Text,\n  View,\n  TouchableOpacity,\n} from 'react-native'\n\n// Original home screen\n// Currently not used\nconst ChooseAppViewScreen = ({ navigation }) => {\n  const [roles, setRoles] = useState({});\n\n  return (\n    <View style={styles.container}>\n      <Text h1 style={styles.h1_text}>\n        Welcome to NonProfDev!\n      </Text>\n      <Text h3 style={styles.h3_text}>\n        A simple, intuitive platform to connect non-profit organizations with\n        passionate developers.\n      </Text>\n      <Text h3 style={styles.h3_text}>\n        Are you a:\n      </Text>\n      <View>\n        <TouchableOpacity\n          style={styles.roleButton}\n          onPress={() => {\n            const roles = {role: 'developer'};\n            navigation.navigate('RegisterScreen', {roles});\n          }}\n        >\n          <Text style={styles.buttonText}>Developer</Text>\n        </TouchableOpacity>\n      </View>\n      <View>\n        <TouchableOpacity\n          style={styles.roleButton}\n          onPress={() => {\n            const roles = {role: 'nonprofit'};\n            navigation.navigate('RegisterScreen', {roles});\n          }}\n        >\n          <Text style={styles.buttonText}>Non-Profit Organization</Text>\n        </TouchableOpacity>\n      </View>\n\n      <StatusBar style=\"auto\" />\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n\n  userContainer: {\n    flex: 1,\n    alignItems: 'center',\n  },\n  h1_text: {\n    fontSize: 48,\n    marginBottom: 25,\n  },\n  h3_text: {\n    fontSize: 24,\n    textAlign: 'center',\n    marginBottom: 20,\n  },\n  h4_text: {\n    fontSize: 16,\n    textAlign: 'center',\n    marginBottom: 15,\n  },\n  roleButton: {\n    backgroundColor: '#2196F3',\n    fontSize: 16,\n    margin: 15,\n    width: 250,\n    padding: 15,\n    textAlign: 'center',\n  },\n  buttonText: {\n    fontSize: 20,\n    color: 'ghostwhite',\n    textAlign: 'center',\n  },\n})\n\nexport default ChooseAppViewScreen\n","import React from 'react'\nimport { StyleSheet, Text, TouchableOpacity } from 'react-native'\n\nconst PreferenceButton = ({ select, buttonText, isSelected }) => (\n  <TouchableOpacity\n    onPress={select}\n    style={styles[isSelected ? 'preferenceButtonSelected' : 'preferenceButton']}\n  >\n    <Text\n      style={styles[isSelected ? 'preferenceTextSelected' : 'preferenceText']}\n    >\n      {buttonText}\n    </Text>\n  </TouchableOpacity>\n)\n\nconst preferenceButtonBase = {\n  borderRadius: 5,\n  margin: 10,\n  height: 50,\n  minWidth: 300,\n  maxWidth: 300,\n}\n\nconst styles = StyleSheet.create({\n  preferenceButton: {\n    ...preferenceButtonBase,\n    backgroundColor: '#d3d3d3',\n  },\n  preferenceTextSelected: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    color: 'white',\n    fontSize: 20,\n    textAlign: 'center',\n    paddingTop: 12,\n  },\n  preferenceText: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    color: 'black',\n    fontSize: 20,\n    textAlign: 'center',\n    paddingTop: 12,\n  },\n  preferenceButtonSelected: {\n    ...preferenceButtonBase,\n    backgroundColor: '#004a99',\n  },\n})\n\nexport default PreferenceButton\n","import React, { useState } from 'react'\nimport { StyleSheet, Text, View } from 'react-native'\nimport PreferenceButton from './PreferenceButton'\n\nconst PreferenceGroup = ({ title, options, toggleSelect, selection }) => (\n  <View>\n    <Text style={styles.title}>{title}</Text>\n    <View style={styles.buttonGroup}>\n      {options.map((name, i) => (\n        <PreferenceButton\n          key={i}\n          select={() => toggleSelect(i)}\n          buttonText={name}\n          isSelected={selection[i]}\n        />\n      ))}\n    </View>\n  </View>\n)\n\nconst styles = StyleSheet.create({\n  title: {\n    fontSize: 32,\n    textAlign: 'center',\n    marginTop: 30,\n  },\n  buttonGroup: {\n    flex: 1,\n    alignItems: 'center',\n  },\n})\n\nexport default PreferenceGroup\n","import React, { useState } from 'react'\nimport {\n  StatusBar,\n  StyleSheet,\n  SafeAreaView,\n  Text,\n  View,\n  Button,\n  TouchableOpacity,\n} from 'react-native'\nimport PreferenceGroup from '../../components/PreferenceGroup'\nimport { ScrollView /*TouchableOpacity*/ } from 'react-native-gesture-handler'\n\n// Preference data hardcoded for now, substitute for db call later\nconst preferenceData = [\n  {\n    id: 'role',\n    title: 'Primary Skillset/Desired Role',\n    options: ['Web Design', 'Web Development', 'Backend Development'],\n  },\n  {\n    id: 'industry',\n    title: 'Primary Field of Interest',\n    options: ['Community Leadership', 'Education', 'Religion'],\n  },\n  {\n    id: 'length',\n    title: 'Project Length',\n    options: ['One Month or Shorter', '1-3 Months (One Quarter)', '3+ Months'],\n  },\n  {\n    id: 'weeklyTime',\n    title: 'Weekly Commitment',\n    options: ['5 Hours or Fewer', '5-10 Hours', '10+ Hours'],\n  },\n  {\n    id: 'teamSize',\n    title: 'Team Size',\n    options: ['Solo', '2-3 Member Team', '3+ Member Team'],\n  },\n]\n\n/**\n * Creates a selection object with\n *   key = preference title\n *   value = boolean array of length options\n */\nconst initSelections = (preferenceData) => {\n  const obj = {}\n  preferenceData.map((v) => {\n    const a = new Array(v.options.length)\n    for (let i = 0; i < v.options.length; ++i) a[i] = false\n    obj[v.id] = a\n  })\n  return obj\n}\n\n/**\n * Convert selections object to map of preferences\n */\nconst getPreferences = (preferenceData, selections) => {\n  const obj = {}\n  preferenceData.map((prefObj) => {\n    const mask = selections[prefObj.id]\n    obj[prefObj.id] = prefObj.options.filter((_, i) => mask[i])\n  })\n  return obj\n}\n\nconst DeveloperPreferenceSelectionScreen = ({ navigation }) => {\n  const [selections, setSelections] = useState(initSelections(preferenceData))\n\n  const handleSelect = (id, i) => {\n    //const newSelections = { ...selections }\n    const tmp = selections[id]\n    tmp[i] = !tmp[i]\n    setSelections((selections) => ({ ...selections, id: tmp }))\n  }\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <ScrollView>\n        <Text style={styles.h1_text}>\n          Please select one or more preferences for each of the following:\n        </Text>\n        {preferenceData.map((v, i) => (\n          <PreferenceGroup\n            key={i}\n            title={v.title}\n            options={v.options}\n            toggleSelect={(i) => handleSelect(v.id, i)}\n            selection={selections[v.id]}\n          />\n        ))}\n\n        <View style={styles.userContainer}>\n          {/* <Button\n            style={styles.submitButtonText}\n            title=\"Submit Preferences\"\n            onPress={() => {\n              const preferences = getPreferences(preferenceData, selections)\n              navigation.navigate('JobListScreen', { preferences })\n            }}\n          /> */}\n          <TouchableOpacity\n            style={styles.roleButton}\n            onPress={() => {\n              const preferences = getPreferences(preferenceData, selections)\n              navigation.navigate('JobListScreen', { preferences })\n            }}\n          >\n            <Text style={styles.submitButtonText}>Submit Preferences</Text>\n          </TouchableOpacity>\n        </View>\n\n        <StatusBar style=\"auto\" />\n      </ScrollView>\n    </SafeAreaView>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n    // marginRight: 20,\n  },\n  userContainer: {\n    flex: 1,\n    alignItems: 'center',\n  },\n  h1_text: {\n    fontSize: 24,\n    marginTop: 30,\n    textAlign: 'center',\n  },\n  roleButton: {\n    borderRadius: 3,\n    backgroundColor: 'seagreen',\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginTop: 45,\n    marginBottom: 15,\n    padding: 20,\n    width: 300,\n  },\n  submitButtonText: {\n    color: 'ghostwhite',\n    fontSize: 20,\n    textAlign: 'center',\n  },\n})\n\nexport default DeveloperPreferenceSelectionScreen\n","import React from 'react'\nimport {\n  StyleSheet,\n  Text,\n  TouchableOpacity,\n  View,\n  Dimensions,\n} from 'react-native'\n\nconst Job = ({ job, view, matched, nonProfit }) => {\n  // TODO: maybe scale the font size based on the screen width/height?\n  const scaleFont = () => {\n    const width = Dimensions.get('window').width\n    return width > 500 ? 16 : 12\n  }\n\n  return (\n    <TouchableOpacity\n      style={matched ? styles.jobMatched : styles.jobButton}\n      onPress={() => {\n        view(job)\n      }}\n    >\n      <View style={styles.jobInfo}>\n        <Text style={styles.jobName}>{job.title}</Text>\n        <Text style={styles.jobCompany}>\n          {'company' in nonProfit ? nonProfit.company : job.companyId}\n        </Text>\n        <Text style={styles.jobTime}>{job.weeklyTime}</Text>\n      </View>\n    </TouchableOpacity>\n  )\n}\n\nconst timeParser = (timeInt) => {\n  if (timeInt === 0) {\n    return '<5 hrs/week'\n  } else if (timeInt === 1) {\n    return '5-10 hrs/week'\n  } else {\n    return '10+ hrs/week'\n  }\n}\n\nconst styles = StyleSheet.create({\n  jobButton: {\n    borderRadius: 5,\n    borderStyle: 'solid',\n    borderWidth: 1,\n    borderColor: 'black',\n    // justifyContent: 'center',\n    flexDirection: 'row',\n    alignItems: 'center',\n    margin: 10,\n    padding: 10,\n    backgroundColor: 'white',\n  },\n  jobMatched: {\n    borderRadius: 5,\n    borderStyle: 'solid',\n    borderWidth: 3,\n    borderColor: 'green',\n    shadowColor: 'green',\n    shadowOpacity: 0.4,\n    shadowRadius: 4,\n    shadowOffset: {\n      height: 2,\n      width: 2,\n    },\n    // justifyContent: 'center',\n    flexDirection: 'row',\n    alignItems: 'center',\n    margin: 10,\n    padding: 10,\n    // backgroundColor: '#289C28', // old (too dark) background color\n    // backgroundColor: '#90ee90', // new (maybe too light?) green color\n    backgroundColor: 'white',\n  },\n  jobInfo: {\n    flexDirection: 'column',\n    flexShrink: 1,\n  },\n  jobName: {\n    fontWeight: 'bold',\n    fontSize: 18,\n  },\n  jobCompany: {\n    fontStyle: 'italic',\n    fontSize: 14,\n    marginBottom: 10,\n  },\n  jobTime: {\n    fontWeight: '300',\n    fontSize: 16,\n  },\n})\n\nexport default Job\n","import React from 'react'\nimport { ScrollView, Text, StyleSheet } from 'react-native'\nimport Job from './Job'\n\nconst JobList = ({ jobs, view, nMatched, nonProfits }) => {\n  console.log('Matched jobs:', jobs.slice(0, nMatched))\n  console.log('Unmatched jobs:', jobs.slice(nMatched))\n  console.log('Number of matches', nMatched)\n  return (\n    <ScrollView>\n      <Text style={styles.headerText}>Best Fits</Text>\n      {jobs.slice(0, nMatched).map((job, i) => (\n        <Job\n          key={i}\n          view={view}\n          job={job}\n          matched={true}\n          nonProfit={\n            job.companyId in nonProfits ? nonProfits[job.companyId] : {}\n          }\n        />\n      ))}\n      <Text style={styles.headerText}>You Might Also Like</Text>\n      {jobs.slice(nMatched).map((job, i) => (\n        <Job\n          key={i}\n          view={view}\n          job={job}\n          matched={false}\n          nonProfit={\n            job.companyId in nonProfits ? nonProfits[job.companyId] : {}\n          }\n        />\n      ))}\n    </ScrollView>\n  )\n}\n\nconst styles = StyleSheet.create({\n  headerText: {\n    flex: 1,\n    justifyContent: 'center',\n    textAlign: 'center',\n    fontSize: 20,\n    fontWeight: '600',\n  },\n})\n\nexport default JobList\n","import { createContext } from 'react'\n\nconst JobListContext = createContext()\n\nexport default JobListContext\n","import React, { useEffect, useState } from 'react'\nimport { SafeAreaView, StatusBar, StyleSheet } from 'react-native'\nimport JobList from '../../components/JobList'\nimport { firebase } from '../../firebase'\nimport JobListContext from '../../contexts/JobListContext'\n\nconst JobDisplayScreen = ({ route, navigation }) => {\n  const preferences = route.params.preferences\n\n  const [jobs, setJobs] = useState([])\n  const [nonProfits, setNonProfits] = useState({})\n\n  useEffect(() => {\n    const db = firebase.database().ref()\n    const handleData = (snap) => {\n      if (snap.val()) {\n        const val = snap.val()\n        const jobsList = Object.values(val.jobs)\n        setJobs(jobsList)\n        setNonProfits(val.nonprofits)\n      }\n    }\n    db.on('value', handleData, (error) => console.log(error))\n    return () => db.off('value', handleData)\n  }, [])\n\n  // As long as one criteria matches, consider the job a match\n  // Also include number of criteria that match in case we might want to rank ...\n  // ... the jobs later on\n  const isMatchBasic = (job) => {\n    const nonprofit = nonProfits[job.companyId]\n    if (!nonprofit) return false\n\n    const matches = [\n      preferences['industry'].includes(nonprofit.industry),\n      preferences['length'].includes(nonprofit.length),\n      preferences['role'].includes(job.role),\n      preferences['weeklyTime'].includes(job.weeklyTime),\n    ]\n\n    const numMatches = matches.filter((match) => match).length\n    return numMatches\n  }\n\n  const getOrderedJobs = (jobs) => {\n    // const matchedJobs = []\n    // const otherJobs = []\n\n    let nGoodMatches = 0\n    jobs.map((job) => {\n      // if (isMatchBasic(job) > 0 && matchedJobs.length < 0.5 * jobs.length) {\n      //   // Use the basic matching algorithm for now\n      //   matchedJobs.push(job)\n      // } else {\n      //   otherJobs.push(job)\n      // }\n      job.rank = isMatchBasic(job)\n      if (job.rank > 0) {\n        nGoodMatches++\n      }\n    })\n\n    const orderedJobs = jobs.sort((a, b) => a.rank > b.rank)\n\n    // const matchMask = new Array(jobs.length)\n    // let i = 0\n    // for (i; i < nGoodMatches; i++) {\n    //   matchMask[i] = true\n    // }\n    // for (i; i < jobs.length; i++) {\n    //   matchMask[i] = false\n    // }\n    return [orderedJobs, nGoodMatches]\n  }\n\n  // View job detail\n  const view = (job) => {\n    navigation.navigate('JobDetailScreen', {\n      job: job,\n      nonProfit: nonProfits[job.companyId],\n    })\n  }\n\n  const renderJobList = () => {\n    const [orderedJobs, nGoodMatches] = getOrderedJobs(jobs)\n    return (\n      <JobList\n        jobs={orderedJobs}\n        view={view}\n        nMatched={nGoodMatches}\n        nonProfits={nonProfits}\n      />\n    )\n  }\n\n  return (\n    <JobListContext.Provider value={jobs}>\n      <SafeAreaView style={styles.container}>\n        {renderJobList()}\n        <StatusBar style=\"auto\" hidden=\"false\" barStyle=\"dark-content\" />\n      </SafeAreaView>\n    </JobListContext.Provider>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    //alignItems: 'center',\n    justifyContent: 'center',\n    paddingTop: 20,\n    backgroundColor: '#D7EAF9',\n  },\n  bannerStyle: {\n    alignItems: 'center',\n    color: 'white',\n    backgroundColor: '#cc0000ff',\n    fontSize: 28,\n  },\n})\n\nexport default JobDisplayScreen\n","import React from 'react'\nimport {\n  SafeAreaView,\n  StyleSheet,\n  Text,\n  View,\n  TouchableOpacity,\n  Image,\n  Linking,\n} from 'react-native'\nimport { ScrollView } from 'react-native-gesture-handler'\n\nconst Field = ({ label, value }) => {\n  return (\n    <View style={styles.fieldContainer}>\n      <Text style={styles.label}>{label}</Text>\n      <Text style={styles.field}>{value}</Text>\n    </View>\n  )\n}\n\nconst jobProps = {\n  role: 'Role',\n  descrip: 'Description',\n  weeklyTime: 'Weekly Time',\n  languages: 'Languages',\n}\n\nconst companyProps = {\n  logo: 'Logo',\n  company: 'Name',\n  title: 'Project',\n  descrip: 'Description',\n  industry: 'Industry',\n  length: 'Project Duration',\n}\n\nconst JobDetailScreen = ({ route, navigation }) => {\n  const job = route.params.job\n  const nonProfit = route.params.nonProfit\n\n  console.log('job: ', job)\n  console.log('nonProfit: ', nonProfit)\n\n  const view = (nonprof) => {\n    navigation.navigate('NonprofContactInfoScreen', { nonprof })\n  }\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <Text label=\"Name\" style={styles.name}>\n        {job.title}\n      </Text>\n      <ScrollView>\n        {Object.keys(jobProps).map(\n          (key, i) =>\n            job[key] && (\n              <Field\n                key={i}\n                label={jobProps[key]}\n                value={Array.isArray(job[key]) ? job[key].join(', ') : job[key]}\n              />\n            )\n        )}\n        <Text label=\"Name\" style={styles.name}>\n          About the non-profit\n        </Text>\n        {Object.keys(companyProps).map((key, i) => (\n          <React.Fragment>\n            {key === 'logo' ? (\n              <Image\n                style={styles.developerImage}\n                source={{ uri: nonProfit.logo }}\n              />\n            ) : (\n              <Field key={i} label={companyProps[key]} value={nonProfit[key]} />\n            )}\n          </React.Fragment>\n        ))}\n        <Text\n          style={{ color: 'blue' }}\n          onPress={() => Linking.openURL(nonProfit.url)}\n        >\n          Visit Our Website!\n        </Text>\n      </ScrollView>\n\n      <TouchableOpacity\n        style={styles.connectButton}\n        onPress={() => view(nonProfit)}\n      >\n        <Text style={styles.connectText}>Connect</Text>\n      </TouchableOpacity>\n    </SafeAreaView>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    marginTop: 10,\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    width: '90%',\n  },\n  field: {\n    padding: 5,\n    backgroundColor: 'white',\n    borderRadius: 5,\n    fontSize: 18,\n  },\n  fieldContainer: {\n    marginTop: 10,\n    marginBottom: 20,\n  },\n  label: {\n    fontWeight: 'bold',\n  },\n  name: {\n    fontSize: 24,\n    marginBottom: 10,\n    marginLeft: 'auto',\n    marginRight: 'auto',\n  },\n  developerImage: {\n    width: 200,\n    height: 300,\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    marginBottom: 10,\n  },\n  connectButton: {\n    margin: 30,\n    padding: 10,\n    textAlign: 'center',\n    backgroundColor: 'lightblue',\n  },\n  connectText: {\n    fontSize: 22,\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    // fontWeight: 500,\n  },\n  developerImage: {\n    width: 200,\n    height: 200,\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    marginBottom: 10,\n  },\n})\n\nexport default JobDetailScreen\n","export default {\n  primary: 'lightblue',\n  secondary: '#039be5',\n  black: '#222222',\n  white: '#ffffff',\n  ghostWhite: '#f8f8ff',\n  lightGrey: '#f9f9f9',\n  mediumGrey: '#6e6869',\n  red: '#fc5c65',\n}\n","import React from 'react'\nimport { StyleSheet, Text } from 'react-native'\n\nimport Colors from './colors'\n\nexport default function FormErrorMessage({ error, visible }) {\n  if (!error || !visible) {\n    return null\n  }\n\n  return <Text style={styles.errorText}>{error}</Text>\n}\n\nconst styles = StyleSheet.create({\n  errorText: {\n    marginLeft: 15,\n    color: Colors.red,\n    fontSize: 16,\n    marginBottom: 5,\n    fontWeight: '600',\n  },\n})\n","import React from 'react'\nimport { View, StyleSheet, TextInput, TouchableOpacity } from 'react-native'\nimport { MaterialCommunityIcons } from '@expo/vector-icons'\n\nimport Colors from './colors'\n\nexport default function FormTextInput({\n  leftIcon,\n  width = '100%',\n  rightIcon,\n  handlePasswordVisibility,\n  ...otherProps\n}) {\n  return (\n    <View style={[styles.container, { width }]}>\n      {leftIcon && (\n        <MaterialCommunityIcons\n          name={leftIcon}\n          size={20}\n          color={Colors.mediumGrey}\n          style={styles.icon}\n        />\n      )}\n      <TextInput\n        style={styles.input}\n        placeholderTextColor={Colors.mediumGrey}\n        {...otherProps}\n      />\n      {rightIcon && (\n        <TouchableOpacity onPress={handlePasswordVisibility}>\n          <MaterialCommunityIcons\n            name={rightIcon}\n            size={20}\n            color={Colors.mediumGrey}\n            style={styles.rightIconStyles}\n          />\n        </TouchableOpacity>\n      )}\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: Colors.lightGrey,\n    borderRadius: 25,\n    flexDirection: 'row',\n    justifyContent: 'center',\n    padding: 15,\n    marginVertical: 10,\n  },\n  icon: {\n    marginRight: 10,\n  },\n  input: {\n    flex: 1,\n    width: '100%',\n    fontSize: 18,\n    color: Colors.black,\n  },\n  rightIconStyles: {\n    alignSelf: 'center',\n    marginLeft: 10,\n  },\n})\n","import React from 'react'\nimport { Text, TouchableOpacity, StyleSheet } from 'react-native'\nimport { useFormikContext } from 'formik'\n\nimport Colors from './colors'\n\nexport default function FormButton({ title, color = 'primary' }) {\n  const { handleSubmit, values } = useFormikContext()\n  const text = typeof title === 'function' ? title(values) : title\n\n  return (\n    <TouchableOpacity\n      style={[styles.button, { backgroundColor: Colors[color] }]}\n      onPress={handleSubmit}\n    >\n      <Text style={styles.buttonText}>{text}</Text>\n    </TouchableOpacity>\n  )\n}\n\nconst styles = StyleSheet.create({\n  button: {\n    marginVertical: 10,\n    borderRadius: 25,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 15,\n    width: '100%',\n  },\n  buttonText: {\n    color: Colors.black,\n    fontSize: 18,\n    fontWeight: '600',\n    textTransform: 'uppercase',\n  },\n  \n})\n","import React from 'react'\nimport { StyleSheet, Switch, Text, View } from 'react-native'\nimport { useFormikContext } from 'formik'\n\nimport Colors from './colors'\n\nexport default function FormSwitch({\n  name,\n  title,\n  onChange = (x) => x,\n  ...otherProps\n}) {\n  const { values, setFieldValue } = useFormikContext()\n  const value = values[name]\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>{title}</Text>\n      <Switch\n        value={value}\n        onValueChange={(value) => {\n          onChange(value)\n          setFieldValue(name, value)\n        }}\n        {...otherProps}\n      />\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    flexDirection: 'row',\n  },\n  title: {\n    color: Colors.white,\n    fontSize: 18,\n    fontWeight: '600',\n    marginRight: 5,\n  },\n})\n","import Base from './Forms/Form'\nimport FormField from './Forms/FormField'\nimport FormButton from './Forms/FormButton'\nimport FormErrorMessage from './Forms/FormErrorMessage'\nimport FormSwitch from './Forms/FormSwitch'\n\nconst Form = (props) => Base(props)\n\nForm.Field = FormField\nForm.Button = FormButton\nForm.ErrorMessage = FormErrorMessage\nForm.Switch = FormSwitch\n\nexport default Form\n","import React from 'react'\nimport { Formik } from 'formik'\n\nexport default function Form({\n  children,\n  initialValues,\n  onSubmit,\n  validationSchema,\n}) {\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={validationSchema}\n      onSubmit={onSubmit}\n    >\n      {() => <React.Fragment>{children}</React.Fragment>}\n    </Formik>\n  )\n}\n","import React from 'react'\nimport { useFormikContext } from 'formik'\n\nimport FormErrorMessage from './FormErrorMessage'\nimport FormTextInput from './FormTextInput'\n\nexport default function FormField({ name, width, ...otherProps }) {\n  const {\n    setFieldTouched,\n    setFieldValue,\n    values,\n    errors,\n    touched,\n  } = useFormikContext()\n\n  return (\n    <React.Fragment>\n      <FormTextInput\n        value={values[name]}\n        onChangeText={(text) => setFieldValue(name, text)}\n        onBlur={() => setFieldTouched(name)}\n        width={width}\n        {...otherProps}\n      />\n      <FormErrorMessage error={errors[name]} visible={touched[name]} />\n    </React.Fragment>\n  )\n}\n","import React, { useState } from 'react'\nimport {\n  SafeAreaView,\n  StyleSheet,\n  Text,\n  TouchableOpacity,\n  View,\n} from 'react-native'\nimport {firebase} from '../../firebase';\nimport { ScrollView } from 'react-native-gesture-handler'\nimport Form from '../../components/Form'\n\nconst NonprofContactInfoScreen = ({ route, navigation }) => {\n  const [messageSent, setMessageSent] = useState(false)\n\n  const headOut = () => {\n    navigation.navigate('JobListScreen')\n  }\n\n  const letter = `Hi,\n\n  My name is ________, and I am a ___ year student developer interested in joining your project team. I am most interested in working as a  ______ . Your project particularly interests me because of _____Of course, I'd be happy to answer any questions or pass along additional information that might be helpful\n  \n  Thank you for your time and consideration, and I look forward to hearing back from you soon.\n  \n  Best,\n  ____________`\n\n  const view = () => {\n    setMessageSent(true)\n  }\n\n  const nonprof = route.params.nonprof\n  console.log(\"nonprof:\", nonprof);\n  const nonprofName = nonprof.company\n\n  async function handleSubmit(values) {    \n    console.log(\"message submitted\", message);\n    const { message } = values;\n    firebase.database().ref('nonprofits').child(nonprof.id).child(\"messages\").child(Date.now()).set(message).catch(error => {\n      setSubmitError(error.message);\n      console.log(error.message);\n    });\n    view();\n  }\n\n  const placeholder = 'Enter message to ' + nonprofName\n  return (\n    <SafeAreaView style={styles.container}>\n      {!messageSent && (\n        <Text label=\"Name\" style={styles.name}>\n          Contact {nonprofName}\n        </Text>\n      )}\n\n      {messageSent ? (\n        <View>\n          <Text label=\"Name\" style={styles.name}>\n            Message succesfully sent to {nonprofName}!\n          </Text>\n          <TouchableOpacity\n            style={styles.connectButton}\n            onPress={() => {\n              view()\n              headOut()\n            }}\n          >\n            <Text style={styles.connectText}>Return to Non-Profit List</Text>\n          </TouchableOpacity>\n        </View>\n      ) : (\n        <ScrollView>\n          <Form initialValues={{ message: letter }}\n                onSubmit={message => handleSubmit(message)}>\n            <Form.Field\n              name=\"message\"\n              leftIcon=\"inbox\"\n              placeholder={placeholder}\n              autoCapitalize=\"none\"\n              autoFocus={true}\n              multiline={true}\n              numberOfLines={20}\n            />\n            <Form.Button title={'Send Message'} />\n          </Form>\n        </ScrollView>\n      )}\n    </SafeAreaView>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    marginTop: 10,\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    width: '90%',\n  },\n  field: {\n    padding: 5,\n    backgroundColor: 'white',\n    borderRadius: 5,\n    fontSize: 18,\n  },\n  fieldContainer: {\n    marginTop: 10,\n    marginBottom: 20,\n  },\n  label: {\n    fontWeight: 'bold',\n  },\n  name: {\n    fontSize: 24,\n    marginBottom: 10,\n    marginLeft: 'auto',\n    marginRight: 'auto',\n  },\n  developerImage: {\n    width: 200,\n    height: 300,\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    marginBottom: 10,\n  },\n  connectButton: {\n    margin: 30,\n    padding: 10,\n    textAlign: 'center',\n    backgroundColor: 'lightblue',\n  },\n  connectText: {\n    fontSize: 22,\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    // fontWeight: 500,\n  },\n})\n\nexport default NonprofContactInfoScreen\n","import React, { useState } from 'react'\nimport { SafeAreaView, ScrollView, StyleSheet, Text, View } from 'react-native'\nimport * as Yup from 'yup'\nimport Form from '../components/Form'\nimport { firebase } from '../firebase'\n\nconst validationSchema = Yup.object().shape({\n  email: Yup.string()\n    .required('Please enter a valid email')\n    .email()\n    .label('Email'),\n  password: Yup.string()\n    .required()\n    .min(6, 'Password must have at least 6 characters')\n    .label('Password'),\n  confirm: Yup.string().oneOf(\n    [Yup.ref('password'), null],\n    'Confirmation password must match password'\n  ),\n})\n\nconst RegisterScreen = ({ route, navigation }) => {\n  const [signInError, setSignInError] = useState('')\n\n  async function handleOnLogin(values) {\n    const { email, password } = values\n    setSignInError(null)\n    try {\n      await firebase.auth().signInWithEmailAndPassword(email, password)\n      route.params.roles.role === 'developer' \n      ? \n      navigation.navigate('DeveloperPreferenceSelectionScreen')\n      :\n      navigation.navigate('NonProfHomeScreen')\n    } catch (error) {\n      setSignInError(error.message)\n    }\n  }\n\n  async function handleOnSignUp(values) {\n    const { name, email, password } = values\n    setSignInError(null)\n    try {\n      const authCredential = await firebase\n        .auth()\n        .createUserWithEmailAndPassword(email, password)\n      const user = authCredential.user\n      await user.updateProfile({ displayName: name })\n      navigation.navigate('ChooseAppViewScreen')\n    } catch (error) {\n      setSignInError(error.message)\n    }\n  }\n\n  async function handleOnSubmit(values) {\n    return values.confirmPassword ? handleOnSignUp(values) : handleOnLogin(values)\n  }\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <Text style={styles.h1_text}>Welcome {route.params.roles.role}s!</Text>\n      <ScrollView>\n        <Form\n          initialValues={{\n            email: '',\n            password: '',\n            confirmPassword: '',\n          }}\n          validationSchema={validationSchema}\n          onSubmit={handleOnSubmit}\n        >\n          <Form.Field\n            name=\"email\"\n            leftIcon=\"email\"\n            placeholder=\"Enter email\"\n            autoCapitalize=\"none\"\n            keyboardType=\"email-address\"\n            textContentType=\"emailAddress\"\n          />\n          <Form.Field\n            name=\"password\"\n            leftIcon=\"lock\"\n            placeholder=\"Enter password\"\n            autoCapitalize=\"none\"\n            autoCorrect={false}\n            secureTextEntry={true}\n            textContentType=\"password\"\n          />\n          <Form.Field\n            name=\"confirmPassword\"\n            leftIcon=\"lock\"\n            placeholder=\"Confirm password\"\n            autoCapitalize=\"none\"\n            autoCorrect={false}\n            secureTextEntry={true}\n            textContentType=\"password\"\n          />\n          <Form.Button\n            title={(values) => (values.confirmPassword ? 'Register' : 'Login')}\n          />\n          {<Form.ErrorMessage error={signInError} visible={true} />}\n        </Form>\n      </ScrollView>\n    </SafeAreaView>\n  )\n}\n\nconst styles = StyleSheet.create({\n  h1_text: {\n    fontSize: 48,\n    marginBottom: 25,\n    textTransform: 'capitalize',\n  },\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#ccccb3',\n  },\n  field: {\n    height: 40,\n    width: 300,\n    padding: 5,\n    backgroundColor: 'white',\n  },\n  fieldContainer: {\n    marginBottom: 20,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2,\n    },\n    shadowOpacity: 0.23,\n    shadowRadius: 2.62,\n    elevation: 4,\n  },\n  label: {\n    fontWeight: 'bold',\n  },\n})\n\nexport default RegisterScreen\n","import {createContext} from 'react';\n\nconst UserContext = createContext();\n\nexport default UserContext;","import React from 'react'\nimport {\n  StatusBar,\n  StyleSheet,\n  Text,\n  View,\n  TouchableOpacity,\n} from 'react-native'\n\n// Original home screen\n// Currently not used\nconst NonProfHomeScreen = ({ navigation }) => {\n  return (\n    <View style={styles.container}>\n      \n      <Text h3 style={styles.h3_text}>\n      Welcome Back to NonProfDev!\n      </Text>\n      \n     \n      <View>\n        <TouchableOpacity\n          style={styles.roleButton}\n          onPress={() =>\n            navigation.navigate('SearchScreen')\n          }\n        >\n          <Text style={styles.buttonText}>See List of Developers</Text>\n        </TouchableOpacity>\n      \n        <TouchableOpacity\n          style={styles.roleButton}\n          onPress={() => navigation.navigate('NonProfCreateJobScreen')}\n        >\n          <Text style={styles.buttonText}>Post a New Listing</Text>\n        </TouchableOpacity>\n      \n        <TouchableOpacity\n          style={styles.roleButton}\n          onPress={() => navigation.navigate('ViewMessageScreen')}\n        >\n          <Text style={styles.buttonText}>Messages</Text>\n        </TouchableOpacity>\n      </View>\n\n      <StatusBar style=\"auto\" />\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    paddingTop: 30,\n    // justifyContent: 'center',\n  },\n\n  userContainer: {\n    flex: 1,\n    alignItems: 'center',\n  },\n\n  h1_text: {\n    fontSize: 48,\n    marginBottom: 25,\n  },\n  h3_text: {\n    fontSize: 24,\n    textAlign: 'center',\n    marginBottom: 20,\n  },\n  h4_text: {\n    fontSize: 16,\n    textAlign: 'center',\n    marginBottom: 15,\n  },\n  roleButton: {\n    backgroundColor: '#2196F3',\n    fontSize: 16,\n    margin: 15,\n    width: 250,\n    padding: 15,\n    textAlign: 'center',\n  },\n  buttonText: {\n    fontSize: 20,\n    color: 'ghostwhite',\n    textAlign: 'center',\n  },\n})\n\nexport default NonProfHomeScreen\n","import React, {useEffect, useState} from 'react'\nimport {\n  StatusBar,\n  StyleSheet,\n  Text,\n  View,\n  TouchableOpacity,\n  ScrollView\n} from 'react-native'\nimport { firebase } from '../../firebase'\n\nconst MessageField = ({ message }) => {\n    return (\n      <View style={styles.fieldContainer}>\n        <Text style={styles.fieldText}>{message}</Text>\n        {/* <Text style={styles.field}>{value}</Text> */}\n      </View>\n    )\n  }\n  \n  \nconst RenderMessages = (messages) => {\n    return (\n      <ScrollView>\n        {Object.values(messages)[0].map((message) => (\n          <MessageField message={message} />\n        ))}\n      </ScrollView>\n    )\n  }\n\n  \n\n// View message screen\nconst ViewMessageScreen = ({ navigation }) => {\n\n\n    const [messages, setMessages] = useState([])\n\n\n    useEffect(() => {\n        const db = firebase.database().ref('nonprofits/evanston-church/messages')\n        const handleData = (snap) => {\n          if (snap.val()) {\n            const val = snap.val()\n            const messageList = Object.values(val)\n            setMessages(messageList)\n            console.log(messageList)\n          }\n        }\n        db.on('value', handleData, (error) => console.log(error))\n        return () => db.off('value', handleData)\n      }, [])\n\n  return (\n    <View style={styles.container}>\n     \n      <View>\n            <RenderMessages messages={messages}></RenderMessages>\n      </View>\n\n      <StatusBar style=\"auto\" />\n    </View>\n  )\n}\n\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    paddingTop: 30,\n    // justifyContent: 'center',\n  },\n\n  userContainer: {\n    flex: 1,\n    alignItems: 'center',\n  },\n  fieldContainer: {\n      borderWidth: 1,\n      borderRadius: 5,\n      padding: 15,\n      margin: 5,\n  },\n  fieldText: {\n    marginBottom: 10,\n    fontWeight: 'bold',\n    fontSize: 16,\n  },\n  roleButton: {\n    backgroundColor: '#2196F3',\n    fontSize: 16,\n    margin: 15,\n    width: 250,\n    padding: 15,\n    textAlign: 'center',\n  },\n  buttonText: {\n    fontSize: 20,\n    color: 'ghostwhite',\n    textAlign: 'center',\n  },\n})\n\nexport default ViewMessageScreen\n","import React, { useState } from 'react'\nimport {\n  SafeAreaView,\n  StyleSheet,\n  Text,\n  View,\n  TouchableOpacity,\n  Image,\n  Linking,\n} from 'react-native'\nimport { ScrollView } from 'react-native-gesture-handler'\nimport Form from \"../../components/Form\"\n\n\n\nconst NonProfCreateJobScreen = ({ navigation }) => {\n  const [submitted, setSubmitted] = useState(false);\n\n  const view = (nonprof) => {\n    navigation.navigate('NonprofContactInfoScreen', { nonprof })\n  }\n\n  return (\n      !submitted\n      ?\n      <SafeAreaView style={styles.container}>\n        <Text label=\"Name\" style={styles.name}>\n        Post a new Job!\n      </Text>\n      <ScrollView>\n      <Form\n        initialValues={{\n            role: '',\n            description: '',\n            weeklyTime: '',\n            languages: '',\n          }}\n          onSubmit={() => {\n            setSubmitted(true)\n          }}\n        >\n          <Form.Field\n            name=\"role\"\n            placeholder=\"Enter role\"\n            autoCapitalize=\"none\"\n          />\n          <Form.Field\n            name=\"description\"\n            placeholder=\"Enter job description\"\n            autoCapitalize=\"none\"\n            \n          />\n          <Form.Field\n            name=\"weeklyTime\"\n            placeholder=\"Enter required weekly commitment\"\n            autoCapitalize=\"none\"\n           \n          />\n           <Form.Field\n            name=\"languages\"\n            placeholder=\"What language\"\n            autoCapitalize=\"none\"\n          />\n          <Form.Button\n            title={'Add new job'}\n          />\n        </Form>\n      </ScrollView>\n      </SafeAreaView>\n      :\n      <SafeAreaView style={styles.container}>\n        <Text style={styles.h1_text}>Job successfully created!</Text>\n        <TouchableOpacity\n          style={styles.roleButton}\n          onPress={() => navigation.navigate('NonProfHomeScreen')}\n        >\n          <Text style={styles.buttonText}>Return to Home Screen</Text>\n        </TouchableOpacity>\n      </SafeAreaView>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    marginTop: 10,\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    width: '90%',\n  },\n  h1_text: {\n    fontSize: 48,\n    marginBottom: 25,\n    justifyContent: 'center',\n    textAlign: 'center'\n  },\n  field: {\n    padding: 5,\n    backgroundColor: 'white',\n    borderRadius: 5,\n    fontSize: 18,\n  },\n  fieldContainer: {\n    marginTop: 10,\n    marginBottom: 20,\n  },\n  label: {\n    fontWeight: 'bold',\n  },\n  name: {\n    fontSize: 24,\n    marginBottom: 10,\n    marginLeft: 'auto',\n    marginRight: 'auto',\n  },\n  developerImage: {\n    width: 200,\n    height: 300,\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    marginBottom: 10,\n  },\n  connectButton: {\n    margin: 30,\n    padding: 10,\n    textAlign: 'center',\n    backgroundColor: 'lightblue',\n  },\n  connectText: {\n    fontSize: 22,\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    // fontWeight: 500,\n  },\n  roleButton: {\n    backgroundColor: '#2196F3',\n    fontSize: 16,\n    width: 250,\n    padding: 15,\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    justifyContent: 'center',\n    textAlign: 'center',\n  },\n  buttonText: {\n    fontSize: 20,\n    color: 'ghostwhite',\n    textAlign: 'center',\n  },\n  developerImage: {\n    width: 200,\n    height: 200,\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    marginBottom: 10,\n  },\n})\n\nexport default NonProfCreateJobScreen\n\n","import 'react-native-gesture-handler'\nimport React, { useState, useEffect } from 'react'\nimport { createStackNavigator } from '@react-navigation/stack'\nimport { NavigationContainer } from '@react-navigation/native'\nimport SearchScreen from './screens/NonProfScreens/SearchScreen'\nimport DeveloperProfileScreen from './screens/NonProfScreens/DeveloperProfileScreen'\nimport ChooseAppViewScreen from './screens/ChooseAppViewScreen'\nimport DeveloperPreferenceSelectionScreen from './screens/DeveloperScreens/DeveloperPreferenceSelectionScreen'\nimport JobListScreen from './screens/DeveloperScreens/JobListScreen'\nimport JobDetailScreen from './screens/DeveloperScreens/JobDetailScreen'\nimport NonprofContactInfoScreen from './screens/DeveloperScreens/NonprofContactInfoScreen'\nimport RegisterScreen from './screens/RegisterScreen'\nimport UserContext from './contexts/UserContext'\nimport { Button } from 'react-native'\nimport { firebase } from './firebase'\nimport NonProfHomeScreen from './screens/NonProfScreens/NonProfHomeScreen'\nimport ViewMessageScreen from './screens/NonProfScreens/ViewMessagesScreen'\nimport NonProfCreateJobScreen from './screens/NonProfScreens/NonProfCreateJobScreen'\n\nconst Stack = createStackNavigator()\n\nexport default function App() {\n  const [user, setUser] = useState({ role: 'admin' })\n\n  const [auth, setAuth] = useState()\n\n  useEffect(() => {\n    if (auth && auth.uid) {\n      const db = firebase.database().ref('users').child(auth.uid)\n      const handleData = (snap) => {\n        setUser({ uid: auth.uid, ...snap.val() })\n      }\n      db.on('value', handleData, (error) => alert(error))\n      return () => {\n        db.off('value', handleData)\n      }\n    } else {\n      setUser(null)\n    }\n  }, [auth])\n\n  useEffect(() => {\n    firebase.auth().onAuthStateChanged((auth) => {\n      setAuth(auth)\n    })\n  }, [])\n\n  const SignInButton = ({ navigation, user }) =>\n    user && user.uid ? (\n      <Button\n        title=\"Logout\"\n        color=\"#f28888\"\n        onPress={() => firebase.auth().signOut()}\n      />\n    ) : (\n      <Button\n        title=\"Sign In\"\n        color=\"#448aff\"\n        onPress={() => navigation.navigate('RegisterScreen')}\n      />\n    )\n    const JobButton = ({ navigation}) => (\n      <Button\n        title=\"Sign In\"\n        color=\"#448aff\"\n        onPress={() => navigation.navigate('DeveloperCreateJobScreen')}\n      />\n    )\n\n  return (\n    <UserContext.Provider value={user}>\n      <NavigationContainer>\n        <Stack.Navigator>\n          <Stack.Screen\n            name=\"ChooseAppViewScreen\"\n            component={ChooseAppViewScreen}\n            options={({ navigation }) => ({\n              title: 'NonProfDev',\n              \n              headerRight: () => (\n                <JobButton navigation={navigation} user={user} />\n              ),\n              \n            })}\n          />\n          <Stack.Screen\n            name=\"NonProfHomeScreen\"\n            component={NonProfHomeScreen}\n            options={{ title: 'NonProfit Home Screen' }}\n          />\n          <Stack.Screen\n            name=\"ViewMessageScreen\"\n            component={ViewMessageScreen}\n            options={{ title: 'Messages' }}\n          />\n          <Stack.Screen\n            name=\"DeveloperPreferenceSelectionScreen\"\n            component={DeveloperPreferenceSelectionScreen}\n            options={{ title: 'Preference Selection' }}\n          />\n          <Stack.Screen\n            name=\"NonProfCreateJobScreen\"\n            component={NonProfCreateJobScreen}\n            options={{ title: 'Create Job' }}\n          />\n\n          <Stack.Screen\n            name=\"JobListScreen\"\n            component={JobListScreen}\n            options={{ title: 'Available Jobs' }}\n          />\n          <Stack.Screen\n            name=\"RegisterScreen\"\n            component={RegisterScreen}\n            options={{ title: 'Register' }}\n          />\n          <Stack.Screen\n            name=\"JobDetailScreen\"\n            component={JobDetailScreen}\n            options={{ title: 'Job Details' }}\n          />\n          <Stack.Screen\n            name=\"NonprofContactInfoScreen\"\n            component={NonprofContactInfoScreen}\n            options={{ title: 'Job Details' }}\n          />\n          <Stack.Screen\n            name=\"SearchScreen\"\n            component={SearchScreen}\n            options={{ title: 'NonProfDev' }}\n          />\n          <Stack.Screen\n            name=\"DeveloperProfileScreen\"\n            component={DeveloperProfileScreen}\n            options={{ title: 'Developer Profile' }}\n          />\n        </Stack.Navigator>\n      </NavigationContainer>\n    </UserContext.Provider>\n  )\n}\n"],"sourceRoot":""}