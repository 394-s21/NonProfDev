{"version":3,"sources":["components/Developer.js","components/DeveloperList.js","firebase.js","utils/search.js","screens/SearchScreen.js","screens/AboutScreen.js","screens/DeveloperProfileScreen.js","screens/ChooseAppViewScreen.js","components/PreferenceButton.js","components/PreferenceGroup.js","screens/DeveloperPreferenceSelectionScreen.js","components/Forms/colors.js","components/Forms/FormErrorMessage.js","components/Forms/FormTextInput.js","components/Forms/FormButton.js","components/Forms/FormSwitch.js","components/Form.js","components/Forms/Form.js","components/Forms/FormField.js","screens/DeveloperContactInfoScreen.js","components/Job.js","components/JobList.js","contexts/JobListContext.js","screens/JobListScreen.js","screens/JobDetailScreen.js","screens/NonprofContactInfoScreen.js","App.js"],"names":["styles","StyleSheet","create","developerButton","borderRadius","borderStyle","borderWidth","borderColor","flexDirection","alignItems","margin","padding","backgroundColor","developerImage","width","height","marginRight","developerInfo","flexShrink","developerName","fontWeight","fontSize","developerLocation","developerRole","fontStyle","developerSkills","marginTop","Developer","developer","view","TouchableOpacity","style","onPress","Image","source","uri","pic","View","Text","name","location","role","skills","join","DeveloperList","developers","ScrollView","map","key","id","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","options","keys","container","flex","justifyContent","paddingTop","bannerStyle","color","SearchScreen","navigation","useState","search","updateSearch","setDevelopers","developersShown","setDevelopersShown","useEffect","db","database","ref","handleData","snap","val","developersList","Object","values","console","log","on","error","off","obj","fuse","Fuse","SafeAreaView","placeholder","onChangeText","v","item","value","lightTheme","navigate","StatusBar","hidden","barStyle","userContainer","h1_text","marginBottom","h3_text","textAlign","h4_text","AboutScreen","h1","h3","h4","Field","label","fieldContainer","field","weeklyTimes","mapWeeklyTime","devTime","returnArr","i","length","push","projectLengths","mapProjectLength","projTime","teamSizes","mapTeamSize","teamSize","marginLeft","headerText","developerBio","connectButton","connectText","DeveloperProfileScreen","route","params","Bio","weeklyTime","projectLength","roleButton","buttonText","ChooseAppViewScreen","preferenceButtonBase","minWidth","maxWidth","preferenceButton","preferenceTextSelected","preferenceText","preferenceButtonSelected","PreferenceButton","select","isSelected","title","buttonGroup","PreferenceGroup","toggleSelect","selection","preferenceData","submitButtonText","DeveloperPreferenceSelectionScreen","a","Array","initSelections","selections","setSelections","tmp","handleSelect","preferences","prefObj","mask","filter","_","getPreferences","primary","secondary","black","white","ghostWhite","lightGrey","mediumGrey","red","FormErrorMessage","visible","errorText","Colors","FormTextInput","leftIcon","rightIcon","handlePasswordVisibility","otherProps","MaterialCommunityIcons","size","icon","TextInput","input","placeholderTextColor","rightIconStyles","marginVertical","alignSelf","button","textTransform","Form","props","children","initialValues","onSubmit","validationSchema","Fragment","Base","useFormikContext","setFieldTouched","setFieldValue","errors","touched","text","onBlur","Button","handleSubmit","ErrorMessage","Switch","onChange","x","onValueChange","DeveloperContactInfoScreen","messageSent","setMessageSent","message","autoCapitalize","autoFocus","multiline","numberOfLines","jobButton","jobMatched","shadowColor","shadowOpacity","shadowRadius","shadowOffset","jobInfo","jobName","jobCompany","jobTime","Job","job","matched","nonProfit","company","companyId","JobList","jobs","nonProfits","JobListContext","createContext","JobDisplayScreen","setJobs","setNonProfits","jobsList","nonprofits","getOrderedJobs","matchedJobs","otherJobs","nonprofit","includes","industry","match","isMatchBasic","orderedJobs","concat","matchMask","Provider","renderJobList","jobProps","descrip","languages","companyProps","logo","url","JobDetailScreen","isArray","nonprof","NonprofContactInfoScreen","nonprofName","Stack","createStackNavigator","App","NavigationContainer","Navigator","Screen","component","JobListScreen"],"mappings":"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","file":"static/js/app.9499c133.chunk.js","sourcesContent":["import React from 'react'\nimport {\n  StyleSheet,\n  Image,\n  Text,\n  TouchableOpacity,\n  View,\n  Dimensions,\n} from 'react-native'\nimport { BorderlessButton } from 'react-native-gesture-handler'\n\n// TODO: avatar/profile picture is currently hardcoded\nconst Developer = ({ developer, view }) => {\n  // TODO: maybe scale the font size based on the screen width/height?\n  const scaleFont = () => {\n    const width = Dimensions.get('window').width\n    return width > 500 ? 16 : 12\n  }\n\n  return (\n    <TouchableOpacity\n      style={styles.developerButton}\n      onPress={() => {\n        view(developer)\n      }}\n    >\n      <Image style={styles.developerImage} source={{ uri: developer.pic }} />\n      <View style={styles.developerInfo}>\n        <Text style={styles.developerName}>{developer.name}</Text>\n        <Text style={styles.developerLocation}>{developer.location}</Text>\n        <Text style={styles.developerRole}>{developer.role}</Text>\n        <Text style={styles.developerSkills}>\n          Skills: {developer.skills.join(', ')}\n        </Text>\n      </View>\n    </TouchableOpacity>\n  )\n}\n\nconst styles = StyleSheet.create({\n  developerButton: {\n    borderRadius: 5,\n    borderStyle: 'solid',\n    borderWidth: 1,\n    borderColor: '#DFDFDF',\n    // justifyContent: 'center',\n    flexDirection: 'row',\n    alignItems: 'center',\n    margin: 10,\n    padding: 10,\n    backgroundColor: 'white',\n  },\n  developerImage: {\n    width: 75,\n    height: 100,\n    marginRight: 10,\n  },\n  developerInfo: {\n    flexDirection: 'column',\n    flexShrink: 1,\n  },\n  developerName: {\n    fontWeight: 'bold',\n    fontSize: 18,\n  },\n  developerLocation: {\n    fontWeight: '300',\n    fontSize: 16,\n  },\n  developerRole: {\n    fontStyle: 'italic',\n    fontSize: 14,\n  },\n  developerSkills: {\n    marginTop: 10,\n    fontSize: 16,\n  },\n})\n\nexport default Developer\n","import React from 'react'\nimport { ScrollView } from 'react-native'\nimport Developer from './Developer'\n\nconst DeveloperList = ({ developers, view }) => {\n  return (\n    <ScrollView>\n      {developers.map((developer) => (\n        <Developer key={developer.id} view={view} developer={developer} />\n      ))}\n    </ScrollView>\n  )\n}\n\nexport default DeveloperList\n","import firebase from 'firebase/app'\nimport 'firebase/database'\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n  apiKey: 'AIzaSyCQtBaMx1kJUc3cUhV2OlB_xBTeBG0CIdE',\n  authDomain: 'nonprofdev.firebaseapp.com',\n  databaseURL: 'https://nonprofdev-default-rtdb.firebaseio.com',\n  projectId: 'nonprofdev',\n  storageBucket: 'nonprofdev.appspot.com',\n  messagingSenderId: '135728428832',\n  appId: '1:135728428832:web:868a5bf1ecaab0db0ec945',\n}\n\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig)\n\nexport { firebase }\n","import Fuse from 'fuse.js'\n\nconst options = {\n  // isCaseSensitive: false,\n  // includeScore: false,\n  // shouldSort: true,\n  // includeMatches: false,\n  // findAllMatches: false,\n  // minMatchCharLength: 1,\n  // location: 0,\n  // threshold: 0.6,\n  // distance: 100,\n  // useExtendedSearch: false,\n  // ignoreLocation: false,\n  // ignoreFieldNorm: false,\n  keys: ['location', 'skills'],\n}\n\nexport const getFuse = (obj) => new Fuse(obj, options)\n","import React, { useState, useEffect } from 'react'\nimport { SafeAreaView, StatusBar, StyleSheet } from 'react-native'\nimport { SearchBar } from 'react-native-elements'\nimport DeveloperList from '../components/DeveloperList'\nimport { firebase } from '../firebase'\nimport { getFuse } from '../utils/search'\n\nconst SearchScreen = ({ navigation }) => {\n  const [search, updateSearch] = useState('')\n  const [developers, setDevelopers] = useState([])\n  // Filtered list of developers\n  const [developersShown, setDevelopersShown] = useState(developers)\n\n  useEffect(() => {\n    const db = firebase.database().ref('developers')\n    const handleData = (snap) => {\n      if (snap.val()) {\n        const val = snap.val()\n        const developersList = Object.values(val)\n        console.log(developersList)\n        setDevelopers(developersList)\n        setDevelopersShown(developersList)\n      }\n    }\n    db.on('value', handleData, (error) => console.log(error))\n    return () => db.off('value', handleData)\n  }, [])\n\n  // Hacky search with fuse.js\n  const fuse = getFuse(developers)\n  const handleSearch = (search) => {\n    updateSearch(search)\n    search === ''\n      ? setDevelopersShown(developers)\n      : setDevelopersShown(fuse.search(search).map((v) => v.item))\n  }\n\n  // View developer detail\n  const view = (developer) => {\n    navigation.navigate('DeveloperProfileScreen', { developer })\n  }\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <SearchBar\n        placeholder=\"Search for skills/location...\"\n        onChangeText={handleSearch}\n        value={search}\n        lightTheme={true}\n      />\n      <DeveloperList developers={developersShown} view={view} />\n      <StatusBar style=\"auto\" hidden=\"false\" barStyle=\"dark-content\" />\n    </SafeAreaView>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    //alignItems: 'center',\n    justifyContent: 'center',\n    paddingTop: 20,\n    backgroundColor: '#D7EAF9',\n  },\n  bannerStyle: {\n    alignItems: 'center',\n    color: 'white',\n    backgroundColor: '#cc0000ff',\n    fontSize: 28,\n  },\n})\n\nexport default SearchScreen\n","import React from 'react'\nimport { StatusBar, StyleSheet, Text, View } from 'react-native'\n\n// Original home screen\n// Currently not used\nconst AboutScreen = ({ navigation }) => {\n  return (\n    <View style={styles.container}>\n      <Text h1 style={styles.h1_text}>\n        NonProfDev\n      </Text>\n      <Text h3 style={styles.h3_text}>\n        A simple, intuitive platform to connect non-profit organizations with\n        passionate web developers\n      </Text>\n      <Text h3 style={styles.h3_text}>\n        Created by the CS 394 Red Team\n      </Text>\n      <Text h4 style={styles.h4_text}>\n        Benjamin Nober, Chris Song, Jacob Wat, Linus Okoth, Mason Brachmann,\n        Tiger Nie, Zaddeen Benaissa\n      </Text>\n      <StatusBar style=\"auto\" />\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n\n  userContainer: {\n    flex: 1,\n    alignItems: 'center',\n  },\n\n  h1_text: {\n    fontSize: 48,\n    marginBottom: 25,\n  },\n  h3_text: {\n    fontSize: 24,\n    textAlign: 'center',\n    marginBottom: 20,\n  },\n  h4_text: {\n    fontSize: 16,\n    textAlign: 'center',\n    marginBottom: 15,\n  },\n})\n\nexport default AboutScreen\n","import React from 'react'\nimport {\n  SafeAreaView,\n  StyleSheet,\n  Text,\n  View,\n  TouchableOpacity,\n  Image,\n} from 'react-native'\nimport { ScrollView } from 'react-native-gesture-handler'\n\nconst Field = ({ label, value }) => {\n  return (\n    <View style={styles.fieldContainer}>\n      <Text style={styles.label}>{label}</Text>\n      <Text style={styles.field}>{value}</Text>\n    </View>\n  )\n}\n\nconst DeveloperProfileScreen = ({ route, navigation }) => {\n  // View developer detail\n  const view = (developer) => {\n    navigation.navigate('DeveloperContactInfoScreen', { developer })\n  }\n\n  const developer = route.params.developer\n  return (\n    <SafeAreaView style={styles.container}>\n      <Image style={styles.developerImage} source={{ uri: developer.pic }} />\n      <Text label=\"Name\" style={styles.developerName}>\n        {' '}\n        {developer.name}{' '}\n      </Text>\n      <ScrollView>\n        <Text style={styles.developerLocation}>{developer.location}</Text>\n        <Text style={styles.developerRole}>{developer.role}</Text>\n        {/* <Text style={styles.developerBio}>\n          {developer.Bio}\n        </Text> */}\n        <Field label=\"Bio\" value={developer.Bio} style={styles.developerBio} />\n        <Field\n          label=\"Skills\"\n          value={developer.skills.join(', ')}\n          style={styles.developerSkills}\n        />\n        <Text style={styles.headerText}> - Looking For - </Text>\n        <Field\n          label=\"Weekly Time Commitment\"\n          value={mapWeeklyTime(developer.weeklyTime).join('\\n')}\n          style={styles.developerSkills}\n        />\n        <Field\n          label=\"Project Length Commitment\"\n          value={mapProjectLength(developer.projectLength).join('\\n')}\n          style={styles.developerSkills}\n        />\n        <Field\n          label=\"Desired Team Size\"\n          value={mapTeamSize(developer.teamSize).join('\\n')}\n          style={styles.developerSkills}\n        />\n      </ScrollView>\n\n      <TouchableOpacity\n        style={styles.connectButton}\n        onPress={() => view(developer)}\n      >\n        <Text style={styles.connectText}>Connect</Text>\n      </TouchableOpacity>\n    </SafeAreaView>\n  )\n}\n\nconst weeklyTimes = [\n  'Less Than 5 Hours Per Week',\n  '5-10 Hours Per Week',\n  '10+ Hours Per Week',\n]\n\nconst mapWeeklyTime = (devTime) => {\n  var returnArr = []\n  for (var i = 0; i < devTime.length; i++) {\n    returnArr.push(weeklyTimes[devTime[i]])\n  }\n\n  return returnArr\n}\n\nconst projectLengths = ['Less Than 1 Month', '1-3 Months', '3+ Months']\n\nconst mapProjectLength = (projTime) => {\n  var returnArr = []\n  for (var i = 0; i < projTime.length; i++) {\n    returnArr.push(projectLengths[projTime[i]])\n  }\n\n  return returnArr\n}\n\nconst teamSizes = ['Solo', '2-3 Member Team', '3+ Member Team']\n\nconst mapTeamSize = (teamSize) => {\n  var returnArr = []\n  for (var i = 0; i < teamSize.length; i++) {\n    returnArr.push(teamSizes[teamSize[i]])\n  }\n\n  return returnArr\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    marginTop: 10,\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    width: '90%',\n  },\n  field: {\n    padding: 5,\n    backgroundColor: 'white',\n    borderRadius: 5,\n    fontSize: 18,\n  },\n  fieldContainer: {\n    marginTop: 10,\n    marginBottom: 20,\n  },\n  label: {\n    fontWeight: 'bold',\n  },\n  headerText: {\n    // fontWeight: 'bold',\n    textAlign: 'center',\n    // textDecorationLine: 'underline',\n    fontSize: 22,\n    marginBottom: 10,\n  },\n  developerName: {\n    fontSize: 26,\n    fontWeight: 'bold',\n    marginBottom: 5,\n    marginLeft: 'auto',\n    marginRight: 'auto',\n  },\n  developerLocation: {\n    textAlign: 'center',\n    fontSize: 18,\n  },\n  developerRole: {\n    textAlign: 'center',\n    fontStyle: 'italic',\n    marginBottom: 10,\n    fontSize: 16,\n  },\n  developerBio: {\n    textAlign: 'center',\n  },\n  developerImage: {\n    width: 200,\n    height: 300,\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    marginBottom: 10,\n  },\n  connectButton: {\n    margin: 30,\n    padding: 10,\n    textAlign: 'center',\n    backgroundColor: 'lightblue',\n  },\n  connectText: {\n    fontSize: 22,\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    // fontWeight: 500,\n  },\n})\n\nexport default DeveloperProfileScreen\n","import React from 'react'\nimport {\n  StatusBar,\n  StyleSheet,\n  Text,\n  View,\n  TouchableOpacity,\n} from 'react-native'\n\n// Original home screen\n// Currently not used\nconst ChooseAppViewScreen = ({ navigation }) => {\n  return (\n    <View style={styles.container}>\n      <Text h1 style={styles.h1_text}>\n        Welcome to NonProfDev!\n      </Text>\n      <Text h3 style={styles.h3_text}>\n        A simple, intuitive platform to connect non-profit organizations with\n        passionate developers.\n      </Text>\n      <Text h3 style={styles.h3_text}>\n        Are you a:\n      </Text>\n      <View>\n        <TouchableOpacity\n          style={styles.roleButton}\n          onPress={() =>\n            navigation.navigate('DeveloperPreferenceSelectionScreen')\n          }\n        >\n          <Text style={styles.buttonText}>Developer</Text>\n        </TouchableOpacity>\n      </View>\n      <View>\n        <TouchableOpacity\n          style={styles.roleButton}\n          onPress={() => navigation.navigate('SearchScreen')}\n        >\n          <Text style={styles.buttonText}>Non-Profit Organization</Text>\n        </TouchableOpacity>\n      </View>\n\n      <StatusBar style=\"auto\" />\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n\n  userContainer: {\n    flex: 1,\n    alignItems: 'center',\n  },\n\n  h1_text: {\n    fontSize: 48,\n    marginBottom: 25,\n  },\n  h3_text: {\n    fontSize: 24,\n    textAlign: 'center',\n    marginBottom: 20,\n  },\n  h4_text: {\n    fontSize: 16,\n    textAlign: 'center',\n    marginBottom: 15,\n  },\n  roleButton: {\n    backgroundColor: '#2196F3',\n    fontSize: 16,\n    margin: 15,\n    width: 250,\n    padding: 15,\n    textAlign: 'center',\n  },\n  buttonText: {\n    fontSize: 20,\n    color: 'ghostwhite',\n    textAlign: 'center',\n  },\n})\n\nexport default ChooseAppViewScreen\n","import React from 'react'\nimport { StyleSheet, Text, TouchableOpacity } from 'react-native'\n\nconst PreferenceButton = ({ select, buttonText, isSelected }) => (\n  <TouchableOpacity\n    onPress={select}\n    style={styles[isSelected ? 'preferenceButtonSelected' : 'preferenceButton']}\n  >\n    <Text\n      style={styles[isSelected ? 'preferenceTextSelected' : 'preferenceText']}\n    >\n      {buttonText}\n    </Text>\n  </TouchableOpacity>\n)\n\nconst preferenceButtonBase = {\n  borderRadius: 5,\n  margin: 10,\n  height: 50,\n  minWidth: 300,\n  maxWidth: 300,\n}\n\nconst styles = StyleSheet.create({\n  preferenceButton: {\n    ...preferenceButtonBase,\n    backgroundColor: '#d3d3d3',\n  },\n  preferenceTextSelected: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    color: 'white',\n    fontSize: 20,\n    textAlign: 'center',\n    paddingTop: 12,\n  },\n  preferenceText: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    color: 'black',\n    fontSize: 20,\n    textAlign: 'center',\n    paddingTop: 12,\n  },\n  preferenceButtonSelected: {\n    ...preferenceButtonBase,\n    backgroundColor: '#004a99',\n  },\n})\n\nexport default PreferenceButton\n","import React, { useState } from 'react'\nimport { StyleSheet, Text, View } from 'react-native'\nimport PreferenceButton from './PreferenceButton'\n\nconst PreferenceGroup = ({ title, options, toggleSelect, selection }) => (\n  <View>\n    <Text style={styles.title}>{title}</Text>\n    <View style={styles.buttonGroup}>\n      {options.map((name, i) => (\n        <PreferenceButton\n          key={i}\n          select={() => toggleSelect(i)}\n          buttonText={name}\n          isSelected={selection[i]}\n        />\n      ))}\n    </View>\n  </View>\n)\n\nconst styles = StyleSheet.create({\n  title: {\n    fontSize: 32,\n    textAlign: 'center',\n    marginTop: 30,\n  },\n  buttonGroup: {\n    flex: 1,\n    alignItems: 'center',\n  },\n})\n\nexport default PreferenceGroup\n","import React, { useState } from 'react'\nimport {\n  StatusBar,\n  StyleSheet,\n  SafeAreaView,\n  Text,\n  View,\n  Button,\n  TouchableOpacity,\n} from 'react-native'\nimport PreferenceGroup from '../components/PreferenceGroup'\nimport { ScrollView /*TouchableOpacity*/ } from 'react-native-gesture-handler'\n\n// Preference data hardcoded for now, substitute for db call later\nconst preferenceData = [\n  {\n    id: 'role',\n    title: 'Primary Skillset/Desired Role',\n    options: ['Web Design', 'Web Development', 'Backend Development'],\n  },\n  {\n    id: 'industry',\n    title: 'Primary Field of Interest',\n    options: ['Community Leadership', 'Education', 'Religion'],\n  },\n  {\n    id: 'length',\n    title: 'Project Length',\n    options: ['One Month or Shorter', '1-3 Months (One Quarter)', '3+ Months'],\n  },\n  {\n    id: 'weeklyTime',\n    title: 'Weekly Commitment',\n    options: ['5 Hours or Fewer', '5-10 Hours', '10+ Hours'],\n  },\n  {\n    id: 'teamSize',\n    title: 'Team Size',\n    options: ['Solo', '2-3 Member Team', '3+ Member Team'],\n  },\n]\n\n/**\n * Creates a selection object with\n *   key = preference title\n *   value = boolean array of length options\n */\nconst initSelections = (preferenceData) => {\n  const obj = {}\n  preferenceData.map((v) => {\n    const a = new Array(v.options.length)\n    for (let i = 0; i < v.options.length; ++i) a[i] = false\n    obj[v.id] = a\n  })\n  return obj\n}\n\n/**\n * Convert selections object to map of preferences\n */\nconst getPreferences = (preferenceData, selections) => {\n  const obj = {}\n  preferenceData.map((prefObj) => {\n    const mask = selections[prefObj.id]\n    obj[prefObj.id] = prefObj.options.filter((_, i) => mask[i])\n  })\n  return obj\n}\n\nconst DeveloperPreferenceSelectionScreen = ({ navigation }) => {\n  const [selections, setSelections] = useState(initSelections(preferenceData))\n\n  const handleSelect = (id, i) => {\n    //const newSelections = { ...selections }\n    const tmp = selections[id]\n    tmp[i] = !tmp[i]\n    setSelections((selections) => ({ ...selections, id: tmp }))\n  }\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <ScrollView>\n        <Text style={styles.h1_text}>\n          Please select one or more preferences for each of the following:\n        </Text>\n        {preferenceData.map((v, i) => (\n          <PreferenceGroup\n            key={i}\n            title={v.title}\n            options={v.options}\n            toggleSelect={(i) => handleSelect(v.id, i)}\n            selection={selections[v.id]}\n          />\n        ))}\n\n        <View style={styles.userContainer}>\n          {/* <Button\n            style={styles.submitButtonText}\n            title=\"Submit Preferences\"\n            onPress={() => {\n              const preferences = getPreferences(preferenceData, selections)\n              navigation.navigate('JobListScreen', { preferences })\n            }}\n          /> */}\n          <TouchableOpacity\n            style={styles.roleButton}\n            onPress={() => {\n              const preferences = getPreferences(preferenceData, selections)\n              navigation.navigate('JobListScreen', { preferences })\n            }}\n          >\n            <Text style={styles.submitButtonText}>Submit Preferences</Text>\n          </TouchableOpacity>\n        </View>\n\n        <StatusBar style=\"auto\" />\n      </ScrollView>\n    </SafeAreaView>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n    // marginRight: 20,\n  },\n  userContainer: {\n    flex: 1,\n    alignItems: 'center',\n  },\n  h1_text: {\n    fontSize: 24,\n    marginTop: 30,\n    textAlign: 'center',\n  },\n  roleButton: {\n    borderRadius: 3,\n    backgroundColor: 'seagreen',\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginTop: 45,\n    marginBottom: 15,\n    padding: 20,\n    width: 300,\n  },\n  submitButtonText: {\n    color: 'ghostwhite',\n    fontSize: 20,\n    textAlign: 'center',\n  },\n})\n\nexport default DeveloperPreferenceSelectionScreen\n","export default {\n  primary: '#f57c00',\n  secondary: '#039be5',\n  black: '#222222',\n  white: '#ffffff',\n  ghostWhite: '#f8f8ff',\n  lightGrey: '#f9f9f9',\n  mediumGrey: '#6e6869',\n  red: '#fc5c65',\n}\n","import React from 'react'\nimport { StyleSheet, Text } from 'react-native'\n\nimport Colors from './colors'\n\nexport default function FormErrorMessage({ error, visible }) {\n  if (!error || !visible) {\n    return null\n  }\n\n  return <Text style={styles.errorText}>{error}</Text>\n}\n\nconst styles = StyleSheet.create({\n  errorText: {\n    marginLeft: 15,\n    color: Colors.red,\n    fontSize: 16,\n    marginBottom: 5,\n    fontWeight: '600',\n  },\n})\n","import React from 'react'\nimport { View, StyleSheet, TextInput, TouchableOpacity } from 'react-native'\nimport { MaterialCommunityIcons } from '@expo/vector-icons'\n\nimport Colors from './colors'\n\nexport default function FormTextInput({\n  leftIcon,\n  width = '100%',\n  rightIcon,\n  handlePasswordVisibility,\n  ...otherProps\n}) {\n  return (\n    <View style={[styles.container, { width }]}>\n      {leftIcon && (\n        <MaterialCommunityIcons\n          name={leftIcon}\n          size={20}\n          color={Colors.mediumGrey}\n          style={styles.icon}\n        />\n      )}\n      <TextInput\n        style={styles.input}\n        placeholderTextColor={Colors.mediumGrey}\n        {...otherProps}\n      />\n      {rightIcon && (\n        <TouchableOpacity onPress={handlePasswordVisibility}>\n          <MaterialCommunityIcons\n            name={rightIcon}\n            size={20}\n            color={Colors.mediumGrey}\n            style={styles.rightIconStyles}\n          />\n        </TouchableOpacity>\n      )}\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: Colors.lightGrey,\n    borderRadius: 25,\n    flexDirection: 'row',\n    justifyContent: 'center',\n    padding: 15,\n    marginVertical: 10,\n  },\n  icon: {\n    marginRight: 10,\n  },\n  input: {\n    flex: 1,\n    width: '100%',\n    fontSize: 18,\n    color: Colors.black,\n  },\n  rightIconStyles: {\n    alignSelf: 'center',\n    marginLeft: 10,\n  },\n})\n","import React from 'react'\nimport { Text, TouchableOpacity, StyleSheet } from 'react-native'\nimport { useFormikContext } from 'formik'\n\nimport Colors from './colors'\n\nexport default function FormButton({ title, color = 'primary' }) {\n  const { handleSubmit, values } = useFormikContext()\n  const text = typeof title === 'function' ? title(values) : title\n\n  return (\n    <TouchableOpacity\n      style={[styles.button, { backgroundColor: Colors[color] }]}\n      onPress={handleSubmit}\n    >\n      <Text style={styles.buttonText}>{text}</Text>\n    </TouchableOpacity>\n  )\n}\n\nconst styles = StyleSheet.create({\n  button: {\n    marginVertical: 10,\n    borderRadius: 25,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 15,\n    width: '100%',\n  },\n  buttonText: {\n    color: Colors.white,\n    fontSize: 18,\n    fontWeight: '600',\n    textTransform: 'uppercase',\n  },\n})\n","import React from 'react'\nimport { StyleSheet, Switch, Text, View } from 'react-native'\nimport { useFormikContext } from 'formik'\n\nimport Colors from './colors'\n\nexport default function FormSwitch({\n  name,\n  title,\n  onChange = (x) => x,\n  ...otherProps\n}) {\n  const { values, setFieldValue } = useFormikContext()\n  const value = values[name]\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>{title}</Text>\n      <Switch\n        value={value}\n        onValueChange={(value) => {\n          onChange(value)\n          setFieldValue(name, value)\n        }}\n        {...otherProps}\n      />\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    flexDirection: 'row',\n  },\n  title: {\n    color: Colors.white,\n    fontSize: 18,\n    fontWeight: '600',\n    marginRight: 5,\n  },\n})\n","import Base from './Forms/Form'\nimport FormField from './Forms/FormField'\nimport FormButton from './Forms/FormButton'\nimport FormErrorMessage from './Forms/FormErrorMessage'\nimport FormSwitch from './Forms/FormSwitch'\n\nconst Form = (props) => Base(props)\n\nForm.Field = FormField\nForm.Button = FormButton\nForm.ErrorMessage = FormErrorMessage\nForm.Switch = FormSwitch\n\nexport default Form\n","import React from 'react'\nimport { Formik } from 'formik'\n\nexport default function Form({\n  children,\n  initialValues,\n  onSubmit,\n  validationSchema,\n}) {\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={validationSchema}\n      onSubmit={onSubmit}\n    >\n      {() => <React.Fragment>{children}</React.Fragment>}\n    </Formik>\n  )\n}\n","import React from 'react'\nimport { useFormikContext } from 'formik'\n\nimport FormErrorMessage from './FormErrorMessage'\nimport FormTextInput from './FormTextInput'\n\nexport default function FormField({ name, width, ...otherProps }) {\n  const {\n    setFieldTouched,\n    setFieldValue,\n    values,\n    errors,\n    touched,\n  } = useFormikContext()\n\n  return (\n    <React.Fragment>\n      <FormTextInput\n        value={values[name]}\n        onChangeText={(text) => setFieldValue(name, text)}\n        onBlur={() => setFieldTouched(name)}\n        width={width}\n        {...otherProps}\n      />\n      <FormErrorMessage error={errors[name]} visible={touched[name]} />\n    </React.Fragment>\n  )\n}\n","import React, { useState } from 'react'\nimport {\n  SafeAreaView,\n  StyleSheet,\n  Text,\n  View,\n  TouchableOpacity,\n} from 'react-native'\nimport { ScrollView } from 'react-native-gesture-handler'\nimport Form from '../components/Form'\n\nconst Field = ({ label, value }) => {\n  return (\n    <View style={styles.fieldContainer}>\n      <Text style={styles.label}>{label}</Text>\n      <Text style={styles.field}>{value}</Text>\n    </View>\n  )\n}\n\nconst DeveloperContactInfoScreen = ({ route, navigation }) => {\n  const [messageSent, setMessageSent] = useState(false)\n\n  const view = () => {\n    setMessageSent(true)\n  }\n\n  const developer = route.params.developer\n\n  const placeholder = 'Enter message to ' + developer.name\n  return (\n    <SafeAreaView style={styles.container}>\n      {!messageSent && (\n        <Text label=\"Name\" style={styles.developerName}>\n          Contact {developer.name}{' '}\n        </Text>\n      )}\n\n      {messageSent ? (\n        <Text label=\"Name\" style={styles.developerName}>\n          Message succesfully sent to {developer.name}!{' '}\n        </Text>\n      ) : (\n        <ScrollView>\n          <Form initialValues={{ message: '' }}>\n            <Form.Field\n              name=\"message\"\n              leftIcon=\"inbox\"\n              placeholder={placeholder}\n              autoCapitalize=\"none\"\n              autoFocus={true}\n              multiline={true}\n              numberOfLines={20}\n            />\n          </Form>\n          <TouchableOpacity style={styles.connectButton} onPress={() => view()}>\n            <Text style={styles.connectText}>Send Message</Text>\n          </TouchableOpacity>\n        </ScrollView>\n      )}\n    </SafeAreaView>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    marginTop: 10,\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    width: '90%',\n  },\n  field: {\n    padding: 5,\n    backgroundColor: 'white',\n    borderRadius: 5,\n    fontSize: 18,\n  },\n  fieldContainer: {\n    marginTop: 10,\n    marginBottom: 20,\n  },\n  label: {\n    fontWeight: 'bold',\n  },\n  developerName: {\n    fontSize: 24,\n    marginBottom: 10,\n    marginLeft: 'auto',\n    marginRight: 'auto',\n  },\n  developerImage: {\n    width: 200,\n    height: 300,\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    marginBottom: 10,\n  },\n  connectButton: {\n    margin: 30,\n    padding: 10,\n    textAlign: 'center',\n    backgroundColor: 'lightblue',\n  },\n  connectText: {\n    fontSize: 22,\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    // fontWeight: 500,\n  },\n})\n\nexport default DeveloperContactInfoScreen\n","import React from 'react'\nimport {\n  StyleSheet,\n  Text,\n  TouchableOpacity,\n  View,\n  Dimensions,\n} from 'react-native'\n\nconst Job = ({ job, view, matched, nonProfit }) => {\n  // TODO: maybe scale the font size based on the screen width/height?\n  const scaleFont = () => {\n    const width = Dimensions.get('window').width\n    return width > 500 ? 16 : 12\n  }\n\n  return (\n    <TouchableOpacity\n      style={matched ? styles.jobMatched : styles.jobButton}\n      onPress={() => {\n        view(job)\n      }}\n    >\n      <View style={styles.jobInfo}>\n        <Text style={styles.jobName}>{job.title}</Text>\n        <Text style={styles.jobCompany}>\n          {'company' in nonProfit ? nonProfit.company : job.companyId}\n        </Text>\n        <Text style={styles.jobTime}>{job.weeklyTime}</Text>\n      </View>\n    </TouchableOpacity>\n  )\n}\n\nconst timeParser = (timeInt) => {\n  if (timeInt === 0) {\n    return '<5 hrs/week'\n  } else if (timeInt === 1) {\n    return '5-10 hrs/week'\n  } else {\n    return '10+ hrs/week'\n  }\n}\n\nconst styles = StyleSheet.create({\n  jobButton: {\n    borderRadius: 5,\n    borderStyle: 'solid',\n    borderWidth: 1,\n    borderColor: 'black',\n    // justifyContent: 'center',\n    flexDirection: 'row',\n    alignItems: 'center',\n    margin: 10,\n    padding: 10,\n    backgroundColor: 'white',\n  },\n  jobMatched: {\n    borderRadius: 5,\n    borderStyle: 'solid',\n    borderWidth: 3,\n    borderColor: 'green',\n    shadowColor: 'green',\n    shadowOpacity: 0.4,\n    shadowRadius: 4,\n    shadowOffset: {\n      height: 2,\n      width: 2,\n    },\n    // justifyContent: 'center',\n    flexDirection: 'row',\n    alignItems: 'center',\n    margin: 10,\n    padding: 10,\n    // backgroundColor: '#289C28', // old (too dark) background color\n    // backgroundColor: '#90ee90', // new (maybe too light?) green color\n    backgroundColor: 'white',\n  },\n  jobInfo: {\n    flexDirection: 'column',\n    flexShrink: 1,\n  },\n  jobName: {\n    fontWeight: 'bold',\n    fontSize: 18,\n  },\n  jobCompany: {\n    fontStyle: 'italic',\n    fontSize: 14,\n    marginBottom: 10,\n  },\n  jobTime: {\n    fontWeight: '300',\n    fontSize: 16,\n  },\n})\n\nexport default Job\n","import React from 'react'\nimport { ScrollView } from 'react-native'\nimport Job from './Job'\n\nconst JobList = ({ jobs, view, matched, nonProfits }) => {\n  return (\n    <ScrollView>\n      {jobs.map((job, i) => (\n        <Job\n          key={i}\n          view={view}\n          job={job}\n          matched={matched[i]}\n          nonProfit={\n            job.companyId in nonProfits ? nonProfits[job.companyId] : {}\n          }\n        />\n      ))}\n    </ScrollView>\n  )\n}\n\nexport default JobList\n","import { createContext } from 'react'\n\nconst JobListContext = createContext()\n\nexport default JobListContext\n","import React, { useEffect, useState } from 'react'\nimport { SafeAreaView, StatusBar, StyleSheet } from 'react-native'\nimport JobList from '../components/JobList'\nimport { firebase } from '../firebase'\nimport JobListContext from '../contexts/JobListContext'\n\nconst JobDisplayScreen = ({ route, navigation }) => {\n  const preferences = route.params.preferences\n\n  const [jobs, setJobs] = useState([])\n  const [nonProfits, setNonProfits] = useState({})\n\n  useEffect(() => {\n    const db = firebase.database().ref()\n    const handleData = (snap) => {\n      if (snap.val()) {\n        const val = snap.val()\n        const jobsList = Object.values(val.jobs)\n        setJobs(jobsList)\n        setNonProfits(val.nonprofits)\n      }\n    }\n    db.on('value', handleData, (error) => console.log(error))\n    return () => db.off('value', handleData)\n  }, [])\n\n  // As long as one criteria matches, consider the job a match\n  // Also include number of criteria that match in case we might want to rank ...\n  // ... the jobs later on\n  const isMatchBasic = (job) => {\n    const nonprofit = nonProfits[job.companyId]\n    if (!nonprofit) return false\n\n    const matches = [\n      preferences['industry'].includes(nonprofit.industry),\n      preferences['length'].includes(nonprofit.length),\n      preferences['role'].includes(job.role),\n      preferences['weeklyTime'].includes(job.weeklyTime),\n    ]\n\n    const numMatches = matches.filter((match) => match).length\n    return numMatches > 0\n  }\n\n  const getOrderedJobs = (jobs) => {\n    const matchedJobs = []\n    const otherJobs = []\n\n    jobs.map((job) => {\n      if (isMatchBasic(job) && matchedJobs.length < 0.5 * jobs.length) {\n        // Use the basic matching algorithm for now\n        matchedJobs.push(job)\n      } else {\n        otherJobs.push(job)\n      }\n    })\n\n    const orderedJobs = matchedJobs.concat(otherJobs)\n\n    const matchMask = new Array(jobs.length)\n    let i = 0\n    for (i; i < matchedJobs.length; i++) {\n      matchMask[i] = true\n    }\n    for (i; i < jobs.length; i++) {\n      matchMask[i] = false\n    }\n    return [orderedJobs, matchMask]\n  }\n\n  // View job detail\n  const view = (job) => {\n    navigation.navigate('JobDetailScreen', {\n      job: job,\n      nonProfit: nonProfits[job.companyId],\n    })\n  }\n\n  const renderJobList = () => {\n    const [orderedJobs, matchMask] = getOrderedJobs(jobs)\n    return (\n      <JobList\n        jobs={orderedJobs}\n        view={view}\n        matched={matchMask}\n        nonProfits={nonProfits}\n      />\n    )\n  }\n\n  return (\n    <JobListContext.Provider value={jobs}>\n      <SafeAreaView style={styles.container}>\n        {renderJobList()}\n        <StatusBar style=\"auto\" hidden=\"false\" barStyle=\"dark-content\" />\n      </SafeAreaView>\n    </JobListContext.Provider>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    //alignItems: 'center',\n    justifyContent: 'center',\n    paddingTop: 20,\n    backgroundColor: '#D7EAF9',\n  },\n  bannerStyle: {\n    alignItems: 'center',\n    color: 'white',\n    backgroundColor: '#cc0000ff',\n    fontSize: 28,\n  },\n})\n\nexport default JobDisplayScreen\n","import React from 'react'\nimport {\n  SafeAreaView,\n  StyleSheet,\n  Text,\n  View,\n  TouchableOpacity,\n  Image,\n} from 'react-native'\nimport { ScrollView } from 'react-native-gesture-handler'\n\nconst Field = ({ label, value }) => {\n  return (\n    <View style={styles.fieldContainer}>\n      <Text style={styles.label}>{label}</Text>\n      <Text style={styles.field}>{value}</Text>\n    </View>\n  )\n}\n\nconst jobProps = {\n  role: 'Role',\n  descrip: 'Description',\n  weeklyTime: 'Weekly Time',\n  languages: 'Languages',\n}\n\nconst companyProps = {\n  logo: 'Logo',\n  company: 'Name',\n  title: 'Project',\n  descrip: 'Description',\n  industry: 'Industry',\n  length: 'Project Duration',\n  url: 'URL',\n}\n\nconst JobDetailScreen = ({ route, navigation }) => {\n  const job = route.params.job\n  const nonProfit = route.params.nonProfit\n\n  console.log('job: ', job)\n  console.log('nonProfit: ', nonProfit)\n\n  const view = (nonprof) => {\n    navigation.navigate('NonprofContactInfoScreen', { nonprof })\n  }\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <Text label=\"Name\" style={styles.name}>\n        {job.title}\n      </Text>\n      <ScrollView>\n        {Object.keys(jobProps).map(\n          (key, i) =>\n            job[key] && (\n              <Field\n                key={i}\n                label={jobProps[key]}\n                value={Array.isArray(job[key]) ? job[key].join(', ') : job[key]}\n              />\n            )\n        )}\n        <Text label=\"Name\" style={styles.name}>\n          About the non-profit\n        </Text>\n        {Object.keys(companyProps).map((key, i) => (\n          <React.Fragment>\n            {key === 'logo' ? (\n              <Image\n                style={styles.developerImage}\n                source={{ uri: nonProfit.logo }}\n              />\n            ) : (\n              <Field key={i} label={companyProps[key]} value={nonProfit[key]} />\n            )}\n          </React.Fragment>\n        ))}\n      </ScrollView>\n\n      <TouchableOpacity\n        style={styles.connectButton}\n        onPress={() => view(nonProfit)}\n      >\n        <Text style={styles.connectText}>Connect</Text>\n      </TouchableOpacity>\n    </SafeAreaView>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    marginTop: 10,\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    width: '90%',\n  },\n  field: {\n    padding: 5,\n    backgroundColor: 'white',\n    borderRadius: 5,\n    fontSize: 18,\n  },\n  fieldContainer: {\n    marginTop: 10,\n    marginBottom: 20,\n  },\n  label: {\n    fontWeight: 'bold',\n  },\n  name: {\n    fontSize: 24,\n    marginBottom: 10,\n    marginLeft: 'auto',\n    marginRight: 'auto',\n  },\n  developerImage: {\n    width: 200,\n    height: 300,\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    marginBottom: 10,\n  },\n  connectButton: {\n    margin: 30,\n    padding: 10,\n    textAlign: 'center',\n    backgroundColor: 'lightblue',\n  },\n  connectText: {\n    fontSize: 22,\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    // fontWeight: 500,\n  },\n  developerImage: {\n    width: 200,\n    height: 200,\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    marginBottom: 10,\n  },\n})\n\nexport default JobDetailScreen\n","import React, { useState } from 'react'\nimport {\n  SafeAreaView,\n  StyleSheet,\n  Text,\n  TouchableOpacity,\n  View,\n} from 'react-native'\nimport { ScrollView } from 'react-native-gesture-handler'\nimport Form from '../components/Form'\n\nconst NonprofContactInfoScreen = ({ route, navigation }) => {\n  const [messageSent, setMessageSent] = useState(false)\n\n  const headOut = () => {\n    navigation.navigate('JobListScreen')\n  }\n\n  const letter = `Hi,\n\n  My name is ________, and I am a ___ year student developer interested in joining your project team. I am most interested in working as a  ______ . Your project particularly interests me because of _____Of course, I'd be happy to answer any questions or pass along additional information that might be helpful\n  \n  Thank you for your time and consideration, and I look forward to hearing back from you soon.\n  \n  Best,\n  ____________`\n\n  const view = () => {\n    setMessageSent(true)\n  }\n\n  const nonprof = route.params.nonprof\n  const nonprofName = nonprof.company\n\n  const placeholder = 'Enter message to ' + nonprofName\n  return (\n    <SafeAreaView style={styles.container}>\n      {!messageSent && (\n        <Text label=\"Name\" style={styles.name}>\n          Contact {nonprofName}\n        </Text>\n      )}\n\n      {messageSent ? (\n        <View>\n          <Text label=\"Name\" style={styles.name}>\n            Message succesfully sent to {nonprofName}!\n          </Text>\n          <TouchableOpacity\n            style={styles.connectButton}\n            onPress={() => {\n              view()\n              headOut()\n            }}\n          >\n            <Text style={styles.connectText}>Return to Non-Profit List</Text>\n          </TouchableOpacity>\n        </View>\n      ) : (\n        <ScrollView>\n          <Form initialValues={{ message: letter }}>\n            <Form.Field\n              name=\"message\"\n              leftIcon=\"inbox\"\n              placeholder={placeholder}\n              autoCapitalize=\"none\"\n              autoFocus={true}\n              multiline={true}\n              numberOfLines={20}\n            />\n          </Form>\n          <TouchableOpacity style={styles.connectButton} onPress={() => view()}>\n            <Text style={styles.connectText}>Send Message</Text>\n          </TouchableOpacity>\n        </ScrollView>\n      )}\n    </SafeAreaView>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    marginTop: 10,\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    width: '90%',\n  },\n  field: {\n    padding: 5,\n    backgroundColor: 'white',\n    borderRadius: 5,\n    fontSize: 18,\n  },\n  fieldContainer: {\n    marginTop: 10,\n    marginBottom: 20,\n  },\n  label: {\n    fontWeight: 'bold',\n  },\n  name: {\n    fontSize: 24,\n    marginBottom: 10,\n    marginLeft: 'auto',\n    marginRight: 'auto',\n  },\n  developerImage: {\n    width: 200,\n    height: 300,\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    marginBottom: 10,\n  },\n  connectButton: {\n    margin: 30,\n    padding: 10,\n    textAlign: 'center',\n    backgroundColor: 'lightblue',\n  },\n  connectText: {\n    fontSize: 22,\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    // fontWeight: 500,\n  },\n})\n\nexport default NonprofContactInfoScreen\n","import 'react-native-gesture-handler'\nimport React from 'react'\nimport { createStackNavigator } from '@react-navigation/stack'\nimport { NavigationContainer } from '@react-navigation/native'\nimport SearchScreen from './screens/SearchScreen'\nimport AboutScreen from './screens/AboutScreen'\nimport DeveloperProfileScreen from './screens/DeveloperProfileScreen'\nimport ChooseAppViewScreen from './screens/ChooseAppViewScreen'\nimport DeveloperPreferenceSelectionScreen from './screens/DeveloperPreferenceSelectionScreen'\nimport DeveloperContactInfoScreen from './screens/DeveloperContactInfoScreen'\nimport JobListScreen from './screens/JobListScreen'\nimport JobDetailScreen from './screens/JobDetailScreen'\nimport NonprofContactInfoScreen from './screens/NonprofContactInfoScreen'\n\nconst Stack = createStackNavigator()\n\nexport default function App() {\n  return (\n    <NavigationContainer>\n      <Stack.Navigator>\n        <Stack.Screen\n          name=\"ChooseAppViewScreen\"\n          component={ChooseAppViewScreen}\n          options={{ title: 'NonProfDev' }}\n        />\n        <Stack.Screen\n          name=\"DeveloperPreferenceSelectionScreen\"\n          component={DeveloperPreferenceSelectionScreen}\n          options={{ title: 'Preference Selection' }}\n        />\n        <Stack.Screen\n          name=\"JobListScreen\"\n          component={JobListScreen}\n          options={{ title: 'Matched Jobs' }}\n        />\n        <Stack.Screen\n          name=\"JobDetailScreen\"\n          component={JobDetailScreen}\n          options={{ title: 'Job Details' }}\n        />\n        <Stack.Screen\n          name=\"NonprofContactInfoScreen\"\n          component={NonprofContactInfoScreen}\n          options={{ title: 'Job Details' }}\n        />\n        <Stack.Screen\n          name=\"SearchScreen\"\n          component={SearchScreen}\n          options={{ title: 'NonProfDev' }}\n        />\n        <Stack.Screen\n          name=\"DeveloperProfileScreen\"\n          component={DeveloperProfileScreen}\n          options={{ title: 'Developer Profile' }}\n        />\n        <Stack.Screen\n          name=\"AboutScreen\"\n          component={AboutScreen}\n          options={{ title: 'About' }}\n        />\n        <Stack.Screen\n          name=\"DeveloperContactInfoScreen\"\n          component={DeveloperContactInfoScreen}\n          options={{ title: 'Contact Developer' }}\n        />\n      </Stack.Navigator>\n    </NavigationContainer>\n  )\n}\n"],"sourceRoot":""}