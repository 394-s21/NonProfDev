{"version":3,"sources":["components/Developer.js","components/DeveloperList.js","utils/data.js","utils/search.js","screens/SearchScreen.js","screens/AboutScreen.js","screens/DeveloperProfileScreen.js","screens/ChooseAppViewScreen.js","components/PreferenceButton.js","components/PreferenceGroup.js","screens/DeveloperPreferenceSelectionScreen.js","components/Forms/colors.js","components/Forms/FormErrorMessage.js","components/Forms/FormTextInput.js","components/Forms/FormButton.js","components/Forms/FormSwitch.js","components/Form.js","components/Forms/Form.js","components/Forms/FormField.js","screens/DeveloperContactInfoScreen.js","utils/nonProfData.js","components/Job.js","components/JobList.js","screens/JobListScreen.js","screens/JobDetailScreen.js","screens/NonprofContactInfoScreen.js","App.js"],"names":["styles","StyleSheet","create","developerButton","borderRadius","borderStyle","borderWidth","borderColor","flexDirection","alignItems","margin","padding","backgroundColor","developerImage","width","height","marginRight","developerInfo","flexShrink","developerName","fontWeight","fontSize","developerLocation","developerRole","fontStyle","developerSkills","marginTop","Developer","developer","view","TouchableOpacity","style","onPress","Image","source","uri","pic","View","name","location","role","skills","join","DeveloperList","developers","ScrollView","map","key","id","data","Bio","weeklyTime","projectLength","interests","teamSize","options","keys","container","flex","justifyContent","paddingTop","bannerStyle","color","SearchScreen","obj","navigation","useState","search","updateSearch","developersShown","setDevelopersShown","fuse","Fuse","SafeAreaView","placeholder","onChangeText","v","item","value","lightTheme","navigate","StatusBar","hidden","barStyle","userContainer","h1_text","marginBottom","h3_text","textAlign","h4_text","AboutScreen","h1","h3","h4","Field","label","fieldContainer","field","weeklyTimes","mapWeeklyTime","devTime","returnArr","i","length","push","projectLengths","mapProjectLength","projTime","teamSizes","mapTeamSize","marginLeft","connectButton","connectText","DeveloperProfileScreen","route","params","developerBio","roleButton","buttonText","ChooseAppViewScreen","preferenceButtonBase","minWidth","maxWidth","preferenceButton","preferenceTextSelected","preferenceText","preferenceButtonSelected","PreferenceButton","select","isSelected","title","buttonGroup","PreferenceGroup","toggleSelect","selection","preferenceData","submitButtonText","DeveloperPreferenceSelectionScreen","a","Array","initSelections","selections","setSelections","tmp","handleSelect","preferences","prefObj","mask","filter","_","getPreferences","primary","secondary","black","white","ghostWhite","lightGrey","mediumGrey","red","FormErrorMessage","error","visible","errorText","Colors","FormTextInput","leftIcon","rightIcon","handlePasswordVisibility","otherProps","MaterialCommunityIcons","size","icon","TextInput","input","placeholderTextColor","rightIconStyles","marginVertical","alignSelf","button","textTransform","Form","props","children","initialValues","onSubmit","validationSchema","Fragment","Base","useFormikContext","setFieldTouched","setFieldValue","values","errors","touched","text","onBlur","Button","handleSubmit","ErrorMessage","Switch","onChange","x","onValueChange","DeveloperContactInfoScreen","messageSent","setMessageSent","message","autoCapitalize","autoFocus","multiline","numberOfLines","nonProfsData","nonprofits","company","descrip","industry","url","logo","jobArray","companyId","prereqs","languages","companyParser","companyInt","jobButton","jobMatched","shadowColor","shadowOpacity","shadowRadius","shadowOffset","jobInfo","jobName","jobCompany","jobTime","Job","job","matched","JobList","jobs","JobDisplayScreen","matchedJobs","otherJobs","nonprofit","includes","match","isMatchBasic","orderedJobs","concat","matchMask","getOrderedJobs","jobsShown","jobProps","companyProps","JobDetailScreen","nonprof","Object","NonprofContactInfoScreen","nonprofName","Stack","createStackNavigator","App","NavigationContainer","Navigator","Screen","component","JobListScreen"],"mappings":"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","file":"static/js/app.141cf92c.chunk.js","sourcesContent":["import React from 'react'\nimport {\n  StyleSheet,\n  Image,\n  Text,\n  TouchableOpacity,\n  View,\n  Dimensions,\n} from 'react-native'\nimport { BorderlessButton } from 'react-native-gesture-handler'\n\n// TODO: avatar/profile picture is currently hardcoded\nconst Developer = ({ developer, view }) => {\n  // TODO: maybe scale the font size based on the screen width/height?\n  const scaleFont = () => {\n    const width = Dimensions.get('window').width\n    return width > 500 ? 16 : 12\n  }\n\n  return (\n    <TouchableOpacity\n      style={styles.developerButton}\n      onPress={() => {\n        view(developer)\n      }}\n    >\n      <Image style={styles.developerImage} source={{ uri: developer.pic }} />\n      <View style={styles.developerInfo}>\n        <Text style={styles.developerName}>{developer.name}</Text>\n        <Text style={styles.developerLocation}>{developer.location}</Text>\n        <Text style={styles.developerRole}>{developer.role}</Text>\n        <Text style={styles.developerSkills}>\n          Skills: {developer.skills.join(', ')}\n        </Text>\n      </View>\n    </TouchableOpacity>\n  )\n}\n\nconst styles = StyleSheet.create({\n  developerButton: {\n    borderRadius: 5,\n    borderStyle: 'solid',\n    borderWidth: 1,\n    borderColor: '#DFDFDF',\n    // justifyContent: 'center',\n    flexDirection: 'row',\n    alignItems: 'center',\n    margin: 10,\n    padding: 10,\n    backgroundColor: 'white',\n  },\n  developerImage: {\n    width: 75,\n    height: 100,\n    marginRight: 10,\n  },\n  developerInfo: {\n    flexDirection: 'column',\n    flexShrink: 1,\n  },\n  developerName: {\n    fontWeight: 'bold',\n    fontSize: 18,\n  },\n  developerLocation: {\n    fontWeight: '300',\n    fontSize: 16,\n  },\n  developerRole: {\n    fontStyle: 'italic',\n    fontSize: 14,\n  },\n  developerSkills: {\n    marginTop: 10,\n    fontSize: 16,\n  },\n})\n\nexport default Developer\n","import React from 'react'\nimport { ScrollView } from 'react-native'\nimport Developer from './Developer'\n\nconst DeveloperList = ({ developers, view }) => {\n  return (\n    <ScrollView>\n      {developers.map((developer) => (\n        <Developer key={developer.id} view={view} developer={developer} />\n      ))}\n    </ScrollView>\n  )\n}\n\nexport default DeveloperList\n","export const data = {\n  developers: [\n    {\n      id: 0,\n      name: 'Mark',\n      role: 'Computer Science Student at Northwestern University',\n      location: 'Evanston',\n      skills: ['Java', 'Python', 'Databases'],\n      pic: 'https://pbs.twimg.com/profile_images/1422637130/mccigartrophy.jpg',\n      Bio: '1st year CS major @ NU. Open to anything at the moment!',\n      weeklyTime: [0, 1], // 0: <5 hrs/week, 1: 5-10 hrs, 2: 10+ hrs\n      projectLength: [0], // 0: <1 month, 1: 1-3 months, 2: 3+ months\n      interests: ['Education'],\n      teamSize: [0], // 0: Solo, 1: 2-3 ppl, 2: 3+ ppl\n    },\n    {\n      id: 1,\n      name: 'Allison',\n      role: 'Computer Science Student at Stanford University',\n      location: 'San Francisco',\n      skills: ['Golang', 'C++', 'Databases'],\n      pic:\n        'https://static.inspiremore.com/wp-content/uploads/2015/04/21050518/beyonce-the-gentlewoman.jpg',\n      Bio:\n        '1st year CS student @ Stanford. Primarily looking for backend roles, but open to anything!',\n      weeklyTime: [1], // 0: <5 hrs/week, 1: 5-10 hrs, 2: 10+ hrs\n      projectLength: [2], // 0: <1 month, 1: 1-3 months, 2: 3+ months\n      interests: ['Religion', 'Education'],\n      teamSize: [1], // 0: Solo, 1: 2-3 ppl, 2: 3+ ppl\n    },\n    {\n      id: 2,\n      name: 'Josh',\n      role: 'Computer Science Student at University of Chicago',\n      location: 'Chicago',\n      skills: ['JavaScript', 'Python', 'ML', 'Databases'],\n      pic:\n        'https://assets.vogue.com/photos/59132f18dc6868483f55b55a/master/w_2560%2Cc_limit/00-lede-the-rock.jpg',\n      Bio:\n        'Junior CS major @ UChicago, looking to hone my ML skills with a relevant project.',\n      weeklyTime: [1], // 0: <5 hrs/week, 1: 5-10 hrs, 2: 10+ hrs\n      projectLength: [1], // 0: <1 month, 1: 1-3 months, 2: 3+ months\n      interests: ['Community Leadership'],\n      teamSize: [2], // 0: Solo, 1: 2-3 ppl, 2: 3+ ppl\n    },\n    {\n      id: 3,\n      name: 'Michelle',\n      role: 'Computer Science Student at Northwestern University',\n      location: 'Evanston',\n      skills: ['Java', 'Python', 'React', 'Databases'],\n      pic:\n        'https://thumbor.forbes.com/thumbor/fit-in/1200x0/filters%3Aformat%28jpg%29/https%3A%2F%2Fblogs-images.forbes.com%2Fanneglusker%2Ffiles%2F2018%2F12%2FMichelle-Obama-book-cover-shot-e1544143689487-1200x944.jpg',\n      Bio:\n        '2nd year CS major @ NU - particularly interested in the intersection between tech & finance.',\n      weeklyTime: [0], // 0: <5 hrs/week, 1: 5-10 hrs, 2: 10+ hrs\n      projectLength: [1], // 0: <1 month, 1: 1-3 months, 2: 3+ months\n      interests: ['Religion'],\n      teamSize: [2], // 0: Solo, 1: 2-3 ppl, 2: 3+ ppl\n    },\n    {\n      id: 4,\n      name: 'Evelyn',\n      role: 'Computer Science Student at Northwestern University',\n      location: 'Evanston',\n      skills: ['React', 'JavaScript', 'Databases', 'Firebase'],\n      pic:\n        'https://thefader-res.cloudinary.com/private_images/c_limit,w_1024/c_crop,h_600,w_1019,x_5,y_91,f_auto,q_auto:eco/Taylor-Swift-_-Valheria-Rocha-1050x700_uulkcd/Taylor-Swift-_-Valheria-Rocha-1050x700_uulkcd.jpg',\n      Bio:\n        'Senior CS Major @ NU. Well versed in React/Firebase - looking for a demanding role to apply these skills',\n      weeklyTime: [1], // 0: <5 hrs/week, 1: 5-10 hrs, 2: 10+ hrs\n      projectLength: [0], // 0: <1 month, 1: 1-3 months, 2: 3+ months\n      interests: ['Education', 'Community Leadership'],\n      teamSize: [0], // 0: Solo, 1: 2-3 ppl, 2: 3+ ppl\n    },\n    {\n      id: 5,\n      name: 'Linus',\n      role: 'Computer Science Student at Northwestern University',\n      location: 'Evanston',\n      skills: ['Java', 'Python', 'Databases'],\n      pic: 'https://cdn.nba.com/manage/2020/10/lebron-james-lakers-687x588.jpg',\n      Bio:\n        '2nd year CS student @ NU. Primarily interested in front-end development.',\n      weeklyTime: [2], // 0: <5 hrs/week, 1: 5-10 hrs, 2: 10+ hrs\n      projectLength: [2], // 0: <1 month, 1: 1-3 months, 2: 3+ months\n      interests: ['Education'],\n      teamSize: [1], // 0: Solo, 1: 2-3 ppl, 2: 3+ ppl\n    },\n    {\n      id: 6,\n      name: 'Tiger',\n      role: 'Computer Science Student at Northwestern University',\n      location: 'Evanston',\n      skills: ['Java', 'JavaScript', 'Python', 'ML', 'Databases'],\n      pic:\n        'https://upload.wikimedia.org/wikipedia/commons/f/f6/Andrew_Yang_by_Gage_Skidmore.jpg',\n      Bio:\n        'Senior CS major @ NU. Open to any type of role: frontend, backend, full-stack, ML/AI, etc.',\n      weeklyTime: [1], // 0: <5 hrs/week, 1: 5-10 hrs, 2: 10+ hrs\n      projectLength: [2], // 0: <1 month, 1: 1-3 months, 2: 3+ months\n      interests: ['Community Leadership', 'Education', 'Religion'],\n      teamSize: [1], // 0: Solo, 1: 2-3 ppl, 2: 3+ ppl\n    },\n  ],\n}\n","import Fuse from 'fuse.js'\n\nconst options = {\n  // isCaseSensitive: false,\n  // includeScore: false,\n  // shouldSort: true,\n  // includeMatches: false,\n  // findAllMatches: false,\n  // minMatchCharLength: 1,\n  // location: 0,\n  // threshold: 0.6,\n  // distance: 100,\n  // useExtendedSearch: false,\n  // ignoreLocation: false,\n  // ignoreFieldNorm: false,\n  keys: ['location', 'skills'],\n}\n\nexport const getFuse = (obj) => new Fuse(obj, options)\n","import React, { useState } from 'react'\nimport { SafeAreaView, StatusBar, StyleSheet, Text } from 'react-native'\nimport { SearchBar } from 'react-native-elements'\nimport DeveloperList from '../components/DeveloperList'\nimport { data } from '../utils/data'\nimport { getFuse } from '../utils/search'\n\nconst Banner = ({ title }) => (\n  <Text style={styles.bannerStyle}>{title || '[loading...]'}</Text>\n)\n\nconst SearchScreen = ({ navigation }) => {\n  const [search, updateSearch] = useState('')\n\n  // Currently hardcoded data\n  const [developers, setDevelopers] = useState(data.developers)\n\n  // Filtered list of developers\n  const [developersShown, setDevelopersShown] = useState(developers)\n\n  // Hacky search with fuse.js\n  const fuse = getFuse(developers)\n  const handleSearch = (search) => {\n    updateSearch(search)\n    search === ''\n      ? setDevelopersShown(developers)\n      : setDevelopersShown(fuse.search(search).map((v) => v.item))\n  }\n\n  // View developer detail\n  const view = (developer) => {\n    navigation.navigate('DeveloperProfileScreen', { developer })\n  }\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <SearchBar\n        placeholder=\"Search for skills/location...\"\n        onChangeText={handleSearch}\n        value={search}\n        lightTheme={true}\n      />\n      <DeveloperList developers={developersShown} view={view} />\n      <StatusBar style=\"auto\" hidden=\"false\" barStyle=\"dark-content\" />\n    </SafeAreaView>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    //alignItems: 'center',\n    justifyContent: 'center',\n    paddingTop: 20,\n    backgroundColor: '#D7EAF9',\n  },\n  bannerStyle: {\n    alignItems: 'center',\n    color: 'white',\n    backgroundColor: '#cc0000ff',\n    fontSize: 28,\n  },\n})\n\nexport default SearchScreen\n","import React from 'react'\nimport { StatusBar, StyleSheet, Text, View } from 'react-native'\n\n// Original home screen\n// Currently not used\nconst AboutScreen = ({ navigation }) => {\n  return (\n    <View style={styles.container}>\n      <Text h1 style={styles.h1_text}>\n        NonProfDev\n      </Text>\n      <Text h3 style={styles.h3_text}>\n        A simple, intuitive platform to connect non-profit organizations with\n        passionate web developers\n      </Text>\n      <Text h3 style={styles.h3_text}>\n        Created by the CS 394 Red Team\n      </Text>\n      <Text h4 style={styles.h4_text}>\n        Benjamin Nober, Chris Song, Jacob Wat, Linus Okoth, Mason Brachmann,\n        Tiger Nie, Zaddeen Benaissa\n      </Text>\n      <StatusBar style=\"auto\" />\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n\n  userContainer: {\n    flex: 1,\n    alignItems: 'center',\n  },\n\n  h1_text: {\n    fontSize: 48,\n    marginBottom: 25,\n  },\n  h3_text: {\n    fontSize: 24,\n    textAlign: 'center',\n    marginBottom: 20,\n  },\n  h4_text: {\n    fontSize: 16,\n    textAlign: 'center',\n    marginBottom: 15,\n  },\n})\n\nexport default AboutScreen\n","import React from 'react'\nimport {\n  SafeAreaView,\n  StyleSheet,\n  Text,\n  View,\n  TouchableOpacity,\n  Image,\n} from 'react-native'\nimport { ScrollView } from 'react-native-gesture-handler'\n\nconst Field = ({ label, value }) => {\n  return (\n    <View style={styles.fieldContainer}>\n      <Text style={styles.label}>{label}</Text>\n      <Text style={styles.field}>{value}</Text>\n    </View>\n  )\n}\n\nconst DeveloperProfileScreen = ({ route, navigation }) => {\n  // View developer detail\n  const view = (developer) => {\n    navigation.navigate('DeveloperContactInfoScreen', { developer })\n  }\n\n  const developer = route.params.developer\n  return (\n    <SafeAreaView style={styles.container}>\n      \n      <Image style={styles.developerImage} source={{ uri: developer.pic }} />\n      <Text label=\"Name\" style={styles.developerName}>\n        {' '}\n        {developer.name}{' '}\n      </Text>\n      <ScrollView>\n        <Field\n          label=\"Location\"\n          value={developer.location}\n          style={styles.developerLocation}\n        />\n        <Field label=\"Bio\" value={developer.Bio} style={styles.developerBio} />\n        <Field\n          label=\"Role\"\n          value={developer.role}\n          style={styles.developerRole}\n        />\n        <Field\n          label=\"Skills\"\n          value={developer.skills.join(', ')}\n          style={styles.developerSkills}\n        />\n        <Text> Looking For: </Text>\n        <Field\n          label=\"Weekly Time Commitment\"\n          value={mapWeeklyTime(developer.weeklyTime).join('\\n')}\n          style={styles.developerSkills}\n        />\n        <Field\n          label=\"Project Length Commitment\"\n          value={mapProjectLength(developer.projectLength).join('\\n')}\n          style={styles.developerSkills}\n        />\n        <Field\n          label=\"Desired Team Size\"\n          value={mapTeamSize(developer.teamSize).join('\\n')}\n          style={styles.developerSkills}\n        />\n      </ScrollView>\n\n      <TouchableOpacity\n        style={styles.connectButton}\n        onPress={() => view(developer)}\n      >\n        <Text style={styles.connectText}>Connect</Text>\n      </TouchableOpacity>\n    </SafeAreaView>\n  )\n}\n\nconst weeklyTimes = [\"Less Than 5 Hours Per Week\", \"5-10 Hours Per Week\", \"10+ Hours Per Week\"]\n\nconst mapWeeklyTime = (devTime) =>  {\n  var returnArr = [];\n  for (var i=0; i < devTime.length; i++) {\n    returnArr.push(weeklyTimes[devTime[i]])\n  }\n  \n  return returnArr;\n}\n\nconst projectLengths = [\"Less Than 1 Month\", \"1-3 Months\", \"3+ Months\"]\n\nconst mapProjectLength = (projTime) =>  {\n  var returnArr = [];\n  for (var i=0; i < projTime.length; i++) {\n    returnArr.push(projectLengths[projTime[i]])\n  }\n  \n  return returnArr;\n}\n\nconst teamSizes = [\"Solo\", \"2-3 Member Team\", \"3+ Member Team\"]\n\nconst mapTeamSize = (teamSize) =>  {\n  var returnArr = [];\n  for (var i=0; i < teamSize.length; i++) {\n    returnArr.push(teamSizes[teamSize[i]])\n  }\n  \n  return returnArr;\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    marginTop: 10,\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    width: '90%',\n  },\n  field: {\n    padding: 5,\n    backgroundColor: 'white',\n    borderRadius: 5,\n    fontSize: 18,\n  },\n  fieldContainer: {\n    marginTop: 10,\n    marginBottom: 20,\n  },\n  label: {\n    fontWeight: 'bold',\n  },\n  developerName: {\n    fontSize: 24,\n    marginBottom: 10,\n    marginLeft: 'auto',\n    marginRight: 'auto',\n  },\n  developerImage: {\n    width: 200,\n    height: 300,\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    marginBottom: 10,\n  },\n  connectButton: {\n    margin: 30,\n    padding: 10,\n    textAlign: 'center',\n    backgroundColor: 'lightblue',\n  },\n  connectText: {\n    fontSize: 22,\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    // fontWeight: 500,\n  },\n})\n\nexport default DeveloperProfileScreen\n","import React from 'react'\nimport {\n  StatusBar,\n  StyleSheet,\n  Text,\n  View,\n  TouchableOpacity,\n} from 'react-native'\n\n// Original home screen\n// Currently not used\nconst ChooseAppViewScreen = ({ navigation }) => {\n  return (\n    <View style={styles.container}>\n      <Text h1 style={styles.h1_text}>\n        Welcome to NonProfDev!\n      </Text>\n      <Text h3 style={styles.h3_text}>\n        A simple, intuitive platform to connect non-profit organizations with\n        passionate developers.\n      </Text>\n      <Text h3 style={styles.h3_text}>\n        Are you a:\n      </Text>\n      <View>\n        <TouchableOpacity\n          style={styles.roleButton}\n          onPress={() =>\n            navigation.navigate('DeveloperPreferenceSelectionScreen')\n          }\n        >\n          <Text style={styles.buttonText}>Developer</Text>\n        </TouchableOpacity>\n      </View>\n      <View>\n        <TouchableOpacity\n          style={styles.roleButton}\n          onPress={() => navigation.navigate('SearchScreen')}\n        >\n          <Text style={styles.buttonText}>Non-Profit Organization</Text>\n        </TouchableOpacity>\n      </View>\n\n      <StatusBar style=\"auto\" />\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n\n  userContainer: {\n    flex: 1,\n    alignItems: 'center',\n  },\n\n  h1_text: {\n    fontSize: 48,\n    marginBottom: 25,\n  },\n  h3_text: {\n    fontSize: 24,\n    textAlign: 'center',\n    marginBottom: 20,\n  },\n  h4_text: {\n    fontSize: 16,\n    textAlign: 'center',\n    marginBottom: 15,\n  },\n  roleButton: {\n    backgroundColor: '#2196F3',\n    fontSize: 16,\n    margin: 15,\n    width: 250,\n    padding: 15,\n    textAlign: 'center',\n  },\n  buttonText: {\n    fontSize: 20,\n    color: 'ghostwhite',\n    textAlign: 'center',\n  },\n})\n\nexport default ChooseAppViewScreen\n","import React from 'react'\nimport { StyleSheet, Text, TouchableOpacity } from 'react-native'\n\nconst PreferenceButton = ({ select, buttonText, isSelected }) => (\n  <TouchableOpacity\n    onPress={select}\n    style={styles[isSelected ? 'preferenceButtonSelected' : 'preferenceButton']}\n  >\n    <Text\n      style={styles[isSelected ? 'preferenceTextSelected' : 'preferenceText']}\n    >\n      {buttonText}\n    </Text>\n  </TouchableOpacity>\n)\n\nconst preferenceButtonBase = {\n  borderRadius: 5,\n  margin: 10,\n  height: 50,\n  minWidth: 300,\n  maxWidth: 300,\n}\n\nconst styles = StyleSheet.create({\n  preferenceButton: {\n    ...preferenceButtonBase,\n    backgroundColor: '#d3d3d3',\n  },\n  preferenceTextSelected: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    color: 'white',\n    fontSize: 20,\n    textAlign: 'center',\n    paddingTop: 12,\n  },\n  preferenceText: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    color: 'black',\n    fontSize: 20,\n    textAlign: 'center',\n    paddingTop: 12,\n  },\n  preferenceButtonSelected: {\n    ...preferenceButtonBase,\n    backgroundColor: '#004a99',\n  },\n})\n\nexport default PreferenceButton\n","import React, { useState } from 'react'\nimport { StyleSheet, Text, View } from 'react-native'\nimport PreferenceButton from './PreferenceButton'\n\nconst PreferenceGroup = ({ title, options, toggleSelect, selection }) => (\n  <View>\n    <Text style={styles.title}>{title}</Text>\n    <View style={styles.buttonGroup}>\n      {options.map((name, i) => (\n        <PreferenceButton\n          key={i}\n          select={() => toggleSelect(i)}\n          buttonText={name}\n          isSelected={selection[i]}\n        />\n      ))}\n    </View>\n  </View>\n)\n\nconst styles = StyleSheet.create({\n  title: {\n    fontSize: 32,\n    textAlign: 'center',\n    marginTop: 30,\n  },\n  buttonGroup: {\n    flex: 1,\n    alignItems: 'center',\n  },\n})\n\nexport default PreferenceGroup\n","import React, { useState } from 'react'\nimport {\n  StatusBar,\n  StyleSheet,\n  SafeAreaView,\n  Text,\n  View,\n  Button,\n  TouchableOpacity,\n} from 'react-native'\nimport PreferenceGroup from '../components/PreferenceGroup'\nimport { ScrollView, /*TouchableOpacity*/ } from 'react-native-gesture-handler'\n\n// Preference data hardcoded for now, substitute for db call later\nconst preferenceData = [\n  {\n    id: 'role',\n    title: 'Primary Skillset/Desired Role',\n    options: ['Web Design', 'Web Development', 'Backend Development'],\n  },\n  {\n    id: 'industry',\n    title: 'Primary Field of Interest',\n    options: ['Community Leadership', 'Education', 'Religion'],\n  },\n  {\n    id: 'length',\n    title: 'Project Length',\n    options: ['One Month or Shorter', '1-3 Months (One Quarter)', '3+ Months'],\n  },\n  {\n    id: 'weeklyTime',\n    title: 'Weekly Commitment',\n    options: ['5 Hours or Fewer', '5-10 Hours', '10+ Hours'],\n  },\n]\n\n/**\n * Creates a selection object with\n *   key = preference title\n *   value = boolean array of length options\n */\nconst initSelections = (preferenceData) => {\n  const obj = {}\n  preferenceData.map((v) => {\n    const a = new Array(v.options.length)\n    for (let i = 0; i < v.options.length; ++i) a[i] = false\n    obj[v.id] = a\n  })\n  return obj\n}\n\n/**\n * Convert selections object to map of preferences\n */\nconst getPreferences = (preferenceData, selections) => {\n  const obj = {}\n  preferenceData.map((prefObj) => {\n    const mask = selections[prefObj.id]\n    obj[prefObj.id] = prefObj.options.filter((_, i) => mask[i])\n  })\n  return obj\n}\n\nconst DeveloperPreferenceSelectionScreen = ({ navigation }) => {\n  const [selections, setSelections] = useState(initSelections(preferenceData))\n\n  const handleSelect = (id, i) => {\n    //const newSelections = { ...selections }\n    const tmp = selections[id]\n    tmp[i] = !tmp[i]\n    setSelections((selections) => ({ ...selections, id: tmp }))\n  }\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <ScrollView>\n        <Text style={styles.h1_text}>Please select one or more preferences for each of the following:</Text>\n        {preferenceData.map((v, i) => (\n          <PreferenceGroup\n            key={i}\n            title={v.title}\n            options={v.options}\n            toggleSelect={(i) => handleSelect(v.id, i)}\n            selection={selections[v.id]}\n          />\n        ))}\n\n        <View style={styles.userContainer}>\n          {/* <Button\n            style={styles.submitButtonText}\n            title=\"Submit Preferences\"\n            onPress={() => {\n              const preferences = getPreferences(preferenceData, selections)\n              navigation.navigate('JobListScreen', { preferences })\n            }}\n          /> */}\n          <TouchableOpacity\n            style={styles.roleButton} \n            onPress={() => {\n              const preferences = getPreferences(preferenceData, selections)\n              navigation.navigate('JobListScreen', { preferences })\n            }}>\n              <Text style={styles.submitButtonText}>Submit Preferences</Text>\n          </TouchableOpacity>\n        </View>\n\n        <StatusBar style=\"auto\" />\n      </ScrollView>\n    </SafeAreaView>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n    // marginRight: 20,\n  },\n  userContainer: {\n    flex: 1,\n    alignItems: 'center',\n  },\n  h1_text: {\n    fontSize: 24,\n    marginTop: 30,\n    textAlign: 'center',\n  },\n  roleButton: {\n    borderRadius: 3,\n    backgroundColor: 'seagreen',\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginTop: 45,\n    marginBottom: 15,\n    padding: 20,\n    width: 300,\n  },\n  submitButtonText: {\n    color: 'ghostwhite',\n    fontSize: 20,\n    textAlign: 'center',\n  },\n})\n\nexport default DeveloperPreferenceSelectionScreen\n","export default {\n  primary: '#f57c00',\n  secondary: '#039be5',\n  black: '#222222',\n  white: '#ffffff',\n  ghostWhite: '#f8f8ff',\n  lightGrey: '#f9f9f9',\n  mediumGrey: '#6e6869',\n  red: '#fc5c65',\n}\n","import React from 'react'\nimport { StyleSheet, Text } from 'react-native'\n\nimport Colors from './colors'\n\nexport default function FormErrorMessage({ error, visible }) {\n  if (!error || !visible) {\n    return null\n  }\n\n  return <Text style={styles.errorText}>{error}</Text>\n}\n\nconst styles = StyleSheet.create({\n  errorText: {\n    marginLeft: 15,\n    color: Colors.red,\n    fontSize: 16,\n    marginBottom: 5,\n    fontWeight: '600',\n  },\n})\n","import React from 'react'\nimport { View, StyleSheet, TextInput, TouchableOpacity } from 'react-native'\nimport { MaterialCommunityIcons } from '@expo/vector-icons'\n\nimport Colors from './colors'\n\nexport default function FormTextInput({\n  leftIcon,\n  width = '100%',\n  rightIcon,\n  handlePasswordVisibility,\n  ...otherProps\n}) {\n  return (\n    <View style={[styles.container, { width }]}>\n      {leftIcon && (\n        <MaterialCommunityIcons\n          name={leftIcon}\n          size={20}\n          color={Colors.mediumGrey}\n          style={styles.icon}\n        />\n      )}\n      <TextInput\n        style={styles.input}\n        placeholderTextColor={Colors.mediumGrey}\n        {...otherProps}\n      />\n      {rightIcon && (\n        <TouchableOpacity onPress={handlePasswordVisibility}>\n          <MaterialCommunityIcons\n            name={rightIcon}\n            size={20}\n            color={Colors.mediumGrey}\n            style={styles.rightIconStyles}\n          />\n        </TouchableOpacity>\n      )}\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: Colors.lightGrey,\n    borderRadius: 25,\n    flexDirection: 'row',\n    justifyContent: 'center',\n    padding: 15,\n    marginVertical: 10,\n  },\n  icon: {\n    marginRight: 10,\n  },\n  input: {\n    flex: 1,\n    width: '100%',\n    fontSize: 18,\n    color: Colors.black,\n  },\n  rightIconStyles: {\n    alignSelf: 'center',\n    marginLeft: 10,\n  },\n})\n","import React from 'react'\nimport { Text, TouchableOpacity, StyleSheet } from 'react-native'\nimport { useFormikContext } from 'formik'\n\nimport Colors from './colors'\n\nexport default function FormButton({ title, color = 'primary' }) {\n  const { handleSubmit, values } = useFormikContext()\n  const text = typeof title === 'function' ? title(values) : title\n\n  return (\n    <TouchableOpacity\n      style={[styles.button, { backgroundColor: Colors[color] }]}\n      onPress={handleSubmit}\n    >\n      <Text style={styles.buttonText}>{text}</Text>\n    </TouchableOpacity>\n  )\n}\n\nconst styles = StyleSheet.create({\n  button: {\n    marginVertical: 10,\n    borderRadius: 25,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 15,\n    width: '100%',\n  },\n  buttonText: {\n    color: Colors.white,\n    fontSize: 18,\n    fontWeight: '600',\n    textTransform: 'uppercase',\n  },\n})\n","import React from 'react'\nimport { StyleSheet, Switch, Text, View } from 'react-native'\nimport { useFormikContext } from 'formik'\n\nimport Colors from './colors'\n\nexport default function FormSwitch({\n  name,\n  title,\n  onChange = (x) => x,\n  ...otherProps\n}) {\n  const { values, setFieldValue } = useFormikContext()\n  const value = values[name]\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>{title}</Text>\n      <Switch\n        value={value}\n        onValueChange={(value) => {\n          onChange(value)\n          setFieldValue(name, value)\n        }}\n        {...otherProps}\n      />\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    flexDirection: 'row',\n  },\n  title: {\n    color: Colors.white,\n    fontSize: 18,\n    fontWeight: '600',\n    marginRight: 5,\n  },\n})\n","import Base from './Forms/Form'\nimport FormField from './Forms/FormField'\nimport FormButton from './Forms/FormButton'\nimport FormErrorMessage from './Forms/FormErrorMessage'\nimport FormSwitch from './Forms/FormSwitch'\n\nconst Form = (props) => Base(props)\n\nForm.Field = FormField\nForm.Button = FormButton\nForm.ErrorMessage = FormErrorMessage\nForm.Switch = FormSwitch\n\nexport default Form\n","import React from 'react'\nimport { Formik } from 'formik'\n\nexport default function Form({\n  children,\n  initialValues,\n  onSubmit,\n  validationSchema,\n}) {\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={validationSchema}\n      onSubmit={onSubmit}\n    >\n      {() => <React.Fragment>{children}</React.Fragment>}\n    </Formik>\n  )\n}\n","import React from 'react'\nimport { useFormikContext } from 'formik'\n\nimport FormErrorMessage from './FormErrorMessage'\nimport FormTextInput from './FormTextInput'\n\nexport default function FormField({ name, width, ...otherProps }) {\n  const {\n    setFieldTouched,\n    setFieldValue,\n    values,\n    errors,\n    touched,\n  } = useFormikContext()\n\n  return (\n    <React.Fragment>\n      <FormTextInput\n        value={values[name]}\n        onChangeText={(text) => setFieldValue(name, text)}\n        onBlur={() => setFieldTouched(name)}\n        width={width}\n        {...otherProps}\n      />\n      <FormErrorMessage error={errors[name]} visible={touched[name]} />\n    </React.Fragment>\n  )\n}\n","import React, { useState } from 'react'\nimport {\n  SafeAreaView,\n  StyleSheet,\n  Text,\n  View,\n  TouchableOpacity,\n} from 'react-native'\nimport { ScrollView } from 'react-native-gesture-handler'\nimport Form from '../components/Form'\n\nconst Field = ({ label, value }) => {\n  return (\n    <View style={styles.fieldContainer}>\n      <Text style={styles.label}>{label}</Text>\n      <Text style={styles.field}>{value}</Text>\n    </View>\n  )\n}\n\nconst DeveloperContactInfoScreen = ({ route, navigation }) => {\n  const [messageSent, setMessageSent] = useState(false)\n\n  const view = () => {\n    setMessageSent(true)\n  }\n\n  const developer = route.params.developer\n\n  const placeholder = 'Enter message to ' + developer.name\n  return (\n    <SafeAreaView style={styles.container}>\n      {!messageSent && (\n        <Text label=\"Name\" style={styles.developerName}>\n          Contact {developer.name}{' '}\n        </Text>\n      )}\n\n      {messageSent ? (\n        <Text label=\"Name\" style={styles.developerName}>\n          Message succesfully sent to {developer.name}!{' '}\n        </Text>\n      ) : (\n        <ScrollView>\n          <Form initialValues={{ message: '' }}>\n            <Form.Field\n              name=\"message\"\n              leftIcon=\"inbox\"\n              placeholder={placeholder}\n              autoCapitalize=\"none\"\n              autoFocus={true}\n              multiline={true}\n              numberOfLines={20}\n            />\n          </Form>\n          <TouchableOpacity style={styles.connectButton} onPress={() => view()}>\n            <Text style={styles.connectText}>Send Message</Text>\n          </TouchableOpacity>\n        </ScrollView>\n      )}\n    </SafeAreaView>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    marginTop: 10,\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    width: '90%',\n  },\n  field: {\n    padding: 5,\n    backgroundColor: 'white',\n    borderRadius: 5,\n    fontSize: 18,\n  },\n  fieldContainer: {\n    marginTop: 10,\n    marginBottom: 20,\n  },\n  label: {\n    fontWeight: 'bold',\n  },\n  developerName: {\n    fontSize: 24,\n    marginBottom: 10,\n    marginLeft: 'auto',\n    marginRight: 'auto',\n  },\n  developerImage: {\n    width: 200,\n    height: 300,\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    marginBottom: 10,\n  },\n  connectButton: {\n    margin: 30,\n    padding: 10,\n    textAlign: 'center',\n    backgroundColor: 'lightblue',\n  },\n  connectText: {\n    fontSize: 22,\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    // fontWeight: 500,\n  },\n})\n\nexport default DeveloperContactInfoScreen\n","export const nonProfsData = {\n  nonprofits: [\n    {\n      id: 0,\n      title: 'Web Development for PI180 Website',\n      company: 'Project Impact 180',\n      descrip: 'We need help building our website',\n      industry: 'Community Leadership',\n      url: \"https://www.facebook.com/ProjectImpact180/\",\n      logo: \"https://scontent.fdpa1-1.fna.fbcdn.net/v/t1.6435-9/86807013_111974643722545_1272070550302228480_n.png?_nc_cat=104&ccb=1-3&_nc_sid=09cbfe&_nc_ohc=AaNPh3GBwIMAX8pCo24&_nc_ht=scontent.fdpa1-1.fna&oh=8783917f4e282e940565a8ed0f8c2a72&oe=60A3327A\",\n      length: '3+ Months', // 0: <1 month, 1: 1-3 months, 2: 3+ months\n    },\n    {\n      id: 1,\n      title: 'Update Ongoing Classes',\n      company: 'We All Code',\n      descrip:\n        'Help us maintain our weekly classes by integrating the information from our schedule into the website each week',\n      industry: 'Education',\n      url: \"https://www.weallcode.org/\",\n      logo: \"https://img.evbuc.com/https%3A%2F%2Fcdn.evbuc.com%2Fimages%2F131925775%2F93310981415%2F1%2Foriginal.20210324-154546?w=1000&auto=format%2Ccompress&q=75&sharp=10&rect=234%2C0%2C1490%2C745&s=651bac36a9695beabcdf528fdd3321d5\",\n      length: '3+ Months',\n    },\n    {\n      id: 2,\n      title: 'Scholarship/Career Search',\n      company: 'Evanston Church',\n      descrip:\n        'Help us build a platform to match our students with scholarships to apply for',\n      industry: 'Religion',\n      url: \"https://www.evanstonchurchofgod.org/\",\n      logo: \"https://images.app.goo.gl/noYpGd9JuTKSvWef7\",\n      length: 'One Month or Shorter',\n    },\n  ],\n}\n\nexport const jobArray = {\n  jobs: [\n    {\n      companyId: 0,\n      role: 'Web Design',\n      title: 'Frontend Developer',\n      descrip: `We need someone who is comfortable as a frontend developer. HTML/JS/CSS are required skills. Familiarity with React and Bootstrap (or similar) would be helpful!`,\n      prereqs: null,\n      weeklyTime: '5 Hours or Fewer', // 0: <5 hrs/week, 1: 5-10 hrs, 2: 10+ hrs\n      languages: ['JS', 'CSS', 'HTML'],\n    },\n    {\n      companyId: 0,\n      role: 'Backend Development',\n      title: 'Backend Developer',\n      descrip: `Looking for somebody to build and maintain the backend database for our website. Familiarity with C/C++ and SQL are recommended.`,\n      prereqs: null,\n      weeklyTime: '5-10 Hours', // 0: <5 hrs/week, 1: 5-10 hrs, 2: 10+ hrs\n      languages: ['C', 'C++', 'SQL'],\n    },\n    {\n      companyId: 1,\n      role: 'Web Development',\n      title: 'Full-Stack Web Developer',\n      descrip: `We are looking for somebody who is comfortable with full-stack web development. Our app currently uses React on the frontend & Django on the backend, so familiarity with these frameworks would be preferred. Additional bonus if currently pursuing a bachelor's or advanced degree in CS or a related field.`,\n      prereqs: null,\n      weeklyTime: '10+ Hours', // 0: <5 hrs/week, 1: 5-10 hrs, 2: 10+ hrs\n      languages: null,\n    },\n    {\n      companyId: 1,\n      role: 'Web Development',\n      title: 'Android Developer',\n      descrip: `Seeking an Android developer proficient in Kotlin. Industry and/or relevant project experience preferred.`,\n      prereqs: null,\n      weeklyTime: '5-10 Hours', // 0: <5 hrs/week, 1: 5-10 hrs, 2: 10+ hrs\n      languages: ['Java', 'XML'],\n    },\n    {\n      companyId: 1,\n      role: 'Web Development',\n      title: 'iOS Developer',\n      descrip: `Searching for an iOS developer with significant experience in Swift and/or Objective-C. Please reach out with a portfolio of prior iOS (or mobile) projects.`,\n      prereqs: null,\n      weeklyTime: '5-10 Hours', // 0: <5 hrs/week, 1: 5-10 hrs, 2: 10+ hrs\n      languages: ['Swift', 'Objective-C'],\n    },\n    {\n      companyId: 2,\n      role: 'Web Design',\n      title: 'Web Designer',\n      descrip: `We are looking for somebody to build a website to match students with appropriate scholarship. Tech-stack is currently undecided, but we are thinking React or Angular on the frontend & Node.js on the backend. Added bonus if currently pursuing a bachelor's or advanced degree in CS.`,\n      prereqs: null,\n      weeklyTime: '10+ Hours', // 0: <5 hrs/week, 1: 5-10 hrs, 2: 10+ hrs\n      languages: ['HTML', 'JS', 'CSS'],\n    },\n    {\n      companyId: 2,\n      role: 'Backend Development',\n      title: 'Backend Mobile Developer',\n      descrip: `Searching for a developer proficient in React Native (goal is to deploy to both iOS and Android efficiently). Ideal candidate will be familiar with React/React Native, TypeScript, JavaScript, React Hooks, and Redux.`,\n      prereqs: null,\n      weeklyTime: '10+ Hours', // 0: <5 hrs/week, 1: 5-10 hrs, 2: 10+ hrs\n      languages: ['HTML', 'JS', 'CSS', 'TypeScript'],\n    },\n  ],\n}\n","import React from 'react'\nimport {\n  StyleSheet,\n  Text,\n  TouchableOpacity,\n  View,\n  Dimensions,\n} from 'react-native'\nimport { nonProfsData } from '../utils/nonProfData'\n\nconst Job = ({ job, view, matched }) => {\n  // TODO: maybe scale the font size based on the screen width/height?\n  const scaleFont = () => {\n    const width = Dimensions.get('window').width\n    return width > 500 ? 16 : 12\n  }\n\n  return (\n    <TouchableOpacity\n      style={matched ? styles.jobMatched : styles.jobButton}\n      onPress={() => {\n        view(job)\n      }}\n    >\n      <View style={styles.jobInfo}>\n        <Text style={styles.jobName}>{job.title}</Text>\n        <Text style={styles.jobCompany}>{companyParser(job.companyId)}</Text>\n        <Text style={styles.jobTime}>{job.weeklyTime}</Text>\n      </View>\n    </TouchableOpacity>\n  )\n}\n\nconst timeParser = (timeInt) => {\n  if (timeInt === 0) {\n    return '<5 hrs/week'\n  } else if (timeInt === 1) {\n    return '5-10 hrs/week'\n  } else {\n    return '10+ hrs/week'\n  }\n}\n\nconst companyParser = (companyInt) => {\n  return nonProfsData.nonprofits[companyInt].company\n}\n\nconst industryParser = (companyInt) => {\n  return nonProfsData.nonprofits[companyInt].industry\n}\n\nconst styles = StyleSheet.create({\n  jobButton: {\n    borderRadius: 5,\n    borderStyle: 'solid',\n    borderWidth: 1,\n    borderColor: 'black',\n    // justifyContent: 'center',\n    flexDirection: 'row',\n    alignItems: 'center',\n    margin: 10,\n    padding: 10,\n    backgroundColor: 'white',\n  },\n  jobMatched: {\n    borderRadius: 5,\n    borderStyle: 'solid',\n    borderWidth: 3,\n    borderColor: 'green',\n    shadowColor: 'green',\n    shadowOpacity: 0.4,\n    shadowRadius: 4,\n    shadowOffset: {\n      height: 2,\n      width: 2,\n    },\n    // justifyContent: 'center',\n    flexDirection: 'row',\n    alignItems: 'center',\n    margin: 10,\n    padding: 10,\n    // backgroundColor: '#289C28', // old (too dark) background color\n    // backgroundColor: '#90ee90', // new (maybe too light?) green color\n    backgroundColor: 'white',\n  },\n  jobInfo: {\n    flexDirection: 'column',\n    flexShrink: 1,\n  },\n  jobName: {\n    fontWeight: 'bold',\n    fontSize: 18,\n  },\n  jobCompany: {\n    fontStyle: 'italic',\n    fontSize: 14,\n    marginBottom: 10,\n  },\n  jobTime: {\n    fontWeight: '300',\n    fontSize: 16,\n  },\n})\n\nexport default Job\n","import React from 'react'\nimport { ScrollView } from 'react-native'\nimport Job from './Job'\n\nconst JobList = ({ jobs, view, matched }) => {\n  return (\n    <ScrollView>\n      {jobs.map((job, i) => (\n        <Job key={i} view={view} job={job} matched={matched[i]} />\n      ))}\n    </ScrollView>\n  )\n}\n\nexport default JobList\n","import React, { useState } from 'react'\nimport { SafeAreaView, StatusBar, StyleSheet } from 'react-native'\n//import { SearchBar } from 'react-native-elements'\nimport JobList from '../components/JobList'\nimport { jobArray, nonProfsData } from '../utils/nonProfData'\n//import { getFuse } from '../utils/search'\n\nconst Banner = ({ title }) => (\n  <Text style={styles.bannerStyle}>{title || '[loading...]'}</Text>\n)\n\nconst JobDisplayScreen = ({ route, navigation }) => {\n  const preferences = route.params.preferences\n  // console.log(preferences);\n\n  //const [search, updateSearch] = useState('')\n\n  // Currently hardcoded data\n  const [jobs, setJobs] = useState(jobArray.jobs)\n\n  // As long as one criteria matches, consider the job a match\n  // Also include number of criteria that match in case we might want to rank ...\n  // ... the jobs later on\n  const isMatchBasic = (job) => {\n    let nonprofit = nonProfsData.nonprofits[job.companyId];\n\n    let matches = [preferences['industry'].includes(nonprofit.industry),\n                  preferences['length'].includes(nonprofit.length),\n                  preferences['role'].includes(job.role),\n                  preferences['weeklyTime'].includes(job.weeklyTime)\n    ];\n    \n    let numMatches = matches.filter(match => match).length;\n    return numMatches > 0;\n  };\n\n  // Hacky match. TODO: Fix later! This is a classic AI pattern matching problem...\n  const isMatch = (job) => {\n    let matchBool = true\n    for (let key in preferences) {\n      // job key\n      if (job[key] !== undefined) {\n        if (\n          preferences[key].length !== 0 &&\n          preferences[key].includes(job[key])\n        ) {\n          matchBool = matchBool && true\n        } else {\n          matchBool = false\n        }\n        // company key\n      } else {\n        const nonprof = nonProfsData.nonprofits[job.companyId] // TODO: key instead of index\n        if (\n          preferences[key].length !== 0 &&\n          preferences[key].includes(nonprof[key])\n        ) {\n          matchBool = matchBool && true\n        } else {\n          matchBool = false\n        }\n      }\n    }\n    return matchBool\n  }\n\n  const getOrderedJobs = (jobs) => {\n    let matchedJobs = []\n    let otherJobs = []\n\n    jobs.map((job) => {\n      if (isMatchBasic(job)) { // Use the basic matching algorithm for now\n        matchedJobs.push(job)\n      } else {\n        otherJobs.push(job)\n      }\n    })\n\n    const orderedJobs = matchedJobs.concat(otherJobs)\n\n    const matchMask = new Array(jobs.length)\n    let i = 0\n    for (i; i < matchedJobs.length; i++) {\n      matchMask[i] = true\n    }\n    for (i; i < jobs.length; i++) {\n      matchMask[i] = false\n    }\n    return [orderedJobs, matchMask]\n  }\n\n  const [orderedJobs, matchMask] = getOrderedJobs(jobs)\n\n  // Filtered list of jobs\n  const [jobsShown, setJobsShown] = useState(orderedJobs)\n  const [matched, setMatched] = useState(matchMask)\n\n  // Hacky search with fuse.js\n  //const fuse = getFuse(jobs)\n  //const handleSearch = (search) => {\n  //updateSearch(search)\n  //search === ''\n  //? setJobsShown(jobs)\n  //: setJobsShown(fuse.search(search).map((v) => v.item))\n  //}\n\n  // View job detail\n  const view = (job) => {\n    navigation.navigate('JobDetailScreen', { job })\n  }\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <JobList jobs={jobsShown} view={view} matched={matched} />\n      <StatusBar style=\"auto\" hidden=\"false\" barStyle=\"dark-content\" />\n    </SafeAreaView>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    //alignItems: 'center',\n    justifyContent: 'center',\n    paddingTop: 20,\n    backgroundColor: '#D7EAF9',\n  },\n  bannerStyle: {\n    alignItems: 'center',\n    color: 'white',\n    backgroundColor: '#cc0000ff',\n    fontSize: 28,\n  },\n})\n\nexport default JobDisplayScreen\n","import React from 'react'\nimport {\n  SafeAreaView,\n  StyleSheet,\n  Text,\n  View,\n  TouchableOpacity,\n  Image,\n} from 'react-native'\nimport { ScrollView } from 'react-native-gesture-handler'\nimport { nonProfsData } from '../utils/nonProfData'\n\nconst Field = ({ label, value }) => {\n  return (\n    <View style={styles.fieldContainer}>\n      <Text style={styles.label}>{label}</Text>\n      <Text style={styles.field}>{value}</Text>\n    </View>\n  )\n}\n\nconst jobProps = {\n  role: 'Role',\n  descrip: 'Description',\n  weeklyTime: 'Weekly Time',\n  languages: 'Languages',\n}\n\nconst companyProps = {\n  logo: \"Logo\",\n  company: 'Name',\n  title: 'Project',\n  descrip: 'Description',\n  industry: 'Industry',\n  length: 'Project Duration',\n  url: 'URL',\n  \n}\n\nconst JobDetailScreen = ({ route, navigation }) => {\n  const view = (nonprof) => {\n    navigation.navigate('NonprofContactInfoScreen', { nonprof })\n  }\n\n  const job = route.params.job\n  const nonprof = nonProfsData.nonprofits.filter(\n    (obj) => obj.id === job.companyId\n  )[0]\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <Text label=\"Name\" style={styles.name}>\n        {job.title}\n      </Text>\n      <ScrollView>\n        {Object.keys(jobProps).map(\n          (key) =>\n            job[key] && (\n              <Field key={key} label={jobProps[key]} value={job[key]} />\n            )\n        )}\n        <Text label=\"Name\" style={styles.name}>\n          About the non-profit\n        </Text>\n        {Object.keys(companyProps).map(\n          (key) => \n          (<React.Fragment> \n            {key===\"logo\" ? \n            (<Image style={styles.developerImage} source={{ uri: nonprof[\"logo\"]}} />):\n            <Field key={key} label={companyProps[key]} value={nonprof[key]} />}\n            </React.Fragment>)\n            \n        )}\n      </ScrollView>\n\n      <TouchableOpacity\n        style={styles.connectButton}\n        onPress={() => view(nonprof)}\n      >\n        <Text style={styles.connectText}>Connect</Text>\n      </TouchableOpacity>\n    </SafeAreaView>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    marginTop: 10,\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    width: '90%',\n  },\n  field: {\n    padding: 5,\n    backgroundColor: 'white',\n    borderRadius: 5,\n    fontSize: 18,\n  },\n  fieldContainer: {\n    marginTop: 10,\n    marginBottom: 20,\n  },\n  label: {\n    fontWeight: 'bold',\n  },\n  name: {\n    fontSize: 24,\n    marginBottom: 10,\n    marginLeft: 'auto',\n    marginRight: 'auto',\n  },\n  developerImage: {\n    width: 200,\n    height: 300,\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    marginBottom: 10,\n  },\n  connectButton: {\n    margin: 30,\n    padding: 10,\n    textAlign: 'center',\n    backgroundColor: 'lightblue',\n  },\n  connectText: {\n    fontSize: 22,\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    // fontWeight: 500,\n  },\n  developerImage: {\n    width: 200,\n    height: 200,\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    marginBottom: 10,\n  },\n})\n\nexport default JobDetailScreen\n","import React, { useState } from 'react'\nimport { SafeAreaView, StyleSheet, Text, TouchableOpacity } from 'react-native'\nimport { ScrollView } from 'react-native-gesture-handler'\nimport Form from '../components/Form'\n\nconst NonprofContactInfoScreen = ({ route, navigation }) => {\n  const [messageSent, setMessageSent] = useState(false)\n\n  const view = () => {\n    setMessageSent(true)\n  }\n\n  const nonprof = route.params.nonprof\n  const nonprofName = nonprof.company\n\n  const placeholder = 'Enter message to ' + nonprofName\n  return (\n    <SafeAreaView style={styles.container}>\n      {!messageSent && (\n        <Text label=\"Name\" style={styles.name}>\n          Contact {nonprofName}\n        </Text>\n      )}\n\n      {messageSent ? (\n        <Text label=\"Name\" style={styles.name}>\n          Message succesfully sent to {nonprofName}!\n        </Text>\n      ) : (\n        <ScrollView>\n          <Form initialValues={{ message: '' }}>\n            <Form.Field\n              name=\"message\"\n              leftIcon=\"inbox\"\n              placeholder={placeholder}\n              autoCapitalize=\"none\"\n              autoFocus={true}\n              multiline={true}\n              numberOfLines={20}\n            />\n          </Form>\n          <TouchableOpacity style={styles.connectButton} onPress={() => view()}>\n            <Text style={styles.connectText}>Send Message</Text>\n          </TouchableOpacity>\n        </ScrollView>\n      )}\n    </SafeAreaView>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    marginTop: 10,\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    width: '90%',\n  },\n  field: {\n    padding: 5,\n    backgroundColor: 'white',\n    borderRadius: 5,\n    fontSize: 18,\n  },\n  fieldContainer: {\n    marginTop: 10,\n    marginBottom: 20,\n  },\n  label: {\n    fontWeight: 'bold',\n  },\n  name: {\n    fontSize: 24,\n    marginBottom: 10,\n    marginLeft: 'auto',\n    marginRight: 'auto',\n  },\n  developerImage: {\n    width: 200,\n    height: 300,\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    marginBottom: 10,\n  },\n  connectButton: {\n    margin: 30,\n    padding: 10,\n    textAlign: 'center',\n    backgroundColor: 'lightblue',\n  },\n  connectText: {\n    fontSize: 22,\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    // fontWeight: 500,\n  },\n})\n\nexport default NonprofContactInfoScreen\n","import 'react-native-gesture-handler'\nimport React from 'react'\nimport { createStackNavigator } from '@react-navigation/stack'\nimport { NavigationContainer } from '@react-navigation/native'\nimport SearchScreen from './screens/SearchScreen'\nimport AboutScreen from './screens/AboutScreen'\nimport DeveloperProfileScreen from './screens/DeveloperProfileScreen'\nimport ChooseAppViewScreen from './screens/ChooseAppViewScreen'\nimport DeveloperPreferenceSelectionScreen from './screens/DeveloperPreferenceSelectionScreen'\nimport DeveloperContactInfoScreen from './screens/DeveloperContactInfoScreen'\nimport JobListScreen from './screens/JobListScreen'\nimport JobDetailScreen from './screens/JobDetailScreen'\nimport NonprofContactInfoScreen from './screens/NonprofContactInfoScreen'\n\nconst Stack = createStackNavigator()\n\nexport default function App() {\n  return (\n    <NavigationContainer>\n      <Stack.Navigator>\n        <Stack.Screen\n          name=\"ChooseAppViewScreen\"\n          component={ChooseAppViewScreen}\n          options={{ title: 'NonProfDev' }}\n        />\n        <Stack.Screen\n          name=\"DeveloperPreferenceSelectionScreen\"\n          component={DeveloperPreferenceSelectionScreen}\n          options={{ title: 'Preference Selection' }}\n        />\n        <Stack.Screen\n          name=\"JobListScreen\"\n          component={JobListScreen}\n          options={{ title: 'Matched Jobs' }}\n        />\n        <Stack.Screen\n          name=\"JobDetailScreen\"\n          component={JobDetailScreen}\n          options={{ title: 'Job Details' }}\n        />\n        <Stack.Screen\n          name=\"NonprofContactInfoScreen\"\n          component={NonprofContactInfoScreen}\n          options={{ title: 'Job Details' }}\n        />\n        <Stack.Screen\n          name=\"SearchScreen\"\n          component={SearchScreen}\n          options={{ title: 'NonProfDev' }}\n        />\n        <Stack.Screen\n          name=\"DeveloperProfileScreen\"\n          component={DeveloperProfileScreen}\n          options={{ title: 'Developer Profile' }}\n        />\n        <Stack.Screen\n          name=\"AboutScreen\"\n          component={AboutScreen}\n          options={{ title: 'About' }}\n        />\n        <Stack.Screen\n          name=\"DeveloperContactInfoScreen\"\n          component={DeveloperContactInfoScreen}\n          options={{ title: 'Contact Developer' }}\n        />\n      </Stack.Navigator>\n    </NavigationContainer>\n  )\n}\n"],"sourceRoot":""}