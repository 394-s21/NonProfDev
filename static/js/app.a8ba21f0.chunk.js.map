{"version":3,"sources":["components/Developer.js","components/DeveloperList.js","utils/data.js","utils/search.js","screens/SearchScreen.js","screens/AboutScreen.js","screens/DeveloperProfileScreen.js","screens/ChooseAppViewScreen.js","components/PreferenceButton.js","components/PreferenceGroup.js","screens/DeveloperPreferenceSelectionScreen.js","components/Forms/colors.js","components/Forms/FormErrorMessage.js","components/Forms/FormTextInput.js","components/Forms/FormButton.js","components/Forms/FormSwitch.js","components/Form.js","components/Forms/Form.js","components/Forms/FormField.js","screens/DeveloperContactInfoScreen.js","utils/nonProfData.js","components/Job.js","components/JobList.js","screens/JobListScreen.js","screens/JobDetailScreen.js","screens/NonprofContactInfoScreen.js","App.js"],"names":["styles","StyleSheet","create","developerButton","borderRadius","borderStyle","borderWidth","borderColor","flexDirection","alignItems","margin","padding","backgroundColor","developerImage","width","height","marginRight","developerInfo","flexShrink","developerName","fontWeight","fontSize","developerLocation","developerRole","fontStyle","developerSkills","marginTop","Developer","developer","view","TouchableOpacity","style","onPress","Image","source","uri","pic","View","name","location","role","skills","join","DeveloperList","developers","ScrollView","map","key","id","data","Bio","options","keys","container","flex","justifyContent","paddingTop","bannerStyle","color","SearchScreen","obj","navigation","useState","search","updateSearch","developersShown","setDevelopersShown","fuse","Fuse","SafeAreaView","placeholder","onChangeText","v","item","value","lightTheme","navigate","StatusBar","hidden","barStyle","userContainer","h1_text","marginBottom","h3_text","textAlign","h4_text","AboutScreen","h1","h3","h4","Field","label","fieldContainer","field","marginLeft","connectButton","connectText","DeveloperProfileScreen","route","params","developerBio","roleButton","buttonText","ChooseAppViewScreen","preferenceButtonBase","minWidth","maxWidth","preferenceButton","preferenceTextSelected","preferenceText","preferenceButtonSelected","PreferenceButton","select","isSelected","title","buttonGroup","PreferenceGroup","toggleSelect","selection","i","preferenceData","submitButtonText","DeveloperPreferenceSelectionScreen","a","Array","length","initSelections","selections","setSelections","tmp","handleSelect","preferences","prefObj","mask","filter","_","getPreferences","console","log","primary","secondary","black","white","ghostWhite","lightGrey","mediumGrey","red","FormErrorMessage","error","visible","errorText","Colors","FormTextInput","leftIcon","rightIcon","handlePasswordVisibility","otherProps","MaterialCommunityIcons","size","icon","TextInput","input","placeholderTextColor","rightIconStyles","marginVertical","alignSelf","button","textTransform","Form","props","children","initialValues","onSubmit","validationSchema","Fragment","Base","useFormikContext","setFieldTouched","setFieldValue","values","errors","touched","text","onBlur","Button","handleSubmit","ErrorMessage","Switch","onChange","x","onValueChange","DeveloperContactInfoScreen","messageSent","setMessageSent","message","autoCapitalize","autoFocus","multiline","numberOfLines","nonProfsData","nonprofits","company","descrip","industry","jobArray","companyId","prereqs","weeklyTime","languages","companyParser","companyInt","jobButton","jobMatched","shadowColor","shadowOpacity","shadowRadius","shadowOffset","jobInfo","jobName","jobCompany","jobTime","Job","job","matched","JobList","jobs","JobDisplayScreen","matchedJobs","otherJobs","nonprofit","includes","match","isMatchBasic","push","orderedJobs","concat","matchMask","getOrderedJobs","jobsShown","jobProps","companyProps","JobDetailScreen","nonprof","Object","NonprofContactInfoScreen","nonprofName","Stack","createStackNavigator","App","NavigationContainer","Navigator","Screen","component","JobListScreen"],"mappings":"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","file":"static/js/app.a8ba21f0.chunk.js","sourcesContent":["import React from 'react'\nimport {\n  StyleSheet,\n  Image,\n  Text,\n  TouchableOpacity,\n  View,\n  Dimensions,\n} from 'react-native'\nimport { BorderlessButton } from 'react-native-gesture-handler'\n\n// TODO: avatar/profile picture is currently hardcoded\nconst Developer = ({ developer, view }) => {\n  // TODO: maybe scale the font size based on the screen width/height?\n  const scaleFont = () => {\n    const width = Dimensions.get('window').width\n    return width > 500 ? 16 : 12\n  }\n\n  return (\n    <TouchableOpacity\n      style={styles.developerButton}\n      onPress={() => {\n        view(developer)\n      }}\n    >\n      <Image style={styles.developerImage} source={{ uri: developer.pic }} />\n      <View style={styles.developerInfo}>\n        <Text style={styles.developerName}>{developer.name}</Text>\n        <Text style={styles.developerLocation}>{developer.location}</Text>\n        <Text style={styles.developerRole}>{developer.role}</Text>\n        <Text style={styles.developerSkills}>\n          Skills: {developer.skills.join(', ')}\n        </Text>\n      </View>\n    </TouchableOpacity>\n  )\n}\n\nconst styles = StyleSheet.create({\n  developerButton: {\n    borderRadius: 5,\n    borderStyle: 'solid',\n    borderWidth: 1,\n    borderColor: '#DFDFDF',\n    // justifyContent: 'center',\n    flexDirection: 'row',\n    alignItems: 'center',\n    margin: 10,\n    padding: 10,\n    backgroundColor: 'white',\n  },\n  developerImage: {\n    width: 75,\n    height: 100,\n    marginRight: 10,\n  },\n  developerInfo: {\n    flexDirection: 'column',\n    flexShrink: 1,\n  },\n  developerName: {\n    fontWeight: 'bold',\n    fontSize: 18,\n  },\n  developerLocation: {\n    fontWeight: '300',\n    fontSize: 16,\n  },\n  developerRole: {\n    fontStyle: 'italic',\n    fontSize: 14,\n  },\n  developerSkills: {\n    marginTop: 10,\n    fontSize: 16,\n  },\n})\n\nexport default Developer\n","import React from 'react'\nimport { ScrollView } from 'react-native'\nimport Developer from './Developer'\n\nconst DeveloperList = ({ developers, view }) => {\n  return (\n    <ScrollView>\n      {developers.map((developer) => (\n        <Developer key={developer.id} view={view} developer={developer} />\n      ))}\n    </ScrollView>\n  )\n}\n\nexport default DeveloperList\n","export const data = {\n  developers: [\n    {\n      id: 0,\n      name: 'Mark',\n      role: 'Computer Science Student at Northwestern University',\n      location: 'Evanston',\n      skills: ['Java', 'Python', 'Databases'],\n      pic: 'https://pbs.twimg.com/profile_images/1422637130/mccigartrophy.jpg',\n      Bio: '1st year CS major @ NU. Open to anything at the moment!',\n    },\n    {\n      id: 1,\n      name: 'Allison',\n      role: 'Computer Science Student at Stanford University',\n      location: 'San Francisco',\n      skills: ['Golang', 'C++', 'Databases'],\n      pic:\n        'https://static.inspiremore.com/wp-content/uploads/2015/04/21050518/beyonce-the-gentlewoman.jpg',\n      Bio:\n        '1st year CS student @ Stanford. Primarily looking for backend roles, but open to anything!',\n    },\n    {\n      id: 2,\n      name: 'Josh',\n      role: 'Computer Science Student at University of Chicago',\n      location: 'Chicago',\n      skills: ['JavaScript', 'Python', 'ML', 'Databases'],\n      pic:\n        'https://assets.vogue.com/photos/59132f18dc6868483f55b55a/master/w_2560%2Cc_limit/00-lede-the-rock.jpg',\n      Bio:\n        'Junior CS major @ UChicago, looking to hone my ML skills with a relevant project.',\n    },\n    {\n      id: 3,\n      name: 'Michelle',\n      role: 'Computer Science Student at Northwestern University',\n      location: 'Evanston',\n      skills: ['Java', 'Python', 'React', 'Databases'],\n      pic:\n        'https://thumbor.forbes.com/thumbor/fit-in/1200x0/filters%3Aformat%28jpg%29/https%3A%2F%2Fblogs-images.forbes.com%2Fanneglusker%2Ffiles%2F2018%2F12%2FMichelle-Obama-book-cover-shot-e1544143689487-1200x944.jpg',\n      Bio:\n        '2nd year CS major @ NU - particularly interested in the intersection between tech & finance.',\n    },\n    {\n      id: 4,\n      name: 'Evelyn',\n      role: 'Computer Science Student at Northwestern University',\n      location: 'Evanston',\n      skills: ['React', 'JavaScript', 'Databases', 'Firebase'],\n      pic:\n        'https://thefader-res.cloudinary.com/private_images/c_limit,w_1024/c_crop,h_600,w_1019,x_5,y_91,f_auto,q_auto:eco/Taylor-Swift-_-Valheria-Rocha-1050x700_uulkcd/Taylor-Swift-_-Valheria-Rocha-1050x700_uulkcd.jpg',\n      Bio:\n        'Senior CS Major @ NU. Well versed in React/Firebase - looking for a demanding role to apply these skills',\n    },\n    {\n      id: 5,\n      name: 'Linus',\n      role: 'Computer Science Student at Northwestern University',\n      location: 'Evanston',\n      skills: ['Java', 'Python', 'Databases'],\n      pic: 'https://cdn.nba.com/manage/2020/10/lebron-james-lakers-687x588.jpg',\n      Bio:\n        '2nd year CS student @ NU. Primarily interested in front-end development.',\n    },\n    {\n      id: 6,\n      name: 'Tiger',\n      role: 'Computer Science Student at Northwestern University',\n      location: 'Evanston',\n      skills: ['Java', 'JavaScript', 'Python', 'ML', 'Databases'],\n      pic:\n        'https://upload.wikimedia.org/wikipedia/commons/f/f6/Andrew_Yang_by_Gage_Skidmore.jpg',\n      Bio:\n        'Senior CS major @ NU. Open to any type of role: frontend, backend, full-stack, ML/AI, etc.',\n    },\n  ],\n}\n","import Fuse from 'fuse.js'\n\nconst options = {\n  // isCaseSensitive: false,\n  // includeScore: false,\n  // shouldSort: true,\n  // includeMatches: false,\n  // findAllMatches: false,\n  // minMatchCharLength: 1,\n  // location: 0,\n  // threshold: 0.6,\n  // distance: 100,\n  // useExtendedSearch: false,\n  // ignoreLocation: false,\n  // ignoreFieldNorm: false,\n  keys: ['location', 'skills'],\n}\n\nexport const getFuse = (obj) => new Fuse(obj, options)\n","import React, { useState } from 'react'\nimport { SafeAreaView, StatusBar, StyleSheet, Text } from 'react-native'\nimport { SearchBar } from 'react-native-elements'\nimport DeveloperList from '../components/DeveloperList'\nimport { data } from '../utils/data'\nimport { getFuse } from '../utils/search'\n\nconst Banner = ({ title }) => (\n  <Text style={styles.bannerStyle}>{title || '[loading...]'}</Text>\n)\n\nconst SearchScreen = ({ navigation }) => {\n  const [search, updateSearch] = useState('')\n\n  // Currently hardcoded data\n  const [developers, setDevelopers] = useState(data.developers)\n\n  // Filtered list of developers\n  const [developersShown, setDevelopersShown] = useState(developers)\n\n  // Hacky search with fuse.js\n  const fuse = getFuse(developers)\n  const handleSearch = (search) => {\n    updateSearch(search)\n    search === ''\n      ? setDevelopersShown(developers)\n      : setDevelopersShown(fuse.search(search).map((v) => v.item))\n  }\n\n  // View developer detail\n  const view = (developer) => {\n    navigation.navigate('DeveloperProfileScreen', { developer })\n  }\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <SearchBar\n        placeholder=\"Search for skills/location...\"\n        onChangeText={handleSearch}\n        value={search}\n        lightTheme={true}\n      />\n      <DeveloperList developers={developersShown} view={view} />\n      <StatusBar style=\"auto\" hidden=\"false\" barStyle=\"dark-content\" />\n    </SafeAreaView>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    //alignItems: 'center',\n    justifyContent: 'center',\n    paddingTop: 20,\n    backgroundColor: '#D7EAF9',\n  },\n  bannerStyle: {\n    alignItems: 'center',\n    color: 'white',\n    backgroundColor: '#cc0000ff',\n    fontSize: 28,\n  },\n})\n\nexport default SearchScreen\n","import React from 'react'\nimport { StatusBar, StyleSheet, Text, View } from 'react-native'\n\n// Original home screen\n// Currently not used\nconst AboutScreen = ({ navigation }) => {\n  return (\n    <View style={styles.container}>\n      <Text h1 style={styles.h1_text}>\n        NonProfDev\n      </Text>\n      <Text h3 style={styles.h3_text}>\n        A simple, intuitive platform to connect non-profit organizations with\n        passionate web developers\n      </Text>\n      <Text h3 style={styles.h3_text}>\n        Created by the CS 394 Red Team\n      </Text>\n      <Text h4 style={styles.h4_text}>\n        Benjamin Nober, Chris Song, Jacob Wat, Linus Okoth, Mason Brachmann,\n        Tiger Nie, Zaddeen Benaissa\n      </Text>\n      <StatusBar style=\"auto\" />\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n\n  userContainer: {\n    flex: 1,\n    alignItems: 'center',\n  },\n\n  h1_text: {\n    fontSize: 48,\n    marginBottom: 25,\n  },\n  h3_text: {\n    fontSize: 24,\n    textAlign: 'center',\n    marginBottom: 20,\n  },\n  h4_text: {\n    fontSize: 16,\n    textAlign: 'center',\n    marginBottom: 15,\n  },\n})\n\nexport default AboutScreen\n","import React from 'react'\nimport {\n  SafeAreaView,\n  StyleSheet,\n  Text,\n  View,\n  TouchableOpacity,\n  Image,\n} from 'react-native'\nimport { ScrollView } from 'react-native-gesture-handler'\n\nconst Field = ({ label, value }) => {\n  return (\n    <View style={styles.fieldContainer}>\n      <Text style={styles.label}>{label}</Text>\n      <Text style={styles.field}>{value}</Text>\n    </View>\n  )\n}\n\nconst DeveloperProfileScreen = ({ route, navigation }) => {\n  // View developer detail\n  const view = (developer) => {\n    navigation.navigate('DeveloperContactInfoScreen', { developer })\n  }\n\n  const developer = route.params.developer\n  return (\n    <SafeAreaView style={styles.container}>\n      <Image style={styles.developerImage} source={{ uri: developer.pic }} />\n      <Text label=\"Name\" style={styles.developerName}>\n        {' '}\n        {developer.name}{' '}\n      </Text>\n      <ScrollView>\n        <Field\n          label=\"Location\"\n          value={developer.location}\n          style={styles.developerLocation}\n        />\n        <Field label=\"Bio\" value={developer.Bio} style={styles.developerBio} />\n        <Field\n          label=\"Role\"\n          value={developer.role}\n          style={styles.developerRole}\n        />\n        <Field\n          label=\"Skills\"\n          value={developer.skills.join(', ')}\n          style={styles.developerSkills}\n        />\n      </ScrollView>\n\n      <TouchableOpacity\n        style={styles.connectButton}\n        onPress={() => view(developer)}\n      >\n        <Text style={styles.connectText}>Connect</Text>\n      </TouchableOpacity>\n    </SafeAreaView>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    marginTop: 10,\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    width: '90%',\n  },\n  field: {\n    padding: 5,\n    backgroundColor: 'white',\n    borderRadius: 5,\n    fontSize: 18,\n  },\n  fieldContainer: {\n    marginTop: 10,\n    marginBottom: 20,\n  },\n  label: {\n    fontWeight: 'bold',\n  },\n  developerName: {\n    fontSize: 24,\n    marginBottom: 10,\n    marginLeft: 'auto',\n    marginRight: 'auto',\n  },\n  developerImage: {\n    width: 200,\n    height: 300,\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    marginBottom: 10,\n  },\n  connectButton: {\n    margin: 30,\n    padding: 10,\n    textAlign: 'center',\n    backgroundColor: 'lightblue',\n  },\n  connectText: {\n    fontSize: 22,\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    // fontWeight: 500,\n  },\n})\n\nexport default DeveloperProfileScreen\n","import React from 'react'\nimport {\n  StatusBar,\n  StyleSheet,\n  Text,\n  View,\n  TouchableOpacity,\n} from 'react-native'\n\n// Original home screen\n// Currently not used\nconst ChooseAppViewScreen = ({ navigation }) => {\n  return (\n    <View style={styles.container}>\n      <Text h1 style={styles.h1_text}>\n        Welcome to NonProfDev!\n      </Text>\n      <Text h3 style={styles.h3_text}>\n        A simple, intuitive platform to connect non-profit organizations with\n        passionate developers.\n      </Text>\n      <Text h3 style={styles.h3_text}>\n        Are you a:\n      </Text>\n      <View>\n        <TouchableOpacity\n          style={styles.roleButton}\n          onPress={() =>\n            navigation.navigate('DeveloperPreferenceSelectionScreen')\n          }\n        >\n          <Text style={styles.buttonText}>Developer</Text>\n        </TouchableOpacity>\n      </View>\n      <View>\n        <TouchableOpacity\n          style={styles.roleButton}\n          onPress={() => navigation.navigate('SearchScreen')}\n        >\n          <Text style={styles.buttonText}>Non-Profit Organization</Text>\n        </TouchableOpacity>\n      </View>\n\n      <StatusBar style=\"auto\" />\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n\n  userContainer: {\n    flex: 1,\n    alignItems: 'center',\n  },\n\n  h1_text: {\n    fontSize: 48,\n    marginBottom: 25,\n  },\n  h3_text: {\n    fontSize: 24,\n    textAlign: 'center',\n    marginBottom: 20,\n  },\n  h4_text: {\n    fontSize: 16,\n    textAlign: 'center',\n    marginBottom: 15,\n  },\n  roleButton: {\n    backgroundColor: '#2196F3',\n    fontSize: 16,\n    margin: 15,\n    width: 250,\n    padding: 15,\n    textAlign: 'center',\n  },\n  buttonText: {\n    fontSize: 20,\n    color: 'ghostwhite',\n    textAlign: 'center',\n  },\n})\n\nexport default ChooseAppViewScreen\n","import React from 'react'\nimport { StyleSheet, Text, TouchableOpacity } from 'react-native'\n\nconst PreferenceButton = ({ select, buttonText, isSelected }) => (\n  <TouchableOpacity\n    onPress={select}\n    style={styles[isSelected ? 'preferenceButtonSelected' : 'preferenceButton']}\n  >\n    <Text\n      style={styles[isSelected ? 'preferenceTextSelected' : 'preferenceText']}\n    >\n      {buttonText}\n    </Text>\n  </TouchableOpacity>\n)\n\nconst preferenceButtonBase = {\n  borderRadius: 5,\n  margin: 10,\n  height: 50,\n  minWidth: 300,\n  maxWidth: 300,\n}\n\nconst styles = StyleSheet.create({\n  preferenceButton: {\n    ...preferenceButtonBase,\n    backgroundColor: '#d3d3d3',\n  },\n  preferenceTextSelected: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    color: 'white',\n    fontSize: 20,\n    textAlign: 'center',\n    paddingTop: 12,\n  },\n  preferenceText: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    color: 'black',\n    fontSize: 20,\n    textAlign: 'center',\n    paddingTop: 12,\n  },\n  preferenceButtonSelected: {\n    ...preferenceButtonBase,\n    backgroundColor: '#004a99',\n  },\n})\n\nexport default PreferenceButton\n","import React, { useState } from 'react'\nimport { StyleSheet, Text, View } from 'react-native'\nimport PreferenceButton from './PreferenceButton'\n\nconst PreferenceGroup = ({ title, options, toggleSelect, selection }) => (\n  <View>\n    <Text style={styles.title}>{title}</Text>\n    <View style={styles.buttonGroup}>\n      {options.map((name, i) => (\n        <PreferenceButton\n          key={i}\n          select={() => toggleSelect(i)}\n          buttonText={name}\n          isSelected={selection[i]}\n        />\n      ))}\n    </View>\n  </View>\n)\n\nconst styles = StyleSheet.create({\n  title: {\n    fontSize: 32,\n    textAlign: 'center',\n    marginTop: 30,\n  },\n  buttonGroup: {\n    flex: 1,\n    alignItems: 'center',\n  },\n})\n\nexport default PreferenceGroup\n","import React, { useState } from 'react'\nimport {\n  StatusBar,\n  StyleSheet,\n  SafeAreaView,\n  Text,\n  View,\n  Button,\n  TouchableOpacity,\n} from 'react-native'\nimport PreferenceGroup from '../components/PreferenceGroup'\nimport { ScrollView, /*TouchableOpacity*/ } from 'react-native-gesture-handler'\n\n// Preference data hardcoded for now, substitute for db call later\nconst preferenceData = [\n  {\n    id: 'role',\n    title: 'Primary Skillset/Desired Role',\n    options: ['Web Design', 'Web Development', 'Backend Development'],\n  },\n  {\n    id: 'industry',\n    title: 'Primary Field of Interest',\n    options: ['Community Leadership', 'Education', 'Religion'],\n  },\n  {\n    id: 'length',\n    title: 'Project Length',\n    options: ['One Month or Shorter', '1-3 Months (One Quarter)', '3+ Months'],\n  },\n  {\n    id: 'weeklyTime',\n    title: 'Weekly Commitment',\n    options: ['5 Hours or Fewer', '5-10 Hours', '10+ Hours'],\n  },\n]\n\n/**\n * Creates a selection object with\n *   key = preference title\n *   value = boolean array of length options\n */\nconst initSelections = (preferenceData) => {\n  const obj = {}\n  preferenceData.map((v) => {\n    const a = new Array(v.options.length)\n    for (let i = 0; i < v.options.length; ++i) a[i] = false\n    obj[v.id] = a\n  })\n  return obj\n}\n\n/**\n * Convert selections object to map of preferences\n */\nconst getPreferences = (preferenceData, selections) => {\n  const obj = {}\n  preferenceData.map((prefObj) => {\n    const mask = selections[prefObj.id]\n    obj[prefObj.id] = prefObj.options.filter((_, i) => mask[i])\n  })\n  return obj\n}\n\nconst DeveloperPreferenceSelectionScreen = ({ navigation }) => {\n  const [selections, setSelections] = useState(initSelections(preferenceData))\n\n  const handleSelect = (id, i) => {\n    //const newSelections = { ...selections }\n    const tmp = selections[id]\n    tmp[i] = !tmp[i]\n    setSelections((selections) => ({ ...selections, id: tmp }))\n  }\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <ScrollView>\n        {preferenceData.map((v, i) => (\n          <PreferenceGroup\n            key={i}\n            title={v.title}\n            options={v.options}\n            toggleSelect={(i) => handleSelect(v.id, i)}\n            selection={selections[v.id]}\n          />\n        ))}\n\n        <View style={styles.userContainer}>\n          {/* <Button\n            style={styles.submitButtonText}\n            title=\"Submit Preferences\"\n            onPress={() => {\n              const preferences = getPreferences(preferenceData, selections)\n              navigation.navigate('JobListScreen', { preferences })\n            }}\n          /> */}\n          <TouchableOpacity\n            style={styles.roleButton} \n            onPress={() => {\n              const preferences = getPreferences(preferenceData, selections)\n              console.log(\"PRESSED\")\n              navigation.navigate('JobListScreen', { preferences })\n            }}>\n              <Text style={styles.submitButtonText}>Submit Preferences</Text>\n          </TouchableOpacity>\n        </View>\n\n        <StatusBar style=\"auto\" />\n      </ScrollView>\n    </SafeAreaView>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n    // marginRight: 20,\n  },\n  userContainer: {\n    flex: 1,\n    alignItems: 'center',\n  },\n  h1_text: {\n    fontSize: 24,\n    marginTop: 30,\n    textAlign: 'center',\n  },\n  roleButton: {\n    borderRadius: 3,\n    backgroundColor: 'seagreen',\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginTop: 45,\n    marginBottom: 15,\n    padding: 20,\n    width: 300,\n  },\n  submitButtonText: {\n    color: 'ghostwhite',\n    fontSize: 20,\n    textAlign: 'center',\n  },\n})\n\nexport default DeveloperPreferenceSelectionScreen\n","export default {\n  primary: '#f57c00',\n  secondary: '#039be5',\n  black: '#222222',\n  white: '#ffffff',\n  ghostWhite: '#f8f8ff',\n  lightGrey: '#f9f9f9',\n  mediumGrey: '#6e6869',\n  red: '#fc5c65',\n}\n","import React from 'react'\nimport { StyleSheet, Text } from 'react-native'\n\nimport Colors from './colors'\n\nexport default function FormErrorMessage({ error, visible }) {\n  if (!error || !visible) {\n    return null\n  }\n\n  return <Text style={styles.errorText}>{error}</Text>\n}\n\nconst styles = StyleSheet.create({\n  errorText: {\n    marginLeft: 15,\n    color: Colors.red,\n    fontSize: 16,\n    marginBottom: 5,\n    fontWeight: '600',\n  },\n})\n","import React from 'react'\nimport { View, StyleSheet, TextInput, TouchableOpacity } from 'react-native'\nimport { MaterialCommunityIcons } from '@expo/vector-icons'\n\nimport Colors from './colors'\n\nexport default function FormTextInput({\n  leftIcon,\n  width = '100%',\n  rightIcon,\n  handlePasswordVisibility,\n  ...otherProps\n}) {\n  return (\n    <View style={[styles.container, { width }]}>\n      {leftIcon && (\n        <MaterialCommunityIcons\n          name={leftIcon}\n          size={20}\n          color={Colors.mediumGrey}\n          style={styles.icon}\n        />\n      )}\n      <TextInput\n        style={styles.input}\n        placeholderTextColor={Colors.mediumGrey}\n        {...otherProps}\n      />\n      {rightIcon && (\n        <TouchableOpacity onPress={handlePasswordVisibility}>\n          <MaterialCommunityIcons\n            name={rightIcon}\n            size={20}\n            color={Colors.mediumGrey}\n            style={styles.rightIconStyles}\n          />\n        </TouchableOpacity>\n      )}\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: Colors.lightGrey,\n    borderRadius: 25,\n    flexDirection: 'row',\n    justifyContent: 'center',\n    padding: 15,\n    marginVertical: 10,\n  },\n  icon: {\n    marginRight: 10,\n  },\n  input: {\n    flex: 1,\n    width: '100%',\n    fontSize: 18,\n    color: Colors.black,\n  },\n  rightIconStyles: {\n    alignSelf: 'center',\n    marginLeft: 10,\n  },\n})\n","import React from 'react'\nimport { Text, TouchableOpacity, StyleSheet } from 'react-native'\nimport { useFormikContext } from 'formik'\n\nimport Colors from './colors'\n\nexport default function FormButton({ title, color = 'primary' }) {\n  const { handleSubmit, values } = useFormikContext()\n  const text = typeof title === 'function' ? title(values) : title\n\n  return (\n    <TouchableOpacity\n      style={[styles.button, { backgroundColor: Colors[color] }]}\n      onPress={handleSubmit}\n    >\n      <Text style={styles.buttonText}>{text}</Text>\n    </TouchableOpacity>\n  )\n}\n\nconst styles = StyleSheet.create({\n  button: {\n    marginVertical: 10,\n    borderRadius: 25,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 15,\n    width: '100%',\n  },\n  buttonText: {\n    color: Colors.white,\n    fontSize: 18,\n    fontWeight: '600',\n    textTransform: 'uppercase',\n  },\n})\n","import React from 'react'\nimport { StyleSheet, Switch, Text, View } from 'react-native'\nimport { useFormikContext } from 'formik'\n\nimport Colors from './colors'\n\nexport default function FormSwitch({\n  name,\n  title,\n  onChange = (x) => x,\n  ...otherProps\n}) {\n  const { values, setFieldValue } = useFormikContext()\n  const value = values[name]\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>{title}</Text>\n      <Switch\n        value={value}\n        onValueChange={(value) => {\n          onChange(value)\n          setFieldValue(name, value)\n        }}\n        {...otherProps}\n      />\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    flexDirection: 'row',\n  },\n  title: {\n    color: Colors.white,\n    fontSize: 18,\n    fontWeight: '600',\n    marginRight: 5,\n  },\n})\n","import Base from './Forms/Form'\nimport FormField from './Forms/FormField'\nimport FormButton from './Forms/FormButton'\nimport FormErrorMessage from './Forms/FormErrorMessage'\nimport FormSwitch from './Forms/FormSwitch'\n\nconst Form = (props) => Base(props)\n\nForm.Field = FormField\nForm.Button = FormButton\nForm.ErrorMessage = FormErrorMessage\nForm.Switch = FormSwitch\n\nexport default Form\n","import React from 'react'\nimport { Formik } from 'formik'\n\nexport default function Form({\n  children,\n  initialValues,\n  onSubmit,\n  validationSchema,\n}) {\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={validationSchema}\n      onSubmit={onSubmit}\n    >\n      {() => <React.Fragment>{children}</React.Fragment>}\n    </Formik>\n  )\n}\n","import React from 'react'\nimport { useFormikContext } from 'formik'\n\nimport FormErrorMessage from './FormErrorMessage'\nimport FormTextInput from './FormTextInput'\n\nexport default function FormField({ name, width, ...otherProps }) {\n  const {\n    setFieldTouched,\n    setFieldValue,\n    values,\n    errors,\n    touched,\n  } = useFormikContext()\n\n  return (\n    <React.Fragment>\n      <FormTextInput\n        value={values[name]}\n        onChangeText={(text) => setFieldValue(name, text)}\n        onBlur={() => setFieldTouched(name)}\n        width={width}\n        {...otherProps}\n      />\n      <FormErrorMessage error={errors[name]} visible={touched[name]} />\n    </React.Fragment>\n  )\n}\n","import React, { useState } from 'react'\nimport {\n  SafeAreaView,\n  StyleSheet,\n  Text,\n  View,\n  TouchableOpacity,\n} from 'react-native'\nimport { ScrollView } from 'react-native-gesture-handler'\nimport Form from '../components/Form'\n\nconst Field = ({ label, value }) => {\n  return (\n    <View style={styles.fieldContainer}>\n      <Text style={styles.label}>{label}</Text>\n      <Text style={styles.field}>{value}</Text>\n    </View>\n  )\n}\n\nconst DeveloperContactInfoScreen = ({ route, navigation }) => {\n  const [messageSent, setMessageSent] = useState(false)\n\n  const view = () => {\n    setMessageSent(true)\n  }\n\n  const developer = route.params.developer\n\n  const placeholder = 'Enter message to ' + developer.name\n  return (\n    <SafeAreaView style={styles.container}>\n      {!messageSent && (\n        <Text label=\"Name\" style={styles.developerName}>\n          Contact {developer.name}{' '}\n        </Text>\n      )}\n\n      {messageSent ? (\n        <Text label=\"Name\" style={styles.developerName}>\n          Message succesfully sent to {developer.name}!{' '}\n        </Text>\n      ) : (\n        <ScrollView>\n          <Form initialValues={{ message: '' }}>\n            <Form.Field\n              name=\"message\"\n              leftIcon=\"inbox\"\n              placeholder={placeholder}\n              autoCapitalize=\"none\"\n              autoFocus={true}\n              multiline={true}\n              numberOfLines={20}\n            />\n          </Form>\n          <TouchableOpacity style={styles.connectButton} onPress={() => view()}>\n            <Text style={styles.connectText}>Send Message</Text>\n          </TouchableOpacity>\n        </ScrollView>\n      )}\n    </SafeAreaView>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    marginTop: 10,\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    width: '90%',\n  },\n  field: {\n    padding: 5,\n    backgroundColor: 'white',\n    borderRadius: 5,\n    fontSize: 18,\n  },\n  fieldContainer: {\n    marginTop: 10,\n    marginBottom: 20,\n  },\n  label: {\n    fontWeight: 'bold',\n  },\n  developerName: {\n    fontSize: 24,\n    marginBottom: 10,\n    marginLeft: 'auto',\n    marginRight: 'auto',\n  },\n  developerImage: {\n    width: 200,\n    height: 300,\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    marginBottom: 10,\n  },\n  connectButton: {\n    margin: 30,\n    padding: 10,\n    textAlign: 'center',\n    backgroundColor: 'lightblue',\n  },\n  connectText: {\n    fontSize: 22,\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    // fontWeight: 500,\n  },\n})\n\nexport default DeveloperContactInfoScreen\n","export const nonProfsData = {\n  nonprofits: [\n    {\n      id: 0,\n      title: 'Web Development for PI180 Website',\n      company: 'Project Impact 180',\n      descrip: 'We need help building our website',\n      industry: 'Community Leadership',\n      length: '3+ Months', // 0: <1 month, 1: 1-3 months, 2: 3+ months\n    },\n    {\n      id: 1,\n      title: 'Update Ongoing Classes',\n      company: 'We All Code',\n      descrip:\n        'Help us maintain our weekly classes by integrating the information from our schedule into the website each week',\n      industry: 'Education',\n      length: '3+ Months',\n    },\n    {\n      id: 2,\n      title: 'Scholarship/Career Search',\n      company: 'Evanston Church',\n      descrip:\n        'Help us build a platform to match our students with scholarships to apply for',\n      industry: 'Religion',\n      length: 'One Month or Shorter',\n    },\n  ],\n}\n\nexport const jobArray = {\n  jobs: [\n    {\n      companyId: 0,\n      role: 'Web Design',\n      title: 'Frontend Developer',\n      descrip: `We need someone who is comfortable as a frontend developer. HTML/JS/CSS are required skills. Familiarity with React and Bootstrap (or similar) would be helpful!`,\n      prereqs: null,\n      weeklyTime: '5 Hours or Fewer', // 0: <5 hrs/week, 1: 5-10 hrs, 2: 10+ hrs\n      languages: ['JS', 'CSS', 'HTML'],\n    },\n    {\n      companyId: 0,\n      role: 'Backend Development',\n      title: 'Backend Developer',\n      descrip: `Looking for somebody to build and maintain the backend database for our website. Familiarity with C/C++ and SQL are recommended.`,\n      prereqs: null,\n      weeklyTime: '5-10 Hours', // 0: <5 hrs/week, 1: 5-10 hrs, 2: 10+ hrs\n      languages: ['C', 'C++', 'SQL'],\n    },\n    {\n      companyId: 1,\n      role: 'Web Development',\n      title: 'Full-Stack Web Developer',\n      descrip: `We are looking for somebody who is comfortable with full-stack web development. Our app currently uses React on the frontend & Django on the backend, so familiarity with these frameworks would be preferred. Additional bonus if currently pursuing a bachelor's or advanced degree in CS or a related field.`,\n      prereqs: null,\n      weeklyTime: '10+ Hours', // 0: <5 hrs/week, 1: 5-10 hrs, 2: 10+ hrs\n      languages: null,\n    },\n    {\n      companyId: 1,\n      role: 'Web Development',\n      title: 'Android Developer',\n      descrip: `Seeking an Android developer proficient in Kotlin. Industry and/or relevant project experience preferred.`,\n      prereqs: null,\n      weeklyTime: '5-10 Hours', // 0: <5 hrs/week, 1: 5-10 hrs, 2: 10+ hrs\n      languages: ['Java', 'XML'],\n    },\n    {\n      companyId: 1,\n      role: 'Web Development',\n      title: 'iOS Developer',\n      descrip: `Searching for an iOS developer with significant experience in Swift and/or Objective-C. Please reach out with a portfolio of prior iOS (or mobile) projects.`,\n      prereqs: null,\n      weeklyTime: '5-10 Hours', // 0: <5 hrs/week, 1: 5-10 hrs, 2: 10+ hrs\n      languages: ['Swift', 'Objective-C'],\n    },\n    {\n      companyId: 2,\n      role: 'Web Design',\n      title: 'Web Designer',\n      descrip: `We are looking for somebody to build a website to match students with appropriate scholarship. Tech-stack is currently undecided, but we are thinking React or Angular on the frontend & Node.js on the backend. Added bonus if currently pursuing a bachelor's or advanced degree in CS.`,\n      prereqs: null,\n      weeklyTime: '10+ Hours', // 0: <5 hrs/week, 1: 5-10 hrs, 2: 10+ hrs\n      languages: ['HTML', 'JS', 'CSS'],\n    },\n    {\n      companyId: 2,\n      role: 'Backend Development',\n      title: 'Backend Mobile Developer',\n      descrip: `Searching for a developer proficient in React Native (goal is to deploy to both iOS and Android efficiently). Ideal candidate will be familiar with React/React Native, TypeScript, JavaScript, React Hooks, and Redux.`,\n      prereqs: null,\n      weeklyTime: '10+ Hours', // 0: <5 hrs/week, 1: 5-10 hrs, 2: 10+ hrs\n      languages: ['HTML', 'JS', 'CSS', 'TypeScript'],\n    },\n  ],\n}\n","import React from 'react'\nimport {\n  StyleSheet,\n  Text,\n  TouchableOpacity,\n  View,\n  Dimensions,\n} from 'react-native'\nimport { nonProfsData } from '../utils/nonProfData'\n\nconst Job = ({ job, view, matched }) => {\n  // TODO: maybe scale the font size based on the screen width/height?\n  const scaleFont = () => {\n    const width = Dimensions.get('window').width\n    return width > 500 ? 16 : 12\n  }\n\n  return (\n    <TouchableOpacity\n      style={matched ? styles.jobMatched : styles.jobButton}\n      onPress={() => {\n        view(job)\n      }}\n    >\n      <View style={styles.jobInfo}>\n        <Text style={styles.jobName}>{job.title}</Text>\n        <Text style={styles.jobCompany}>{companyParser(job.companyId)}</Text>\n        <Text style={styles.jobTime}>{job.weeklyTime}</Text>\n      </View>\n    </TouchableOpacity>\n  )\n}\n\nconst timeParser = (timeInt) => {\n  if (timeInt === 0) {\n    return '<5 hrs/week'\n  } else if (timeInt === 1) {\n    return '5-10 hrs/week'\n  } else {\n    return '10+ hrs/week'\n  }\n}\n\nconst companyParser = (companyInt) => {\n  return nonProfsData.nonprofits[companyInt].company\n}\n\nconst industryParser = (companyInt) => {\n  return nonProfsData.nonprofits[companyInt].industry\n}\n\nconst styles = StyleSheet.create({\n  jobButton: {\n    borderRadius: 5,\n    borderStyle: 'solid',\n    borderWidth: 1,\n    borderColor: 'black',\n    // justifyContent: 'center',\n    flexDirection: 'row',\n    alignItems: 'center',\n    margin: 10,\n    padding: 10,\n    backgroundColor: 'white',\n  },\n  jobMatched: {\n    borderRadius: 5,\n    borderStyle: 'solid',\n    borderWidth: 3,\n    borderColor: 'green',\n    shadowColor: 'green',\n    shadowOpacity: 0.5,\n    shadowRadius: 10,\n    shadowOffset: {\n      height: 2,\n      width: 2\n    },\n    // justifyContent: 'center',\n    flexDirection: 'row',\n    alignItems: 'center',\n    margin: 10,\n    padding: 10,\n    // backgroundColor: '#289C28', // old (too dark) background color\n    // backgroundColor: '#90ee90', // new (maybe too light?) green color\n    backgroundColor: 'white',\n  },\n  jobInfo: {\n    flexDirection: 'column',\n    flexShrink: 1,\n  },\n  jobName: {\n    fontWeight: 'bold',\n    fontSize: 18,\n  },\n  jobCompany: {\n    fontStyle: 'italic',\n    fontSize: 14,\n    marginBottom: 10,\n  },\n  jobTime: {\n    fontWeight: '300',\n    fontSize: 16,\n  },\n})\n\nexport default Job\n","import React from 'react'\nimport { ScrollView } from 'react-native'\nimport Job from './Job'\n\nconst JobList = ({ jobs, view, matched }) => {\n  return (\n    <ScrollView>\n      {jobs.map((job, i) => (\n        <Job key={i} view={view} job={job} matched={matched[i]} />\n      ))}\n    </ScrollView>\n  )\n}\n\nexport default JobList\n","import React, { useState } from 'react'\nimport { SafeAreaView, StatusBar, StyleSheet } from 'react-native'\n//import { SearchBar } from 'react-native-elements'\nimport JobList from '../components/JobList'\nimport { jobArray, nonProfsData } from '../utils/nonProfData'\n//import { getFuse } from '../utils/search'\n\nconst Banner = ({ title }) => (\n  <Text style={styles.bannerStyle}>{title || '[loading...]'}</Text>\n)\n\nconst JobDisplayScreen = ({ route, navigation }) => {\n  const preferences = route.params.preferences\n  console.log(preferences);\n\n  //const [search, updateSearch] = useState('')\n\n  // Currently hardcoded data\n  const [jobs, setJobs] = useState(jobArray.jobs)\n\n  // As long as one criteria matches, consider the job a match\n  // Also include number of criteria that match in case we might want to rank ...\n  // ... the jobs later on\n  const isMatchBasic = (job) => {\n    let nonprofit = nonProfsData.nonprofits[job.companyId];\n\n    let matches = [preferences['industry'].includes(nonprofit.industry),\n                  preferences['length'].includes(nonprofit.length),\n                  preferences['role'].includes(job.role),\n                  preferences['weeklyTime'].includes(job.weeklyTime)\n    ];\n    \n    let numMatches = matches.filter(match => match).length;\n    return numMatches > 0;\n  };\n\n  // Hacky match. TODO: Fix later! This is a classic AI pattern matching problem...\n  const isMatch = (job) => {\n    let matchBool = true\n    for (let key in preferences) {\n      // job key\n      if (job[key] !== undefined) {\n        if (\n          preferences[key].length !== 0 &&\n          preferences[key].includes(job[key])\n        ) {\n          matchBool = matchBool && true\n        } else {\n          matchBool = false\n        }\n        // company key\n      } else {\n        const nonprof = nonProfsData.nonprofits[job.companyId] // TODO: key instead of index\n        if (\n          preferences[key].length !== 0 &&\n          preferences[key].includes(nonprof[key])\n        ) {\n          matchBool = matchBool && true\n        } else {\n          matchBool = false\n        }\n      }\n    }\n    return matchBool\n  }\n\n  const getOrderedJobs = (jobs) => {\n    let matchedJobs = []\n    let otherJobs = []\n\n    jobs.map((job) => {\n      if (isMatchBasic(job)) { // Use the basic matching algorithm for now\n        matchedJobs.push(job)\n      } else {\n        otherJobs.push(job)\n      }\n    })\n\n    const orderedJobs = matchedJobs.concat(otherJobs)\n\n    const matchMask = new Array(jobs.length)\n    let i = 0\n    for (i; i < matchedJobs.length; i++) {\n      matchMask[i] = true\n    }\n    for (i; i < jobs.length; i++) {\n      matchMask[i] = false\n    }\n    return [orderedJobs, matchMask]\n  }\n\n  const [orderedJobs, matchMask] = getOrderedJobs(jobs)\n\n  // Filtered list of jobs\n  const [jobsShown, setJobsShown] = useState(orderedJobs)\n  const [matched, setMatched] = useState(matchMask)\n\n  // Hacky search with fuse.js\n  //const fuse = getFuse(jobs)\n  //const handleSearch = (search) => {\n  //updateSearch(search)\n  //search === ''\n  //? setJobsShown(jobs)\n  //: setJobsShown(fuse.search(search).map((v) => v.item))\n  //}\n\n  // View job detail\n  const view = (job) => {\n    navigation.navigate('JobDetailScreen', { job })\n  }\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <JobList jobs={jobsShown} view={view} matched={matched} />\n      <StatusBar style=\"auto\" hidden=\"false\" barStyle=\"dark-content\" />\n    </SafeAreaView>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    //alignItems: 'center',\n    justifyContent: 'center',\n    paddingTop: 20,\n    backgroundColor: '#D7EAF9',\n  },\n  bannerStyle: {\n    alignItems: 'center',\n    color: 'white',\n    backgroundColor: '#cc0000ff',\n    fontSize: 28,\n  },\n})\n\nexport default JobDisplayScreen\n","import React from 'react'\nimport {\n  SafeAreaView,\n  StyleSheet,\n  Text,\n  View,\n  TouchableOpacity,\n} from 'react-native'\nimport { ScrollView } from 'react-native-gesture-handler'\nimport { nonProfsData } from '../utils/nonProfData'\n\nconst Field = ({ label, value }) => {\n  return (\n    <View style={styles.fieldContainer}>\n      <Text style={styles.label}>{label}</Text>\n      <Text style={styles.field}>{value}</Text>\n    </View>\n  )\n}\n\nconst jobProps = {\n  role: 'Role',\n  descrip: 'Description',\n  weeklyTime: 'Weekly Time',\n  languages: 'Languages',\n}\n\nconst companyProps = {\n  company: 'Name',\n  title: 'Project',\n  descrip: 'Description',\n  industry: 'Industry',\n  length: 'Project Duration',\n}\n\nconst JobDetailScreen = ({ route, navigation }) => {\n  const view = (nonprof) => {\n    navigation.navigate('NonprofContactInfoScreen', { nonprof })\n  }\n\n  const job = route.params.job\n  const nonprof = nonProfsData.nonprofits.filter(\n    (obj) => obj.id === job.companyId\n  )[0]\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <Text label=\"Name\" style={styles.name}>\n        {job.title}\n      </Text>\n\n      <ScrollView>\n        {Object.keys(jobProps).map(\n          (key) =>\n            job[key] && (\n              <Field key={key} label={jobProps[key]} value={job[key]} />\n            )\n        )}\n        <Text label=\"Name\" style={styles.name}>\n          About the non-profit\n        </Text>\n        {Object.keys(companyProps).map(\n          (key) =>\n            nonprof[key] && (\n              <Field key={key} label={companyProps[key]} value={nonprof[key]} />\n            )\n        )}\n      </ScrollView>\n\n      <TouchableOpacity\n        style={styles.connectButton}\n        onPress={() => view(nonprof)}\n      >\n        <Text style={styles.connectText}>Connect</Text>\n      </TouchableOpacity>\n    </SafeAreaView>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    marginTop: 10,\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    width: '90%',\n  },\n  field: {\n    padding: 5,\n    backgroundColor: 'white',\n    borderRadius: 5,\n    fontSize: 18,\n  },\n  fieldContainer: {\n    marginTop: 10,\n    marginBottom: 20,\n  },\n  label: {\n    fontWeight: 'bold',\n  },\n  name: {\n    fontSize: 24,\n    marginBottom: 10,\n    marginLeft: 'auto',\n    marginRight: 'auto',\n  },\n  developerImage: {\n    width: 200,\n    height: 300,\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    marginBottom: 10,\n  },\n  connectButton: {\n    margin: 30,\n    padding: 10,\n    textAlign: 'center',\n    backgroundColor: 'lightblue',\n  },\n  connectText: {\n    fontSize: 22,\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    // fontWeight: 500,\n  },\n})\n\nexport default JobDetailScreen\n","import React, { useState } from 'react'\nimport { SafeAreaView, StyleSheet, Text, TouchableOpacity } from 'react-native'\nimport { ScrollView } from 'react-native-gesture-handler'\nimport Form from '../components/Form'\n\nconst NonprofContactInfoScreen = ({ route, navigation }) => {\n  const [messageSent, setMessageSent] = useState(false)\n\n  const view = () => {\n    setMessageSent(true)\n  }\n\n  const nonprof = route.params.nonprof\n  const nonprofName = nonprof.company\n\n  const placeholder = 'Enter message to ' + nonprofName\n  return (\n    <SafeAreaView style={styles.container}>\n      {!messageSent && (\n        <Text label=\"Name\" style={styles.name}>\n          Contact {nonprofName}\n        </Text>\n      )}\n\n      {messageSent ? (\n        <Text label=\"Name\" style={styles.name}>\n          Message succesfully sent to {nonprofName}!\n        </Text>\n      ) : (\n        <ScrollView>\n          <Form initialValues={{ message: '' }}>\n            <Form.Field\n              name=\"message\"\n              leftIcon=\"inbox\"\n              placeholder={placeholder}\n              autoCapitalize=\"none\"\n              autoFocus={true}\n              multiline={true}\n              numberOfLines={20}\n            />\n          </Form>\n          <TouchableOpacity style={styles.connectButton} onPress={() => view()}>\n            <Text style={styles.connectText}>Send Message</Text>\n          </TouchableOpacity>\n        </ScrollView>\n      )}\n    </SafeAreaView>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    marginTop: 10,\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    width: '90%',\n  },\n  field: {\n    padding: 5,\n    backgroundColor: 'white',\n    borderRadius: 5,\n    fontSize: 18,\n  },\n  fieldContainer: {\n    marginTop: 10,\n    marginBottom: 20,\n  },\n  label: {\n    fontWeight: 'bold',\n  },\n  name: {\n    fontSize: 24,\n    marginBottom: 10,\n    marginLeft: 'auto',\n    marginRight: 'auto',\n  },\n  developerImage: {\n    width: 200,\n    height: 300,\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    marginBottom: 10,\n  },\n  connectButton: {\n    margin: 30,\n    padding: 10,\n    textAlign: 'center',\n    backgroundColor: 'lightblue',\n  },\n  connectText: {\n    fontSize: 22,\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    // fontWeight: 500,\n  },\n})\n\nexport default NonprofContactInfoScreen\n","import 'react-native-gesture-handler'\nimport React from 'react'\nimport { createStackNavigator } from '@react-navigation/stack'\nimport { NavigationContainer } from '@react-navigation/native'\nimport SearchScreen from './screens/SearchScreen'\nimport AboutScreen from './screens/AboutScreen'\nimport DeveloperProfileScreen from './screens/DeveloperProfileScreen'\nimport ChooseAppViewScreen from './screens/ChooseAppViewScreen'\nimport DeveloperPreferenceSelectionScreen from './screens/DeveloperPreferenceSelectionScreen'\nimport DeveloperContactInfoScreen from './screens/DeveloperContactInfoScreen'\nimport JobListScreen from './screens/JobListScreen'\nimport JobDetailScreen from './screens/JobDetailScreen'\nimport NonprofContactInfoScreen from './screens/NonprofContactInfoScreen'\n\nconst Stack = createStackNavigator()\n\nexport default function App() {\n  return (\n    <NavigationContainer>\n      <Stack.Navigator>\n        <Stack.Screen\n          name=\"ChooseAppViewScreen\"\n          component={ChooseAppViewScreen}\n          options={{ title: 'NonProfDev' }}\n        />\n        <Stack.Screen\n          name=\"DeveloperPreferenceSelectionScreen\"\n          component={DeveloperPreferenceSelectionScreen}\n          options={{ title: 'Preference Selection' }}\n        />\n        <Stack.Screen\n          name=\"JobListScreen\"\n          component={JobListScreen}\n          options={{ title: 'Matched Jobs' }}\n        />\n        <Stack.Screen\n          name=\"JobDetailScreen\"\n          component={JobDetailScreen}\n          options={{ title: 'Job Details' }}\n        />\n        <Stack.Screen\n          name=\"NonprofContactInfoScreen\"\n          component={NonprofContactInfoScreen}\n          options={{ title: 'Job Details' }}\n        />\n        <Stack.Screen\n          name=\"SearchScreen\"\n          component={SearchScreen}\n          options={{ title: 'NonProfDev' }}\n        />\n        <Stack.Screen\n          name=\"DeveloperProfileScreen\"\n          component={DeveloperProfileScreen}\n          options={{ title: 'Developer Profile' }}\n        />\n        <Stack.Screen\n          name=\"AboutScreen\"\n          component={AboutScreen}\n          options={{ title: 'About' }}\n        />\n        <Stack.Screen\n          name=\"DeveloperContactInfoScreen\"\n          component={DeveloperContactInfoScreen}\n          options={{ title: 'Contact Developer' }}\n        />\n      </Stack.Navigator>\n    </NavigationContainer>\n  )\n}\n"],"sourceRoot":""}